'use strict';(function(a){function b(a,b,c,d){d=void 0===d||0===d?1:d;a=a.slice(c,c+b.BYTES_PER_ELEMENT*d);b=new b(a);if(void 0===d||1===d)return b[0];a=[];for(c=0;c<d;c++)a.push(b[c]);return a}var c={0:function(a){return{position:[a.getInt32(0,!0),a.getInt32(4,!0),a.getInt32(8,!0)],intensity:a.getUint16(12,!0),classification:a.getUint8(16,!0)}},1:function(a){return{position:[a.getInt32(0,!0),a.getInt32(4,!0),a.getInt32(8,!0)],intensity:a.getUint16(12,!0),classification:a.getUint8(16,!0)}},2:function(a){return{position:[a.getInt32(0,
!0),a.getInt32(4,!0),a.getInt32(8,!0)],intensity:a.getUint16(12,!0),classification:a.getUint8(16,!0),color:[a.getUint16(20,!0),a.getUint16(22,!0),a.getUint16(24,!0)]}},3:function(a){return{position:[a.getInt32(0,!0),a.getInt32(4,!0),a.getInt32(8,!0)],intensity:a.getUint16(12,!0),classification:a.getUint8(16,!0),color:[a.getUint16(28,!0),a.getUint16(30,!0),a.getUint16(32,!0)]}}},e={};a.handleMessage=function(a){var b=a.data,c=e[b.id];delete e[b.id];setTimeout(function(){if(b.error)return c.reject(Error(b.message||
'Unknown Error'));if(b.hasOwnProperty('count')&&b.hasOwnProperty('hasMoreData'))return c.resolve({buffer:b.result,count:b.count,hasMoreData:b.hasMoreData});c.resolve(b.result)},0)};var d=function(a){this.arraybuffer=a};d.prototype.open=function(){this.readOffset=0;return new Promise(function(a,b){setTimeout(a,0)})};d.prototype.getHeader=function(){var a=this;return new Promise(function(c,d){setTimeout(function(){var d=a.arraybuffer,e={};e.pointsOffset=b(d,Uint32Array,96);e.pointsFormatId=b(d,Uint8Array,
104);e.pointsStructSize=b(d,Uint16Array,105);e.pointsCount=b(d,Uint32Array,107);var f=131;e.scale=b(d,Float64Array,f,3);f+=24;e.offset=b(d,Float64Array,f,3);d=b(d,Float64Array,f+24,6);e.maxs=[d[0],d[2],d[4]];e.mins=[d[1],d[3],d[5]];a.header=e;c(a.header)},0)})};d.prototype.readData=function(a,b,c){var d=this;return new Promise(function(b,e){setTimeout(function(){if(!d.header)return e(Error('Cannot start reading data till a header request is issued'));if(1>=c){a=Math.min(a,d.header.pointsCount-d.readOffset);
var f=d.header.pointsOffset+d.readOffset*d.header.pointsStructSize;b({buffer:d.arraybuffer.slice(f,f+a*d.header.pointsStructSize),count:a,hasMoreData:d.readOffset+a<d.header.pointsCount});d.readOffset+=a}else{for(var g=Math.min(a*c,d.header.pointsCount-d.readOffset),h=0,k=new Uint8Array(Math.ceil(g/c)*d.header.pointsStructSize),l=0;l<g;l++)0===l%c&&(f=d.header.pointsOffset+d.readOffset*d.header.pointsStructSize,f=new Uint8Array(d.arraybuffer,f,d.header.pointsStructSize),k.set(f,h*d.header.pointsStructSize),
h++),d.readOffset++;b({buffer:k.buffer,count:h,hasMoreData:d.readOffset<d.header.pointsCount})}},0)})};d.prototype.close=function(){var a=this;return new Promise(function(b,c){a.arraybuffer=null;setTimeout(b,0)})};var f=function(a){this.arraybuffer=a;this.ww=Potree.workerPool.getWorker(Potree.scriptPath+'/workers/LASLAZWorker.js');this.nextCB=null;var b=this;this.ww.onmessage=function(a){null!==b.nextCB&&(b.nextCB(a.data),b.nextCB=null)};this.dorr=function(a,c){b.nextCB=c;b.ww.postMessage(a)}};f.prototype.open=
function(){var a=this;return new Promise(function(b,c){a.dorr({type:'open',arraybuffer:a.arraybuffer},function(a){if(1!==a.status)return c(Error('Failed to open file'));b(!0)})})};f.prototype.getHeader=function(){var a=this;return new Promise(function(b,c){a.dorr({type:'header'},function(a){if(1!==a.status)return c(Error('Failed to get header'));b(a.header)})})};f.prototype.readData=function(a,b,c){var d=this;return new Promise(function(e,f){d.dorr({type:'read',count:a,offset:b,skip:c},function(a){if(1!==
a.status)return f(Error('Failed to read data'));e({buffer:a.buffer,count:a.count,hasMoreData:a.hasMoreData})})})};f.prototype.close=function(){var a=this;return new Promise(function(b,c){a.dorr({type:'close'},function(d){Potree.workerPool.returnWorker(Potree.scriptPath+'/workers/LASLAZWorker.js',a.ww);if(1!==d.status)return c(Error('Failed to close file'));b(!0)})})};var g=function(a){this.arraybuffer=a;this.determineVersion();if(12<this.version)throw Error('Only file versions <= 1.2 are supported at this time');
this.determineFormat();if(void 0===c[this.formatId])throw Error('The point format ID is not supported');this.loader=this.isCompressed?new f(this.arraybuffer):new d(this.arraybuffer)};g.prototype.determineFormat=function(){var a=b(this.arraybuffer,Uint8Array,104),c=(a&128)>>7,d=(a&64)>>6;if(1===c&&1===d)throw Error('Old style compression not supported');this.formatId=a&63;this.isCompressed=1===c||1===d};g.prototype.determineVersion=function(){var a=new Int8Array(this.arraybuffer,24,2);this.version=
10*a[0]+a[1];this.versionAsString=a[0]+'.'+a[1]};g.prototype.open=function(){return this.loader.open()};g.prototype.getHeader=function(){return this.loader.getHeader()};g.prototype.readData=function(a,b,c){return this.loader.readData(a,b,c)};g.prototype.close=function(){return this.loader.close()};var h=function(a,b,d,e,f,g,h,q){this.arrayb=a;this.decoder=c[b];this.pointsCount=e;this.pointSize=d;this.scale=f;this.offset=g;this.mins=h;this.maxs=q};h.prototype.getPoint=function(a){if(0>a||a>=this.pointsCount)throw Error('Point index out of range');
a=new DataView(this.arrayb,a*this.pointSize,this.pointSize);return this.decoder(a)};a.LAZLoader=f;a.LASLoader=d;a.LASFile=g;a.LASDecoder=h;a.LASModuleWasLoaded=!1})(this);function BinaryHeap(a){this.content=[];this.scoreFunction=a}
BinaryHeap.prototype={push:function(a){this.content.push(a);this.bubbleUp(this.content.length-1)},pop:function(){var a=this.content[0],b=this.content.pop();0<this.content.length&&(this.content[0]=b,this.sinkDown(0));return a},remove:function(a){for(var b=this.content.length,c=0;c<b;c++)if(this.content[c]==a){a=this.content.pop();if(c==b-1)break;this.content[c]=a;this.bubbleUp(c);this.sinkDown(c);break}},size:function(){return this.content.length},bubbleUp:function(a){for(var b=this.content[a],c=this.scoreFunction(b);0<
a;){var e=Math.floor((a+1)/2)-1,d=this.content[e];if(c>=this.scoreFunction(d))break;this.content[e]=b;this.content[a]=d;a=e}},sinkDown:function(a){for(var b=this.content.length,c=this.content[a],e=this.scoreFunction(c);;){var d=2*(a+1),f=d-1,g=null;if(f<b){var h=this.scoreFunction(this.content[f]);h<e&&(g=f)}d<b&&this.scoreFunction(this.content[d])<(null==g?e:h)&&(g=d);if(null==g)break;this.content[a]=this.content[g];this.content[g]=c;a=g}}};function Potree(){}Potree.version={major:1,minor:6,suffix:'-nogui'};Potree.pointBudget=1E6;Potree.framenumber=0;Potree.numNodesLoading=0;Potree.maxNodesLoading=4;Potree.webgl={shaders:{},vaos:{},vbos:{}};Potree.debug={};Potree.scriptPath=null;document.currentScript.src?(Potree.scriptPath=(new URL(document.currentScript.src+'/..')).href,'/'===Potree.scriptPath.slice(-1)&&(Potree.scriptPath=Potree.scriptPath.slice(0,-1))):console.error('Potree was unable to find its script path using document.currentScript. Is Potree included with a script tag? Does your browser support this function?');
Potree.resourcePath=Potree.scriptPath+'/resources';Potree.ClipTask={NONE:0,HIGHLIGHT:1,SHOW_INSIDE:2,SHOW_OUTSIDE:3};Potree.ClipMethod={INSIDE_ANY:0,INSIDE_ALL:1};Potree.measureTimings=!1;Potree.tempVector3=new THREE.Vector3;class EnumItem{constructor(a){for(let b of Object.keys(a))this[b]=a[b]}inspect(){return`Enum(${this.name}: ${this.value})`}}
class Enum{constructor(a){this.object=a;for(let b of Object.keys(a)){let c=a[b];'object'===typeof c?c.name=b:c={name:b,value:c};this[b]=new EnumItem(c)}}fromValue(a){for(let b of Object.keys(this.object))if(this[b].value===a)return this[b];throw Error(`No enum for value: ${a}`);}}
Potree.Points=class{constructor(){this.boundingBox=new THREE.Box3;this.numPoints=0;this.data={}}add(a){let b=this.numPoints,c=b+a.numPoints,e=Object.keys(this.data),d=Object.keys(a.data);var f=new Set([...e,...d]);for(let g of f)if(e.includes(g)&&d.includes(g))f=new this.data[g].constructor(this.data[g].length+a.data[g].length),f.set(this.data[g],0),f.set(a.data[g],this.data[g].length),this.data[g]=f;else if(e.includes(g)&&!d.includes(g))f=new this.data[g].constructor(this.data[g].length/this.numPoints*
c),f.set(this.data[g],0),this.data[g]=f;else if(!e.includes(g)&&d.includes(g)){f=a.data[g].length/a.numPoints;let d=new a.data[g].constructor(f*c);d.set(a.data[g],f*b);this.data[g]=d}this.numPoints=c;this.boundingBox.union(a.boundingBox)}};
Potree.loadPointCloud=function(a,b,c){let e=function(a){a.name=b;c({type:'pointcloud_loaded',pointcloud:a})};a&&(0===a.indexOf('greyhound://')?Potree.GreyhoundLoader.load(a,function(b){b?(b=new Potree.PointCloudOctree(b),e(b)):console.error(Error(`failed to load point cloud from URL: ${a}`))}):0<a.indexOf('cloud.js')?Potree.POCLoader.load(a,function(b){b?(b=new Potree.PointCloudOctree(b),e(b)):console.error(Error(`failed to load point cloud from URL: ${a}`))}):0<a.indexOf('.vpc')?Potree.PointCloudArena4DGeometry.load(a,
function(b){b?(b=new Potree.PointCloudArena4D(b),e(b)):console.error(Error(`failed to load point cloud from URL: ${a}`))}):console.error(Error(`failed to load point cloud from URL: ${a}`)))};
Potree.updatePointClouds=function(a,b,c){Potree.lru||(Potree.lru=new LRU);for(var e of a){let a=performance.now();for(let b of e.profileRequests)if(b.update(),5<performance.now()-a)break;performance.now()}e=Potree.updateVisibility(a,b,c);for(let d of a)d.updateMaterial(d.material,d.visibleNodes,b,c),d.updateVisibleBounds();Potree.getLRU().freeMemory();return e};Potree.getLRU=function(){Potree.lru||(Potree.lru=new LRU);return Potree.lru};
Potree.updateVisibilityStructures=function(a,b,c){c=[];let e=[],d=new BinaryHeap(function(a){return 1/a.weight});for(let l=0;l<a.length;l++){let m=a[l];if(m.initialized()){m.numVisibleNodes=0;m.numVisiblePoints=0;m.deepestVisibleLevel=0;m.visibleNodes=[];m.visibleGeometry=[];b.updateMatrixWorld();var f=new THREE.Frustum,g=b.matrixWorldInverse,h=m.matrixWorld,k=b.clone();k.near=Math.min(b.near,.1);k.updateProjectionMatrix();k=b.projectionMatrix;g=(new THREE.Matrix4).multiply(k).multiply(g).multiply(h);
f.setFromMatrix(g);c.push(f);f=b.matrixWorld;h=(new THREE.Matrix4).getInverse(h);h=(new THREE.Matrix4).multiply(h).multiply(f);h=(new THREE.Vector3).setFromMatrixPosition(h);e.push(h);m.visible&&null!==m.root&&d.push({pointcloud:l,node:m.root,weight:Number.MAX_VALUE});m.root.isTreeNode()&&m.hideDescendants(m.root.sceneNode);for(h=0;h<m.boundingBoxNodes.length;h++)m.boundingBoxNodes[h].visible=!1}}return{frustums:c,camObjPositions:e,priorityQueue:d}};
Potree.getDEMWorkerInstance=function(){Potree.DEMWorkerInstance||(Potree.DEMWorkerInstance=Potree.workerPool.getWorker(Potree.scriptPath+'/workers/DEMWorker.js'));return Potree.DEMWorkerInstance};
Potree.updateVisibility=function(a,b,c){let e=0,d=new Map(a.map((a)=>[a,0])),f=[],g=[],h=[],k=Infinity;var l=Potree.updateVisibilityStructures(a,b,c);let m=l.frustums,n=l.camObjPositions;l=l.priorityQueue;let p=0;c=c.domElement.clientHeight;Potree._pointcloudTransformVersion||(Potree._pointcloudTransformVersion=new Map);let u=Potree._pointcloudTransformVersion;for(var r of a)if(r.visible)if(r.updateMatrixWorld(),u.has(r)){var q=u.get(r);q.transform.equals(r.matrixWorld)||(q.number++,q.transform.copy(r.matrixWorld),
r.dispatchEvent({type:'transformation_changed',target:r}))}else u.set(r,{number:0,transform:r.matrixWorld.clone()});for(;0<l.size();){r=l.pop();q=r.node;var C=r.parent;let t=a[r.pointcloud];var A=q.getBoundingBox();let B=n[r.pointcloud];var v=m[r.pointcloud].intersectsBox(A);A=t.maxLevel||Infinity;var w=q.getLevel();v=(v=(v=v&&!(e+q.getNumPoints()>Potree.pointBudget))&&!(d.get(t)+q.getNumPoints()>t.pointBudget))&&w<A;q.spacing?k=Math.min(k,q.spacing):q.geometryNode&&q.geometryNode.spacing&&(k=Math.min(k,
q.geometryNode.spacing));if(e+q.getNumPoints()>Potree.pointBudget)break;if(v)for(e+=q.getNumPoints(),A=d.get(t),d.set(t,A+q.getNumPoints()),t.numVisibleNodes++,t.numVisiblePoints+=q.getNumPoints(),!q.isGeometryNode()||C&&!C.isTreeNode()||(q.isLoaded()&&2>p?(q=t.toTreeNode(q,C),p++):(h.push(q),g.push(q))),q.isTreeNode()&&(Potree.getLRU().touch(q.geometryNode),q.sceneNode.visible=!0,q.sceneNode.material=t.material,f.push(q),t.visibleNodes.push(q),void 0===q._transformVersion&&(q._transformVersion=-1),
C=u.get(t),q._transformVersion!==C.number&&(q.sceneNode.updateMatrix(),q.sceneNode.matrixWorld.multiplyMatrices(t.matrixWorld,q.sceneNode.matrix),q._transformVersion=C.number),t.showBoundingBox&&!q.boundingBoxNode&&q.getBoundingBox?(C=new Potree.Box3Helper(q.getBoundingBox()),C.matrixAutoUpdate=!1,t.boundingBoxNodes.push(C),q.boundingBoxNode=C,q.boundingBoxNode.matrix.copy(t.matrixWorld)):t.showBoundingBox?(q.boundingBoxNode.visible=!0,q.boundingBoxNode.matrix.copy(t.matrixWorld)):!t.showBoundingBox&&
q.boundingBoxNode&&(q.boundingBoxNode.visible=!1)),C=q.getChildren(),A=0;A<C.length;A++){w=C[A];var x=0;if(b.isPerspectiveCamera){v=w.getBoundingSphere(new THREE.Sphere);var y=v.center,z=B.x-y.x;x=B.y-y.y;y=B.z-y.z;z=Math.sqrt(z*z+x*x+y*y);v=v.radius;x=.5*c/(Math.tan(b.fov*Math.PI/180/2)*z)*v;if(x<t.minimumNodePixelSize)continue;0>z-v&&(x=Number.MAX_VALUE)}else v=w.getBoundingBox(),z=w.getBoundingSphere(new THREE.Sphere).center.distanceTo(B),x=v.max.clone().sub(v.min).length()/z;l.push({pointcloud:r.pointcloud,
node:w,parent:q,weight:x})}}a=a.filter((a)=>a.generateDEM&&a.dem instanceof Potree.DEM);for(var B of a)a=B.visibleNodes.filter((a)=>4>=a.getLevel()),B.dem.update(a);for(B=0;B<Math.min(Potree.maxNodesLoading,h.length);B++)h[B].load();return{visibleNodes:f,numVisiblePoints:e,lowestSpacing:k}};
Potree.paramThreeToGL=function(a,b){let c;if(b===THREE.RepeatWrapping)return a.REPEAT;if(b===THREE.ClampToEdgeWrapping)return a.CLAMP_TO_EDGE;if(b===THREE.MirroredRepeatWrapping)return a.MIRRORED_REPEAT;if(b===THREE.NearestFilter)return a.NEAREST;if(b===THREE.NearestMipMapNearestFilter)return a.NEAREST_MIPMAP_NEAREST;if(b===THREE.NearestMipMapLinearFilter)return a.NEAREST_MIPMAP_LINEAR;if(b===THREE.LinearFilter)return a.LINEAR;if(b===THREE.LinearMipMapNearestFilter)return a.LINEAR_MIPMAP_NEAREST;
if(b===THREE.LinearMipMapLinearFilter)return a.LINEAR_MIPMAP_LINEAR;if(b===THREE.UnsignedByteType)return a.UNSIGNED_BYTE;if(b===THREE.UnsignedShort4444Type)return a.UNSIGNED_SHORT_4_4_4_4;if(b===THREE.UnsignedShort5551Type)return a.UNSIGNED_SHORT_5_5_5_1;if(b===THREE.UnsignedShort565Type)return a.UNSIGNED_SHORT_5_6_5;if(b===THREE.ByteType)return a.BYTE;if(b===THREE.ShortType)return a.SHORT;if(b===THREE.UnsignedShortType)return a.UNSIGNED_SHORT;if(b===THREE.IntType)return a.INT;if(b===THREE.UnsignedIntType)return a.UNSIGNED_INT;
if(b===THREE.FloatType)return a.FLOAT;if(b===THREE.HalfFloatType&&(c=extensions.get('OES_texture_half_float'),null!==c))return c.HALF_FLOAT_OES;if(b===THREE.AlphaFormat)return a.ALPHA;if(b===THREE.RGBFormat)return a.RGB;if(b===THREE.RGBAFormat)return a.RGBA;if(b===THREE.LuminanceFormat)return a.LUMINANCE;if(b===THREE.LuminanceAlphaFormat)return a.LUMINANCE_ALPHA;if(b===THREE.DepthFormat)return a.DEPTH_COMPONENT;if(b===THREE.DepthStencilFormat)return a.DEPTH_STENCIL;if(b===THREE.AddEquation)return a.FUNC_ADD;
if(b===THREE.SubtractEquation)return a.FUNC_SUBTRACT;if(b===THREE.ReverseSubtractEquation)return a.FUNC_REVERSE_SUBTRACT;if(b===THREE.ZeroFactor)return a.ZERO;if(b===THREE.OneFactor)return a.ONE;if(b===THREE.SrcColorFactor)return a.SRC_COLOR;if(b===THREE.OneMinusSrcColorFactor)return a.ONE_MINUS_SRC_COLOR;if(b===THREE.SrcAlphaFactor)return a.SRC_ALPHA;if(b===THREE.OneMinusSrcAlphaFactor)return a.ONE_MINUS_SRC_ALPHA;if(b===THREE.DstAlphaFactor)return a.DST_ALPHA;if(b===THREE.OneMinusDstAlphaFactor)return a.ONE_MINUS_DST_ALPHA;
if(b===THREE.DstColorFactor)return a.DST_COLOR;if(b===THREE.OneMinusDstColorFactor)return a.ONE_MINUS_DST_COLOR;if(b===THREE.SrcAlphaSaturateFactor)return a.SRC_ALPHA_SATURATE;if(b===THREE.RGB_S3TC_DXT1_Format||b===RGBA_S3TC_DXT1_Format||b===THREE.RGBA_S3TC_DXT3_Format||b===RGBA_S3TC_DXT5_Format)if(c=extensions.get('WEBGL_compressed_texture_s3tc'),null!==c){if(b===THREE.RGB_S3TC_DXT1_Format)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(b===THREE.RGBA_S3TC_DXT1_Format)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;
if(b===THREE.RGBA_S3TC_DXT3_Format)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(b===THREE.RGBA_S3TC_DXT5_Format)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(b===THREE.RGB_PVRTC_4BPPV1_Format||b===THREE.RGB_PVRTC_2BPPV1_Format||b===THREE.RGBA_PVRTC_4BPPV1_Format||b===THREE.RGBA_PVRTC_2BPPV1_Format)if(c=extensions.get('WEBGL_compressed_texture_pvrtc'),null!==c){if(b===THREE.RGB_PVRTC_4BPPV1_Format)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(b===THREE.RGB_PVRTC_2BPPV1_Format)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
if(b===THREE.RGBA_PVRTC_4BPPV1_Format)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(b===THREE.RGBA_PVRTC_2BPPV1_Format)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(b===THREE.RGB_ETC1_Format&&(c=extensions.get('WEBGL_compressed_texture_etc1'),null!==c))return c.COMPRESSED_RGB_ETC1_WEBGL;if(b===THREE.MinEquation||b===THREE.MaxEquation)if(c=extensions.get('EXT_blend_minmax'),null!==c){if(b===THREE.MinEquation)return c.MIN_EXT;if(b===THREE.MaxEquation)return c.MAX_EXT}return b===UnsignedInt248Type&&(c=
extensions.get('WEBGL_depth_texture'),null!==c)?c.UNSIGNED_INT_24_8_WEBGL:0};Potree.attributeLocations={position:0,color:1,intensity:2,classification:3,returnNumber:4,numberOfReturns:5,pointSourceID:6,indices:7,normal:8,spacing:9};
Potree.Shader=class{constructor(a,b,c,e){this.gl=a;this.name=b;this.vsSource=c;this.fsSource=e;this.cache=new Map;this.program=this.fs=this.vs=null;this.uniformLocations={};this.attributeLocations={};this.update(c,e)}update(a,b){this.vsSource=a;this.fsSource=b;this.linkProgram()}compileShader(a,b){let c=this.gl;c.shaderSource(a,b);c.compileShader(a);if(!c.getShaderParameter(a,c.COMPILE_STATUS))throw a=c.getShaderInfoLog(a),b=b.split('\n').map((a,b)=>`${b+1}`.padEnd(5)+a).join('\n'),`could not compile shader ${this.name}: ${a}, \n${b}`;
}linkProgram(){var a=this.gl;this.uniformLocations={};this.attributeLocations={};a.useProgram(null);var b=this.cache.get(`${this.vsSource}, ${this.fsSource}`);if(b)this.program=b.program,this.vs=b.vs,this.fs=b.fs,this.attributeLocations=b.attributeLocations,this.uniformLocations=b.uniformLocations;else{this.vs=a.createShader(a.VERTEX_SHADER);this.fs=a.createShader(a.FRAGMENT_SHADER);this.program=a.createProgram();for(var c of Object.keys(Potree.attributeLocations))a.bindAttribLocation(this.program,
Potree.attributeLocations[c],c);this.compileShader(this.vs,this.vsSource);this.compileShader(this.fs,this.fsSource);b=this.program;a.attachShader(b,this.vs);a.attachShader(b,this.fs);a.linkProgram(b);a.detachShader(b,this.vs);a.detachShader(b,this.fs);if(!a.getProgramParameter(b,a.LINK_STATUS))throw a=a.getProgramInfoLog(b),`could not link program ${this.name}: ${a}`;c=a.getProgramParameter(b,a.ACTIVE_ATTRIBUTES);for(var e=0;e<c;e++){var d=a.getActiveAttrib(b,e),f=a.getAttribLocation(b,d.name);this.attributeLocations[d.name]=
f}c=a.getProgramParameter(b,a.ACTIVE_UNIFORMS);for(e=0;e<c;e++)d=a.getActiveUniform(b,e),f=a.getUniformLocation(b,d.name),this.uniformLocations[d.name]=f;this.cache.set(`${this.vsSource}, ${this.fsSource}`,{program:this.program,vs:this.vs,fs:this.fs,attributeLocations:this.attributeLocations,uniformLocations:this.uniformLocations})}}setUniformMatrix4(a,b){const c=this.gl;a=this.uniformLocations[a];null!=a&&(b=new Float32Array(b.elements),c.uniformMatrix4fv(a,!1,b))}setUniform1f(a,b){a=this.uniformLocations[a];
null!=a&&this.gl.uniform1f(a,b)}setUniformBoolean(a,b){a=this.uniformLocations[a];null!=a&&this.gl.uniform1i(a,b)}setUniformTexture(a,b){a=this.uniformLocations[a];null!=a&&this.gl.uniform1i(a,b)}setUniform2f(a,b){a=this.uniformLocations[a];null!=a&&this.gl.uniform2f(a,b[0],b[1])}setUniform3f(a,b){a=this.uniformLocations[a];null!=a&&this.gl.uniform3f(a,b[0],b[1],b[2])}setUniform(a,b){b.constructor===THREE.Matrix4?this.setUniformMatrix4(a,b):'number'===typeof b?this.setUniform1f(a,b):'boolean'===typeof b?
this.setUniformBoolean(a,b):b instanceof Potree.WebGLTexture?this.setUniformTexture(a,b):b instanceof Array?2===b.length?this.setUniform2f(a,b):3===b.length&&this.setUniform3f(a,b):console.error('unhandled uniform type: ',a,b)}setUniform1i(a,b){a=this.uniformLocations[a];null!=a&&this.gl.uniform1i(a,b)}};
Potree.WebGLTexture=class{constructor(a,b){this.gl=a;this.texture=b;this.id=a.createTexture();this.target=a.TEXTURE_2D;this.version=-1;this.update(b)}update(){if(this.texture.image){var a=this.gl,b=this.texture;if(this.version!==b.version){this.target=a.TEXTURE_2D;a.bindTexture(this.target,this.id);var c=Potree.paramThreeToGL(a,b.format),e=b.image.width,d=b.image.height,f=Potree.paramThreeToGL(a,b.type);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,b.flipY);a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,b.premultiplyAlpha);
a.pixelStorei(a.UNPACK_ALIGNMENT,b.unpackAlignment);if(b instanceof THREE.DataTexture){var g=b.image.data;a.texParameteri(this.target,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);a.texParameteri(this.target,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);a.texParameteri(this.target,a.TEXTURE_MAG_FILTER,Potree.paramThreeToGL(a,b.magFilter));a.texParameteri(this.target,a.TEXTURE_MIN_FILTER,Potree.paramThreeToGL(a,b.minFilter));a.texImage2D(this.target,0,c,e,d,0,c,f,g)}else b instanceof THREE.CanvasTexture&&(g=b.image,a.texParameteri(this.target,
a.TEXTURE_WRAP_S,Potree.paramThreeToGL(a,b.wrapS)),a.texParameteri(this.target,a.TEXTURE_WRAP_T,Potree.paramThreeToGL(a,b.wrapT)),a.texParameteri(this.target,a.TEXTURE_MAG_FILTER,Potree.paramThreeToGL(a,b.magFilter)),a.texParameteri(this.target,a.TEXTURE_MIN_FILTER,Potree.paramThreeToGL(a,b.minFilter)),a.texImage2D(this.target,0,c,c,f,g));a.bindTexture(this.target,null);this.version=b.version}}else this.version=this.texture.version}};
Potree.WebGLBuffer=class{constructor(){this.numElements=0;this.vao=null;this.vbos=new Map}};
Potree.DEMNode=class{constructor(a,b,c){this.name=a;this.box=b;this.tileSize=c;this.level=this.name.length-1;this.data=new Float32Array(c*c);this.data.fill(-Infinity);this.children=[];this.mipMap=[this.data];this.mipMapNeedsUpdate=!0}createMipMap(){this.mipMap=[this.data];let a=this.tileSize,b=parseInt(a/2),c=this.data;for(;1<b;){let e=new Float32Array(b*b);for(let d=0;d<b;d++)for(let f=0;f<b;f++){let g=c[2*d+2*f*a],h=c[2*d+2*f*a+a],k=c[2*d+1+2*f*a],l=c[2*d+1+2*f*a+a],[m,n]=[0,0];isFinite(g)&&(m+=
g,n+=1);isFinite(h)&&(m+=h,n+=1);isFinite(k)&&(m+=k,n+=1);isFinite(l)&&(m+=l,n+=1);m/=n;e[d+f*b]=m}this.mipMap.push(e);c=e;a=b;b=parseInt(b/2)}this.mipMapNeedsUpdate=!1}uv(a){let b=this.box.getSize(new THREE.Vector3);return[(a.x-this.box.min.x)/b.x,(a.y-this.box.min.y)/b.y]}heightAtMipMapLevel(a,b){a=this.uv(a);var c=parseInt(this.tileSize/parseInt(2**b)),e=this.mipMap[b];b=Math.min(a[0]*c,c-1);a=Math.min(a[1]*c,c-1);var d=b%1,f=a%1,[g,h]=[Math.floor(b),Math.ceil(b)],[k,l]=[Math.floor(a),Math.ceil(a)];
b=e[g+c*k];a=e[g+c*l];let m=e[h+c*k];c=e[h+c*l];e=isFinite(b)?(1-d)*(1-f):0;let n=isFinite(a)?(1-d)*f:0,p=isFinite(m)?d*(1-f):0;d=isFinite(c)?d*f:0;f=e+n+p+d;e/=f;n/=f;p/=f;d/=f;if(0===f)return null;f=0;isFinite(b)&&(f+=b*e);isFinite(a)&&(f+=a*n);isFinite(m)&&(f+=m*p);isFinite(c)&&(f+=c*d);return f}height(a){let b=null;for(let c=0;c<this.mipMap.length&&(b=this.heightAtMipMapLevel(a,c),null===b);c++);return b}traverse(a,b=0){a(this,b);for(let c of this.children.filter((a)=>void 0!==a))c.traverse(a,
b+1)}};
Potree.DEM=class{constructor(a){this.pointcloud=a;this.boundingBox=this.matrix=null;this.tileSize=64;this.root=null;this.version=0}expandAndFindByBox(a,b){if(0===b)return[this.root];let c=[],e=[this.root];for(;0<e.length;){let k=e.pop(),l=k.box.getSize(new THREE.Vector3);var d=(a.min.x-k.box.min.x)/l.x,f=(a.min.y-k.box.min.y)/l.y,g=(a.max.x-k.box.max.x)/l.x,h=(a.max.y-k.box.max.y)/l.y;d=.5>d?0:1;f=.5>f?0:1;g=.5>g?0:1;h=.5>h?0:1;d=0===d&&0===f&&1===g&&1===h?[0,1,2,3]:d===g&&f===h?[d<<1|f]:[d<<1|f,
g<<1|h];for(let a of d)void 0===k.children[a]&&(d=k.box.clone(),0<(a&2)?d.min.x+=l.x/2:d.max.x-=l.x/2,0<(a&1)?d.min.y+=l.y/2:d.max.y-=l.y/2,d=new Potree.DEMNode(k.name+a,d,this.tileSize),k.children[a]=d),d=k.children[a],d.level<b?e.push(d):c.push(d)}return c}childIndex(a){let [b,c]=a.map((a)=>.5>a?0:1);return b<<1|c}height(a){if(!this.root)return 0;let b=null,c=[this.root];for(;;){let d=c[c.length-1];var e=d.height(a);null!==e&&(b=e);e=d.uv(a);e=this.childIndex(e);if(d.children[e])c.push(d.children[e]);
else break}return b+this.pointcloud.position.z}update(a){if(!Potree.getDEMWorkerInstance().working){null!==this.matrix&&this.matrix.equals(this.pointcloud.matrixWorld)||(this.matrix=this.pointcloud.matrixWorld.clone(),this.boundingBox=this.pointcloud.boundingBox.clone().applyMatrix4(this.matrix),this.root=new Potree.DEMNode('r',this.boundingBox,this.tileSize),this.version++);var b=null;for(let c of a)if(void 0===c.demVersion||c.demVersion<this.version){b=c;break}if(null!==b){var c=b.getBoundingBox().clone().applyMatrix4(this.matrix),
e=c.getSize(new THREE.Vector3),d=this.expandAndFindByBox(c,b.getLevel());b.demVersion=this.version;Potree.getDEMWorkerInstance().onmessage=(a)=>{a=new Float32Array(a.data.dem.data);for(let b of d){let d=b.box.getSize(new THREE.Vector3);for(let f=0;f<this.tileSize;f++)for(let g=0;g<this.tileSize;g++){let h=this.tileSize*(b.box.min.x+f/(this.tileSize-1)*d.x-c.min.x)/e.x,k=this.tileSize*(b.box.min.y+g/(this.tileSize-1)*d.y-c.min.y)/e.y;0>h||h>this.tileSize||0>k||k>this.tileSize||(h=Math.min(Math.floor(h),
this.tileSize-1),k=Math.min(Math.floor(k),this.tileSize-1),b.data[f+this.tileSize*g]=a[h+this.tileSize*k])}b.createMipMap();b.mipMapNeedsUpdate=!0;Potree.getDEMWorkerInstance().working=!1}};a=b.geometryNode.geometry.attributes.position.array;b={boundingBox:{min:b.getBoundingBox().min.toArray(),max:b.getBoundingBox().max.toArray()},position:(new Float32Array(a)).buffer};a=[b.position];Potree.getDEMWorkerInstance().working=!0;Potree.getDEMWorkerInstance().postMessage(b,a)}}}};
Potree.PointCloudTreeNode=class{constructor(){this.needsTransformUpdate=!0}getChildren(){}getBoundingBox(){}isLoaded(){}isGeometryNode(){}isTreeNode(){}getLevel(){}getBoundingSphere(){}};Potree.PointCloudTree=class extends THREE.Object3D{constructor(){super();this.dem=new Potree.DEM(this)}initialized(){return null!==this.root}};
Potree.WorkerPool=class{constructor(){this.workers={}}getWorker(a){this.workers[a]||(this.workers[a]=[]);if(0===this.workers[a].length){let b=new Worker(a);this.workers[a].push(b)}return this.workers[a].pop()}returnWorker(a,b){this.workers[a].push(b)}};Potree.workerPool=new Potree.WorkerPool;Potree.POCLoader=function(){};
Potree.POCLoader.load=function(a,b){try{let c=new Potree.PointCloudOctreeGeometry;c.url=a;let e=Potree.XHRFactory.createXMLHttpRequest();e.open('GET',a,!0);e.onreadystatechange=function(){if(4===e.readyState&&(200===e.status||0===e.status)){let m=JSON.parse(e.responseText);var d=new Potree.Version(m.version);0===m.octreeDir.indexOf('http')?c.octreeDir=m.octreeDir:c.octreeDir=a+'/../'+m.octreeDir;c.spacing=m.spacing;c.hierarchyStepSize=m.hierarchyStepSize;c.pointAttributes=m.pointAttributes;var f=
new THREE.Vector3(m.boundingBox.lx,m.boundingBox.ly,m.boundingBox.lz),g=new THREE.Vector3(m.boundingBox.ux,m.boundingBox.uy,m.boundingBox.uz);g=new THREE.Box3(f,g);var h=g.clone();m.tightBoundingBox&&(h.min.copy(new THREE.Vector3(m.tightBoundingBox.lx,m.tightBoundingBox.ly,m.tightBoundingBox.lz)),h.max.copy(new THREE.Vector3(m.tightBoundingBox.ux,m.tightBoundingBox.uy,m.tightBoundingBox.uz)));f=f.clone();g.min.sub(f);g.max.sub(f);h.min.sub(f);h.max.sub(f);c.projection=m.projection;c.boundingBox=g;
c.tightBoundingBox=h;c.boundingSphere=g.getBoundingSphere(new THREE.Sphere);c.tightBoundingSphere=h.getBoundingSphere(new THREE.Sphere);c.offset=f;'LAS'===m.pointAttributes?c.loader=new Potree.LasLazLoader(m.version):'LAZ'===m.pointAttributes?c.loader=new Potree.LasLazLoader(m.version):(c.loader=new Potree.BinaryLoader(m.version,g,m.scale),c.pointAttributes=new Potree.PointAttributes(c.pointAttributes));f={};g=new Potree.PointCloudOctreeGeometryNode('r',c,g);g.level=0;g.hasChildren=!0;g.spacing=c.spacing;
d.upTo('1.5')?g.numPoints=m.hierarchy[0][1]:g.numPoints=0;c.root=g;c.root.load();f.r=g;if(d.upTo('1.4'))for(d=1;d<m.hierarchy.length;d++){g=m.hierarchy[d][0];h=m.hierarchy[d][1];var k=parseInt(g.charAt(g.length-1)),l=g.substring(0,g.length-1);l=f[l];let a=g.length-1;k=Potree.POCLoader.createChildAABB(l.boundingBox,k);k=new Potree.PointCloudOctreeGeometryNode(g,c,k);k.level=a;k.numPoints=h;k.spacing=c.spacing/Math.pow(2,a);l.addChild(k);f[g]=k}c.nodes=f;b(c)}};e.send(null)}catch(c){console.log("loading failed: '"+
a+"'"),console.log(c),b()}};Potree.POCLoader.loadPointAttributes=function(a){a=a.pointAttributes;let b=new Potree.PointAttributes;for(let c=0;c<a.length;c++)b.add(Potree.PointAttribute[a[c]]);return b};Potree.POCLoader.createChildAABB=function(a,b){let c=a.min.clone();a=a.max.clone();let e=(new THREE.Vector3).subVectors(a,c);0<(b&1)?c.z+=e.z/2:a.z-=e.z/2;0<(b&2)?c.y+=e.y/2:a.y-=e.y/2;0<(b&4)?c.x+=e.x/2:a.x-=e.x/2;return new THREE.Box3(c,a)};Potree.PointAttributeNames={};
Potree.PointAttributeNames.POSITION_CARTESIAN=0;Potree.PointAttributeNames.COLOR_PACKED=1;Potree.PointAttributeNames.COLOR_FLOATS_1=2;Potree.PointAttributeNames.COLOR_FLOATS_255=3;Potree.PointAttributeNames.NORMAL_FLOATS=4;Potree.PointAttributeNames.FILLER=5;Potree.PointAttributeNames.INTENSITY=6;Potree.PointAttributeNames.CLASSIFICATION=7;Potree.PointAttributeNames.NORMAL_SPHEREMAPPED=8;Potree.PointAttributeNames.NORMAL_OCT16=9;Potree.PointAttributeNames.NORMAL=10;
Potree.PointAttributeNames.RETURN_NUMBER=11;Potree.PointAttributeNames.NUMBER_OF_RETURNS=12;Potree.PointAttributeNames.SOURCE_ID=13;Potree.PointAttributeNames.INDICES=14;Potree.PointAttributeNames.SPACING=15;
Potree.PointAttributeTypes={DATA_TYPE_DOUBLE:{ordinal:0,size:8},DATA_TYPE_FLOAT:{ordinal:1,size:4},DATA_TYPE_INT8:{ordinal:2,size:1},DATA_TYPE_UINT8:{ordinal:3,size:1},DATA_TYPE_INT16:{ordinal:4,size:2},DATA_TYPE_UINT16:{ordinal:5,size:2},DATA_TYPE_INT32:{ordinal:6,size:4},DATA_TYPE_UINT32:{ordinal:7,size:4},DATA_TYPE_INT64:{ordinal:8,size:8},DATA_TYPE_UINT64:{ordinal:9,size:8}};let i=0;for(let a in Potree.PointAttributeTypes)Potree.PointAttributeTypes[i]=Potree.PointAttributeTypes[a],i++;
Potree.PointAttribute=function(a,b,c){this.name=a;this.type=b;this.numElements=c;this.byteSize=this.numElements*this.type.size};Potree.PointAttribute.POSITION_CARTESIAN=new Potree.PointAttribute(Potree.PointAttributeNames.POSITION_CARTESIAN,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,3);Potree.PointAttribute.RGBA_PACKED=new Potree.PointAttribute(Potree.PointAttributeNames.COLOR_PACKED,Potree.PointAttributeTypes.DATA_TYPE_INT8,4);Potree.PointAttribute.COLOR_PACKED=Potree.PointAttribute.RGBA_PACKED;
Potree.PointAttribute.RGB_PACKED=new Potree.PointAttribute(Potree.PointAttributeNames.COLOR_PACKED,Potree.PointAttributeTypes.DATA_TYPE_INT8,3);Potree.PointAttribute.NORMAL_FLOATS=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL_FLOATS,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,3);Potree.PointAttribute.FILLER_1B=new Potree.PointAttribute(Potree.PointAttributeNames.FILLER,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1);
Potree.PointAttribute.INTENSITY=new Potree.PointAttribute(Potree.PointAttributeNames.INTENSITY,Potree.PointAttributeTypes.DATA_TYPE_UINT16,1);Potree.PointAttribute.CLASSIFICATION=new Potree.PointAttribute(Potree.PointAttributeNames.CLASSIFICATION,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1);Potree.PointAttribute.NORMAL_SPHEREMAPPED=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL_SPHEREMAPPED,Potree.PointAttributeTypes.DATA_TYPE_UINT8,2);
Potree.PointAttribute.NORMAL_OCT16=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL_OCT16,Potree.PointAttributeTypes.DATA_TYPE_UINT8,2);Potree.PointAttribute.NORMAL=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,3);Potree.PointAttribute.RETURN_NUMBER=new Potree.PointAttribute(Potree.PointAttributeNames.RETURN_NUMBER,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1);
Potree.PointAttribute.NUMBER_OF_RETURNS=new Potree.PointAttribute(Potree.PointAttributeNames.NUMBER_OF_RETURNS,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1);Potree.PointAttribute.SOURCE_ID=new Potree.PointAttribute(Potree.PointAttributeNames.SOURCE_ID,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1);Potree.PointAttribute.INDICES=new Potree.PointAttribute(Potree.PointAttributeNames.INDICES,Potree.PointAttributeTypes.DATA_TYPE_UINT32,1);
Potree.PointAttribute.SPACING=new Potree.PointAttribute(Potree.PointAttributeNames.SPACING,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,1);Potree.PointAttributes=function(a){this.attributes=[];this.size=this.byteSize=0;if(null!=a)for(let b=0;b<a.length;b++){let c=Potree.PointAttribute[a[b]];this.attributes.push(c);this.byteSize+=c.byteSize;this.size++}};Potree.PointAttributes.prototype.add=function(a){this.attributes.push(a);this.byteSize+=a.byteSize;this.size++};
Potree.PointAttributes.prototype.hasColors=function(){for(let a in this.attributes)if(this.attributes[a].name===Potree.PointAttributeNames.COLOR_PACKED)return!0;return!1};Potree.PointAttributes.prototype.hasNormals=function(){for(let a in this.attributes){let b=this.attributes[a];if(b===Potree.PointAttribute.NORMAL_SPHEREMAPPED||b===Potree.PointAttribute.NORMAL_FLOATS||b===Potree.PointAttribute.NORMAL||b===Potree.PointAttribute.NORMAL_OCT16)return!0}return!1};
Potree.BinaryLoader=class{constructor(a,b,c){this.version='string'===typeof a?new Potree.Version(a):a;this.boundingBox=b;this.scale=c}load(a){if(!a.loaded){var b=a.getURL();this.version.equalOrHigher('1.4')&&(b+='.bin');var c=Potree.XHRFactory.createXMLHttpRequest();c.open('GET',b,!0);c.responseType='arraybuffer';c.overrideMimeType('text/plain; charset=x-user-defined');c.onreadystatechange=()=>{if(4===c.readyState){if(200!==c.status&&0!==c.status||null===c.response)throw Error(`Failed to load file! HTTP status: ${c.status}, file: ${b}`);
this.parse(a,c.response)}};try{c.send(null)}catch(e){console.log('fehler beim laden der punktwolke: '+e)}}}parse(a,b){let c=a.pcoGeometry.pointAttributes,e=b.byteLength/a.pcoGeometry.pointAttributes.byteSize;this.version.upTo('1.5')&&(a.numPoints=e);let d=Potree.scriptPath+'/workers/BinaryDecoderWorker.js',f=Potree.workerPool.getWorker(d);f.onmessage=function(b){let e=b.data,g=e.attributeBuffers,l=new THREE.Box3((new THREE.Vector3).fromArray(e.tightBoundingBox.min),(new THREE.Vector3).fromArray(e.tightBoundingBox.max));
Potree.workerPool.returnWorker(d,f);let m=new THREE.BufferGeometry;for(let a in g){var n=g[a].buffer;parseInt(a)===Potree.PointAttributeNames.POSITION_CARTESIAN?m.addAttribute('position',new THREE.BufferAttribute(new Float32Array(n),3)):parseInt(a)===Potree.PointAttributeNames.COLOR_PACKED?m.addAttribute('color',new THREE.BufferAttribute(new Uint8Array(n),4,!0)):parseInt(a)===Potree.PointAttributeNames.INTENSITY?m.addAttribute('intensity',new THREE.BufferAttribute(new Float32Array(n),1)):parseInt(a)===
Potree.PointAttributeNames.CLASSIFICATION?m.addAttribute('classification',new THREE.BufferAttribute(new Uint8Array(n),1)):parseInt(a)===Potree.PointAttributeNames.NORMAL_SPHEREMAPPED?m.addAttribute('normal',new THREE.BufferAttribute(new Float32Array(n),3)):parseInt(a)===Potree.PointAttributeNames.NORMAL_OCT16?m.addAttribute('normal',new THREE.BufferAttribute(new Float32Array(n),3)):parseInt(a)===Potree.PointAttributeNames.NORMAL?m.addAttribute('normal',new THREE.BufferAttribute(new Float32Array(n),
3)):parseInt(a)===Potree.PointAttributeNames.INDICES?(n=new THREE.BufferAttribute(new Uint8Array(n),4),n.normalized=!0,m.addAttribute('indices',n)):parseInt(a)===Potree.PointAttributeNames.SPACING&&(n=new THREE.BufferAttribute(new Float32Array(n),1),m.addAttribute('spacing',n))}l.max.sub(l.min);l.min.set(0,0,0);a.numPoints=b.data.buffer.byteLength/c.byteSize;a.geometry=m;a.mean=new THREE.Vector3(...e.mean);a.tightBoundingBox=l;a.loaded=!0;a.loading=!1;a.estimatedSpacing=e.estimatedSpacing;Potree.numNodesLoading--};
b={buffer:b,pointAttributes:c,version:this.version.version,min:[a.boundingBox.min.x,a.boundingBox.min.y,a.boundingBox.min.z],offset:[a.pcoGeometry.offset.x,a.pcoGeometry.offset.y,a.pcoGeometry.offset.z],scale:this.scale,spacing:a.spacing,hasChildren:a.hasChildren,name:a.name};f.postMessage(b,[b.buffer])}};
Potree.GreyhoundBinaryLoader=class{constructor(a,b,c){this.version='string'===typeof a?new Potree.Version(a):a;this.boundingBox=b;this.scale=c}load(a){if(!a.loaded){var b=this,c=a.getURL(),e=Potree.XHRFactory.createXMLHttpRequest();e.open('GET',c,!0);e.responseType='arraybuffer';e.overrideMimeType('text/plain; charset=x-user-defined');e.onreadystatechange=function(){4===e.readyState&&(200===e.status||0===e.status?b.parse(a,e.response):console.log('Failed to load file! HTTP status:',e.status,'file:',
c))};try{e.send(null)}catch(d){console.log('error loading point cloud: '+d)}}}parse(a,b){var c=(new DataView(b,b.byteLength-4,4)).getUint32(0,!0);let e=a.pcoGeometry.pointAttributes;a.numPoints=c;let d=Potree.scriptPath+'/workers/GreyhoundBinaryDecoderWorker.js',f=Potree.workerPool.getWorker(d);f.onmessage=function(b){b=b.data;let c=b.attributeBuffers,e=new THREE.Box3((new THREE.Vector3).fromArray(b.tightBoundingBox.min),(new THREE.Vector3).fromArray(b.tightBoundingBox.max));Potree.workerPool.returnWorker(d,
f);let g=new THREE.BufferGeometry;for(let a in c){var h=c[a].buffer;parseInt(a)===Potree.PointAttributeNames.POSITION_CARTESIAN?g.addAttribute('position',new THREE.BufferAttribute(new Float32Array(h),3)):parseInt(a)===Potree.PointAttributeNames.COLOR_PACKED?g.addAttribute('color',new THREE.BufferAttribute(new Uint8Array(h),4,!0)):parseInt(a)===Potree.PointAttributeNames.INTENSITY?g.addAttribute('intensity',new THREE.BufferAttribute(new Float32Array(h),1)):parseInt(a)===Potree.PointAttributeNames.CLASSIFICATION?
g.addAttribute('classification',new THREE.BufferAttribute(new Uint8Array(h),1)):parseInt(a)===Potree.PointAttributeNames.NORMAL_SPHEREMAPPED?g.addAttribute('normal',new THREE.BufferAttribute(new Float32Array(h),3)):parseInt(a)===Potree.PointAttributeNames.NORMAL_OCT16?g.addAttribute('normal',new THREE.BufferAttribute(new Float32Array(h),3)):parseInt(a)===Potree.PointAttributeNames.NORMAL?g.addAttribute('normal',new THREE.BufferAttribute(new Float32Array(h),3)):parseInt(a)===Potree.PointAttributeNames.INDICES?
(h=new THREE.BufferAttribute(new Uint8Array(h),4),h.normalized=!0,g.addAttribute('indices',h)):parseInt(a)===Potree.PointAttributeNames.SPACING&&(h=new THREE.BufferAttribute(new Float32Array(h),1),g.addAttribute('spacing',h))}e.max.sub(e.min);e.min.set(0,0,0);a.numPoints=b.numPoints;a.geometry=g;a.mean=new THREE.Vector3(...b.mean);a.tightBoundingBox=e;a.loaded=!0;a.loading=!1;Potree.numNodesLoading--};c=a.boundingBox;let g=a.pcoGeometry.boundingBox.getCenter().sub(a.boundingBox.min);b={buffer:b,pointAttributes:e,
version:this.version.version,schema:a.pcoGeometry.schema,min:[c.min.x,c.min.y,c.min.z],max:[c.max.x,c.max.y,c.max.z],offset:g.toArray(),scale:this.scale,normalize:a.pcoGeometry.normalize};f.postMessage(b,[b.buffer])}};
class GreyhoundUtils{static getQueryParam(a){a=a.replace(/[[\]]/g,'\\$&');return(a=(new RegExp('[?&]'+a+'(=([^&#]*)|&|#|$)')).exec(window.location.href))?a[2]?decodeURIComponent(a[2].replace(/\+/g,' ')):'':null}static createSchema(a){let b=[{name:'X',size:4,type:'signed'},{name:'Y',size:4,type:'signed'},{name:'Z',size:4,type:'signed'}];a.forEach(function(a){'COLOR_PACKED'===a?(b.push({name:'Red',size:2,type:'unsigned'}),b.push({name:'Green',size:2,type:'unsigned'}),b.push({name:'Blue',size:2,type:'unsigned'})):
'INTENSITY'===a?b.push({name:'Intensity',size:2,type:'unsigned'}):'CLASSIFICATION'===a&&b.push({name:'Classification',size:1,type:'unsigned'})});return b}static fetch(a,b){let c=Potree.XHRFactory.createXMLHttpRequest();c.open('GET',a,!0);c.onreadystatechange=function(){4===c.readyState&&(200===c.status||0===c.status?b(null,c.responseText):b(c.responseText))};c.send(null)}static fetchBinary(a,b){let c=Potree.XHRFactory.createXMLHttpRequest();c.open('GET',a,!0);c.responseType='arraybuffer';c.onreadystatechange=
function(){4===c.readyState&&(200===c.status||0===c.status?b(null,c.response):b(c.responseText))};c.send(null)}static pointSizeFrom(a){return a.reduce((a,c)=>a+c.size,0)}static getNormalization(a,b,c){let e=[{name:'X',size:4,type:'floating'},{name:'Y',size:4,type:'floating'},{name:'Z',size:4,type:'floating'},{name:'Red',size:2,type:'unsigned'},{name:'Green',size:2,type:'unsigned'},{name:'Blue',size:2,type:'unsigned'},{name:'Intensity',size:2,type:'unsigned'}];a=a+'read?depth='+b+'&schema='+JSON.stringify(e);
GreyhoundUtils.fetchBinary(a,function(a,b){if(a)throw Error(a);a=new DataView(b);b=b.byteLength-4;let d=GreyhoundUtils.pointSizeFrom(e),f=!1,k=!1;for(let c=0;c<b;c+=d){if(255<a.getUint16(c+12,!0)||255<a.getUint16(c+14,!0)||255<a.getUint16(c+16,!0))f=!0;255<a.getUint16(c+18,!0)&&(k=!0);if(f&&k)break}f&&console.log('Normalizing color');k&&console.log('Normalizing intensity');c(null,{color:f,intensity:k})})}}Potree.GreyhoundLoader=function(){};Potree.GreyhoundLoader.loadInfoJSON=function(a,b){};
Potree.GreyhoundLoader.load=function(a,b){try{let c=a.split('greyhound://')[1];1===c.split('http://').length&&1===c.split('https://').length&&(c='http://'+c);GreyhoundUtils.fetch(c+'info',function(a,d){if(a)throw Error(a);a=JSON.parse(d);var e=new Potree.Version('1.4'),g=a.bounds;d=a.scale||.01;Array.isArray(d)&&(d=Math.min(d[0],d[1],d[2]));GreyhoundUtils.getQueryParam('scale')&&(d=parseFloat(GreyhoundUtils.getQueryParam('scale')));var h=Math.max(8,a.baseDepth);let k=['POSITION_CARTESIAN'],l=!1,m=
!1,n=!1;a.schema.forEach(function(a){'Intensity'===a.name&&k.push('INTENSITY');'Classification'===a.name&&k.push('CLASSIFICATION');'Red'===a.name?l=!0:'Green'===a.name?m=!0:'Blue'===a.name&&(n=!0)});l&&m&&n&&k.push('COLOR_PACKED');let p=new Potree.PointCloudGreyhoundGeometry;p.serverURL=c;p.spacing=(g[3]-g[0])/Math.pow(2,h);p.baseDepth=h;p.hierarchyStepSize=5;p.schema=GreyhoundUtils.createSchema(k);h=GreyhoundUtils.pointSizeFrom(p.schema);p.pointAttributes=new Potree.PointAttributes(k);p.pointAttributes.byteSize=
h;g=new THREE.Box3((new THREE.Vector3).fromArray(g,0),(new THREE.Vector3).fromArray(g,3));h=g.min.clone();g.max.sub(g.min);g.min.set(0,0,0);p.projection=a.srs;p.boundingBox=g;p.boundingSphere=g.getBoundingSphere(new THREE.Sphere);p.scale=d;p.offset=h;console.log('Scale:',d);console.log('Offset:',h);console.log('Bounds:',g);p.loader=new Potree.GreyhoundBinaryLoader(e,g,p.scale);e={};d=new Potree.PointCloudGreyhoundGeometryNode('r',p,g,d,h);d.level=0;d.hasChildren=!0;d.numPoints=a.numPoints;d.spacing=
p.spacing;p.root=d;p.root.load();e.r=d;p.nodes=e;GreyhoundUtils.getNormalization(c,a.baseDepth,function(a,c){c.color&&(p.normalize.color=!0);c.intensity&&(p.normalize.intensity=!0);b(p)})})}catch(c){console.log("loading failed: '"+a+"'"),console.log(c),b()}};Potree.GreyhoundLoader.loadPointAttributes=function(a){a=a.pointAttributes;let b=new Potree.PointAttributes;for(let c=0;c<a.length;c++)b.add(Potree.PointAttribute[a[c]]);return b};
Potree.GreyhoundLoader.createChildAABB=function(a,b){let c=a.min;a=a.max;let e=(new THREE.Vector3).copy(a).sub(c).multiplyScalar(.5),d=new THREE.Vector3(e.x,0,0),f=new THREE.Vector3(0,e.y,0),g=new THREE.Vector3(0,0,e.z),h=c,k=(new THREE.Vector3).add(c).add(e);1===b?(c=(new THREE.Vector3).copy(h).add(g),a=(new THREE.Vector3).copy(k).add(g)):3===b?(c=(new THREE.Vector3).copy(h).add(g).add(f),a=(new THREE.Vector3).copy(k).add(g).add(f)):0===b?(c=h,a=k):2===b?(c=(new THREE.Vector3).copy(h).add(f),a=(new THREE.Vector3).copy(k).add(f)):
5===b?(c=(new THREE.Vector3).copy(h).add(g).add(d),a=(new THREE.Vector3).copy(k).add(g).add(d)):7===b?(c=(new THREE.Vector3).copy(h).add(e),a=(new THREE.Vector3).copy(k).add(e)):4===b?(c=(new THREE.Vector3).copy(h).add(d),a=(new THREE.Vector3).copy(k).add(d)):6===b&&(c=(new THREE.Vector3).copy(h).add(d).add(f),a=(new THREE.Vector3).copy(k).add(d).add(f));return new THREE.Box3(c,a)};
Potree.LasLazLoader=class{constructor(a){this.version='string'===typeof a?new Potree.Version(a):a}static progressCB(){}load(a){if(!a.loaded){var b=a.pcoGeometry.pointAttributes,c=a.getURL();this.version.equalOrHigher('1.4')&&(c+='.'+b.toLowerCase());var e=Potree.XHRFactory.createXMLHttpRequest();e.open('GET',c,!0);e.responseType='arraybuffer';e.overrideMimeType('text/plain; charset=x-user-defined');e.onreadystatechange=()=>{4===e.readyState&&(200===e.status?this.parse(a,e.response):console.log('Failed to load file! HTTP status: '+
e.status+', file: '+c))};e.send(null)}}parse(a,b){let c=new LASFile(b),e=new Potree.LasLazBatcher(a);c.open().then((a)=>{c.isOpen=!0;return c}).catch((a)=>{console.log('failed to open file. :(')}).then((a)=>a.getHeader().then(function(b){return[a,b]})).then((a)=>{let b=a[0],c=a[1],d=0,k=c.pointsCount,l=function(){return b.readData(1E6,0,1).then(function(a){e.push(new LASDecoder(a.buffer,c.pointsFormatId,c.pointsStructSize,a.count,c.scale,c.offset,c.mins,c.maxs));d+=a.count;Potree.LasLazLoader.progressCB(d/
k);if(a.hasMoreData)return l();c.totalRead=d;c.versionAsString=b.versionAsString;c.isCompressed=b.isCompressed;return[b,c,e]})};return l()}).then((a)=>{let b=a[0];Potree.LasLazLoader.progressCB(1);return b.close().then(function(){b.isOpen=!1;return a.slice(1)}).catch((a)=>{if(b.isOpen)return b.close().then(function(){b.isOpen=!1;throw a;});throw a;})})}handle(a,b){}};
Potree.LasLazBatcher=class{constructor(a){this.node=a}push(a){let b=Potree.scriptPath+'/workers/LASDecoderWorker.js',c=Potree.workerPool.getWorker(b);c.onmessage=(d)=>{let e=new THREE.BufferGeometry,g=a.pointsCount;var h=new Float32Array(d.data.position);let k=new Uint8Array(d.data.color),l=new Float32Array(d.data.intensity),m=new Uint8Array(d.data.classification),n=new Uint8Array(d.data.returnNumber),p=new Uint8Array(d.data.numberOfReturns),u=new Uint16Array(d.data.pointSourceID),r=new Uint8Array(d.data.indices);
e.addAttribute('position',new THREE.BufferAttribute(h,3));e.addAttribute('color',new THREE.BufferAttribute(k,4,!0));e.addAttribute('intensity',new THREE.BufferAttribute(l,1));e.addAttribute('classification',new THREE.BufferAttribute(m,1));e.addAttribute('returnNumber',new THREE.BufferAttribute(n,1));e.addAttribute('numberOfReturns',new THREE.BufferAttribute(p,1));e.addAttribute('pointSourceID',new THREE.BufferAttribute(u,1));e.addAttribute('indices',new THREE.BufferAttribute(r,4));e.attributes.indices.normalized=
!0;h=new THREE.Box3((new THREE.Vector3).fromArray(d.data.tightBoundingBox.min),(new THREE.Vector3).fromArray(d.data.tightBoundingBox.max));e.boundingBox=this.node.boundingBox;this.node.tightBoundingBox=h;this.node.geometry=e;this.node.numPoints=g;this.node.loaded=!0;this.node.loading=!1;Potree.numNodesLoading--;this.node.mean=new THREE.Vector3(...d.data.mean);Potree.workerPool.returnWorker(b,c)};let e={buffer:a.arrayb,numPoints:a.pointsCount,pointSize:a.pointSize,pointFormatID:2,scale:a.scale,offset:a.offset,
mins:a.mins,maxs:a.maxs};c.postMessage(e,[e.buffer])}};
Potree.Gradients={RAINBOW:[[0,new THREE.Color(.278,0,.714)],[1/6,new THREE.Color(0,0,1)],[2/6,new THREE.Color(0,1,1)],[.5,new THREE.Color(0,1,0)],[4/6,new THREE.Color(1,1,0)],[5/6,new THREE.Color(1,.64,0)],[1,new THREE.Color(1,0,0)]],SPECTRAL:[[0,new THREE.Color(.3686,.3098,.6353)],[.1,new THREE.Color(.1961,.5333,.7412)],[.2,new THREE.Color(.4,.7608,.6471)],[.3,new THREE.Color(.6706,.8667,.6431)],[.4,new THREE.Color(.902,.9608,.5961)],[.5,new THREE.Color(1,1,.749)],[.6,new THREE.Color(.9961,.8784,
.5451)],[.7,new THREE.Color(.9922,.6824,.3804)],[.8,new THREE.Color(.9569,.4275,.2627)],[.9,new THREE.Color(.8353,.2431,.3098)],[1,new THREE.Color(.6196,.0039,.2588)]],PLASMA:[[0,new THREE.Color(.241,.015,.61)],[.1,new THREE.Color(.387,.001,.654)],[.2,new THREE.Color(.524,.025,.653)],[.3,new THREE.Color(.651,.125,.596)],[.4,new THREE.Color(.752,.227,.513)],[.5,new THREE.Color(.837,.329,.431)],[.6,new THREE.Color(.907,.435,.353)],[.7,new THREE.Color(.963,.554,.272)],[.8,new THREE.Color(.992,.681,.195)],
[.9,new THREE.Color(.987,.822,.144)],[1,new THREE.Color(.94,.975,.131)]],YELLOW_GREEN:[[0,new THREE.Color(.1647,.2824,.3451)],[.1,new THREE.Color(.1338,.3555,.4227)],[.2,new THREE.Color(.061,.4319,.4864)],[.3,new THREE.Color(0,.5099,.5319)],[.4,new THREE.Color(0,.5881,.5569)],[.5,new THREE.Color(.137,.665,.5614)],[.6,new THREE.Color(.2906,.7395,.5477)],[.7,new THREE.Color(.4453,.8099,.5201)],[.8,new THREE.Color(.6102,.8748,.485)],[.9,new THREE.Color(.7883,.9323,.4514)],[1,new THREE.Color(.9804,.9804,
.4314)]],VIRIDIS:[[0,new THREE.Color(.267,.005,.329)],[.1,new THREE.Color(.283,.141,.458)],[.2,new THREE.Color(.254,.265,.53)],[.3,new THREE.Color(.207,.372,.553)],[.4,new THREE.Color(.164,.471,.558)],[.5,new THREE.Color(.128,.567,.551)],[.6,new THREE.Color(.135,.659,.518)],[.7,new THREE.Color(.267,.749,.441)],[.8,new THREE.Color(.478,.821,.318)],[.9,new THREE.Color(.741,.873,.15)],[1,new THREE.Color(.993,.906,.144)]],INFERNO:[[0,new THREE.Color(.077,.042,.206)],[.1,new THREE.Color(.225,.036,.388)],
[.2,new THREE.Color(.373,.074,.432)],[.3,new THREE.Color(.522,.128,.42)],[.4,new THREE.Color(.665,.182,.37)],[.5,new THREE.Color(.797,.255,.287)],[.6,new THREE.Color(.902,.364,.184)],[.7,new THREE.Color(.969,.516,.063)],[.8,new THREE.Color(.988,.683,.072)],[.9,new THREE.Color(.961,.859,.298)],[1,new THREE.Color(.988,.998,.645)]],GRAYSCALE:[[0,new THREE.Color(0,0,0)],[1,new THREE.Color(1,1,1)]]};
Potree.Classification={DEFAULT:{0:new THREE.Vector4(.5,.5,.5,1),1:new THREE.Vector4(.5,.5,.5,1),2:new THREE.Vector4(.63,.32,.18,1),3:new THREE.Vector4(0,1,0,1),4:new THREE.Vector4(0,.8,0,1),5:new THREE.Vector4(0,.6,0,1),6:new THREE.Vector4(1,.66,0,1),7:new THREE.Vector4(1,0,1,1),8:new THREE.Vector4(1,0,0,1),9:new THREE.Vector4(0,0,1,1),12:new THREE.Vector4(1,1,0,1),DEFAULT:new THREE.Vector4(.3,.6,.6,.5)}};Potree.PointSizeType={FIXED:0,ATTENUATED:1,ADAPTIVE:2};
Potree.PointShape={SQUARE:0,CIRCLE:1,PARABOLOID:2};Potree.PointColorType={RGB:0,COLOR:1,DEPTH:2,HEIGHT:3,ELEVATION:3,INTENSITY:4,INTENSITY_GRADIENT:5,LOD:6,LEVEL_OF_DETAIL:6,POINT_INDEX:7,CLASSIFICATION:8,RETURN_NUMBER:9,SOURCE:10,NORMAL:11,PHONG:12,RGB_HEIGHT:13,COMPOSITE:50};Potree.TreeType={OCTREE:0,KDTREE:1};function LRUItem(a){this.next=this.previous=null;this.node=a}function LRU(){this.last=this.first=null;this.items={};this.numPoints=this.elements=0}LRU.prototype.size=function(){return this.elements};
LRU.prototype.contains=function(a){return null==this.items[a.id]};
LRU.prototype.touch=function(a){if(a.loaded)if(null==this.items[a.id]){var b=new LRUItem(a);b.previous=this.last;this.last=b;null!==b.previous&&(b.previous.next=b);this.items[a.id]=b;this.elements++;null===this.first&&(this.first=b);this.numPoints+=a.numPoints}else b=this.items[a.id],null===b.previous?null!==b.next&&(this.first=b.next,this.first.previous=null,b.previous=this.last,b.next=null,this.last=b,b.previous.next=b):null!==b.next&&(b.previous.next=b.next,b.next.previous=b.previous,b.previous=
this.last,b.next=null,this.last=b,b.previous.next=b)};LRU.prototype.remove=function(a){let b=this.items[a.id];b&&(1===this.elements?this.last=this.first=null:(b.previous||(this.first=b.next,this.first.previous=null),b.next||(this.last=b.previous,this.last.next=null),b.previous&&b.next&&(b.previous.next=b.next,b.next.previous=b.previous)),delete this.items[a.id],this.elements--,this.numPoints-=a.numPoints)};LRU.prototype.getLRUItem=function(){return null===this.first?null:this.first.node};
LRU.prototype.toString=function(){let a='{ ',b=this.first;for(;null!==b;)a+=b.node.id,null!==b.next&&(a+=', '),b=b.next;return a=a+'}'+('('+this.size()+')')};LRU.prototype.freeMemory=function(){if(!(1>=this.elements))for(;this.numPoints>Potree.pointLoadLimit;)this.disposeDescendants(this.first.node)};LRU.prototype.disposeDescendants=function(a){let b=[];for(b.push(a);0<b.length;){a=b.pop();a.dispose();this.remove(a);for(let c in a.children)a.children.hasOwnProperty(c)&&a.children[c].loaded&&b.push(a.children[c])}};
Potree.PointCloudOctreeNode=class extends Potree.PointCloudTreeNode{constructor(){super();this.children={};this.octree=this.sceneNode=null}getNumPoints(){return this.geometryNode.numPoints}isLoaded(){return!0}isTreeNode(){return!0}isGeometryNode(){return!1}getLevel(){return this.geometryNode.level}getBoundingSphere(){return this.geometryNode.boundingSphere}getBoundingBox(){return this.geometryNode.boundingBox}getChildren(){let a=[];for(let b=0;8>b;b++)this.children[b]&&a.push(this.children[b]);return a}getPointsInBox(a){if(!this.sceneNode)return null;
let b=this.geometryNode.buffer,c=b.offset('position'),e=b.stride,d=new DataView(b.data);a=(new THREE.Matrix4).getInverse(a.matrixWorld);a=(new THREE.Matrix4).multiplyMatrices(a,this.sceneNode.matrixWorld);let f=[],g=new THREE.Vector4;for(let h=0;h<b.numElements;h++){let b=d.getFloat32(h*e+c+0,!0),l=d.getFloat32(h*e+c+4,!0),m=d.getFloat32(h*e+c+8,!0);g.set(b,l,m,1);g.applyMatrix4(a);-.5<g.x&&.5>g.x&&-.5<g.y&&.5>g.y&&-.5<g.z&&.5>g.z&&(g.set(b,l,m,1).applyMatrix4(this.sceneNode.matrixWorld),f.push(new THREE.Vector3(g.x,
g.y,g.z)))}return f}get name(){return this.geometryNode.name}};
Potree.PointCloudOctree=class extends Potree.PointCloudTree{constructor(a,b){super();this.pointBudget=Infinity;this.pcoGeometry=a;this.boundingBox=this.pcoGeometry.boundingBox;this.boundingSphere=this.boundingBox.getBoundingSphere(new THREE.Sphere);this.material=b||new Potree.PointCloudMaterial;this.visiblePointsTarget=2E6;this.minimumNodePixelSize=150;this.level=0;this.position.copy(a.offset);this.updateMatrix();this.showBoundingBox=!1;this.boundingBoxNodes=[];this.loadQueue=[];this.visibleBounds=
new THREE.Box3;this.visibleNodes=[];this.visibleGeometry=[];this.generateDEM=!1;this.profileRequests=[];this.name='';{b=[this.pcoGeometry.tightBoundingBox,this.getBoundingBoxWorld()].find((a)=>void 0!==a);this.updateMatrixWorld(!0);b=Potree.utils.computeTransformedBoundingBox(b,this.matrixWorld);let a=b.max.z;this.material.heightMin=b.min.z;this.material.heightMax=a}this.projection=a.projection;this.root=this.pcoGeometry.root}setName(a){this.name!==a&&(this.name=a,this.dispatchEvent({type:'name_changed',
name:a,pointcloud:this}))}getName(){return this.name}toTreeNode(a,b){let c=new Potree.PointCloudOctreeNode,e=new THREE.Points(a.geometry,this.material);e.name=a.name;e.position.copy(a.boundingBox.min);e.frustumCulled=!1;e.onBeforeRender=(b,d,e,k,l,m)=>{l.program&&(b.getContext().useProgram(l.program.program),l.program.getUniforms().map.level&&(d=a.getLevel(),l.uniforms.level.value=d,l.program.getUniforms().map.level.setValue(b.getContext(),d)),this.visibleNodeTextureOffsets&&l.program.getUniforms().map.vnStart&&
(d=this.visibleNodeTextureOffsets.get(c),l.uniforms.vnStart.value=d,l.program.getUniforms().map.vnStart.setValue(b.getContext(),d)),l.program.getUniforms().map.pcIndex&&(d=c.pcIndex?c.pcIndex:this.visibleNodes.indexOf(c),l.uniforms.pcIndex.value=d,l.program.getUniforms().map.pcIndex.setValue(b.getContext(),d)))};c.geometryNode=a;c.sceneNode=e;c.pointcloud=this;c.children={};for(var d in a.children)c.children[d]=a.children[d];b?(d=parseInt(a.name[a.name.length-1]),b.sceneNode.add(e),b.children[d]=
c):(this.root=c,this.add(e));a.oneTimeDisposeHandlers.push(function(){let d=parseInt(a.name[a.name.length-1]);b.sceneNode.remove(c.sceneNode);b.children[d]=a});return c}updateVisibleBounds(){let a=[];for(var b=0;b<this.visibleNodes.length;b++){var c=this.visibleNodes[b];let e=!0;for(let a=0;a<c.children.length;a++){let b=c.children[a];b instanceof Potree.PointCloudOctreeNode?e=e&&!b.sceneNode.visible:b instanceof Potree.PointCloudOctreeGeometryNode&&(e=!0)}e&&a.push(c)}this.visibleBounds.min=new THREE.Vector3(Infinity,
Infinity,Infinity);this.visibleBounds.max=new THREE.Vector3(-Infinity,-Infinity,-Infinity);for(b=0;b<a.length;b++)c=a[b],this.visibleBounds.expandByPoint(c.getBoundingBox().min),this.visibleBounds.expandByPoint(c.getBoundingBox().max)}updateMaterial(a,b,c,e){a.fov=Math.PI/180*c.fov;a.screenWidth=e.domElement.clientWidth;a.screenHeight=e.domElement.clientHeight;a.spacing=this.pcoGeometry.spacing*Math.max(this.scale.x,this.scale.y,this.scale.z);a.near=c.near;a.far=c.far;a.uniforms.octreeSize.value=
this.pcoGeometry.boundingBox.getSize(new THREE.Vector3).x}computeVisibilityTextureData(a,b){Potree.measureTimings&&performance.mark('computeVisibilityTextureData-start');let c=new Uint8Array(4*a.length),e=new Map;a=a.slice();a.sort(function(a,b){a=a.geometryNode.name;b=b.geometryNode.name;return a.length!==b.length?a.length-b.length:a<b?-1:a>b?1:0});let d=new THREE.Vector3;var f=(a,b)=>{d.subVectors(b.center,a.origin);a=d.dot(a.direction);let c=d.dot(d)-a*a;b=b.radius*b.radius;if(c>b)return null;
b=a+Math.sqrt(b-c);return 0>b?null:b};let g=new Map,h=new Map;for(let d=0;d<a.length;d++){let p=a[d];e.set(p,d);var k=[];for(var l=0;8>l;l++){var m=p.children[l];m&&m.constructor===Potree.PointCloudOctreeNode&&a.includes(m,d)&&k.push(m)}c[4*d]=0;c[4*d+1]=0;c[4*d+2]=0;c[4*d+3]=p.getLevel();for(l=0;l<k.length;l++){m=k[l];let b=parseInt(m.geometryNode.name.substr(-1));c[4*d]+=Math.pow(2,b);0===l&&(m=a.indexOf(m,d),c[4*d+1]=m-d>>8,c[4*d+2]=(m-d)%256)}l=p.getBoundingBox().clone().getBoundingSphere(new THREE.Sphere);
l.applyMatrix4(p.sceneNode.matrixWorld);l.applyMatrix4(b.matrixWorldInverse);k=new THREE.Ray(b.position,b.getWorldDirection(Potree.tempVector3));k=f(k,l);l=l.center.distanceTo(b.position)+l.radius;null===k&&(k=l);k=Math.max(k,l);g.has(p.getLevel())?(l=g.get(p.getLevel()),l=Math.max(l,k),g.set(p.getLevel(),l)):g.set(p.getLevel(),k);p.geometryNode.hasChildren||h.set(p,{distance:k,i:d})}for(let [d,e]of h)if(a=d.getLevel(),b=e.distance,f=e.i,!(4>a))for(let [a,d]of g)b<1.2*d&&(c[4*f+3]=a);Potree.measureTimings&&
(performance.mark('computeVisibilityTextureData-end'),performance.measure('render.computeVisibilityTextureData','computeVisibilityTextureData-start','computeVisibilityTextureData-end'));return{data:c,offsets:e}}nodeIntersectsProfile(a,b){a=a.boundingBox.clone().applyMatrix4(this.matrixWorld).getBoundingSphere(new THREE.Sphere);let c=!1;for(let d=0;d<b.points.length-1;d++){var e=new THREE.Vector3(b.points[d+0].x,b.points[d+0].y,a.center.z);let f=new THREE.Vector3(b.points[d+1].x,b.points[d+1].y,a.center.z);
e=(new THREE.Line3(e,f)).closestPointToPoint(a.center,!0).distanceTo(a.center);c=c||e<a.radius+b.width}return c}nodesOnRay(a,b){let c=[];b=b.clone();for(let e=0;e<a.length;e++){let d=a[e],f=d.getBoundingSphere(new THREE.Sphere).clone().applyMatrix4(this.matrixWorld);b.intersectsSphere(f)&&c.push(d)}return c}updateMatrixWorld(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):
this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1}hideDescendants(a){let b=[];for(var c=0;c<a.children.length;c++){var e=a.children[c];e.visible&&b.push(e)}for(;0<b.length;)for(a=b.shift(),a.visible=!1,c=0;c<a.children.length;c++)e=a.children[c],e.visible&&b.push(e)}moveToOrigin(){this.position.set(0,0,0);this.updateMatrixWorld(!0);let a=Potree.utils.computeTransformedBoundingBox(this.boundingBox,this.matrixWorld);this.position.set(0,0,0).sub(a.getCenter())}moveToGroundPlane(){this.updateMatrixWorld(!0);
let a=Potree.utils.computeTransformedBoundingBox(this.boundingBox,this.matrixWorld);this.position.y+=-a.min.y}getBoundingBoxWorld(){this.updateMatrixWorld(!0);return Potree.utils.computeTransformedBoundingBox(this.boundingBox,this.matrixWorld)}getPointsInProfile(a,b,c){if(c)return c=new Potree.ProfileRequest(this,a,b,c),this.profileRequests.push(c),c;c={segments:[],boundingBox:new THREE.Box3,projectedBoundingBox:new THREE.Box2};for(var e=0;e<a.points.length-1;e++){var d=a.points[e],f=a.points[e+1],
g=this.getProfile(d,f,a.width,b);c.segments.push({start:d,end:f,points:g,project:null});c.boundingBox.expandByPoint(g.boundingBox.min);c.boundingBox.expandByPoint(g.boundingBox.max)}a=new THREE.Vector3;for(b=0;b<c.segments.length;b++)e=c.segments[b],d=e.start,f=e.end,g=function(a,b,c,d){let e=new THREE.Vector3(1,0,0);b=(new THREE.Vector3).subVectors(b,a);b.y=0;b.normalize();let f=Math.acos(e.dot(b));0<b.z&&(f=-f);return function(b){let e=(new THREE.Matrix4).makeTranslation(-a.x,-d.min.y,-a.z),g=(new THREE.Matrix4).makeRotationY(-f),
h=(new THREE.Matrix4).makeTranslation(c.x,0,0);b=b.clone();b.applyMatrix4(e);b.applyMatrix4(g);b.applyMatrix4(h);return b}}(d,f,a.clone(),c.boundingBox.clone()),e.project=g,a.x+=(new THREE.Vector3(d.x,0,d.z)).distanceTo(new THREE.Vector3(f.x,0,f.z)),a.y+=f.y-d.y;c.projectedBoundingBox.min.x=0;c.projectedBoundingBox.min.y=c.boundingBox.min.y;c.projectedBoundingBox.max.x=a.x;c.projectedBoundingBox.max.y=c.boundingBox.max.y;return c}getProfile(a,b,c,e,d){a=new Potree.ProfileRequest(a,b,c,e,d);this.profileRequests.push(a)}getVisibleExtent(){return this.visibleBounds.applyMatrix4(this.matrixWorld)}pick(a,
b,c,e={}){var d=a.renderer,f=a.pRenderer;performance.mark('pick-start');var g=(a,b)=>void 0!==a?a:b;a=g(e.pickWindowSize,17);g(e.pickOutsideClipRegion,!1);var h=d.getSize(new THREE.Vector3),k=Math.ceil(g(e.width,h.width));h=Math.ceil(g(e.height,h.height));var l=g(e.pointSizeType,this.material.pointSizeType);g=g(e.pointSize,this.material.size);c=this.nodesOnRay(this.visibleNodes,c);if(0===c.length)return null;if(!this.pickState){var m=new THREE.Scene,n=new Potree.PointCloudMaterial;n.pointColorType=
Potree.PointColorType.POINT_INDEX;this.pickState={renderTarget:new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),material:n,scene:m}}m=this.pickState;n=m.material;n.pointSizeType=l;n.shape=this.material.shape;n.size=g;n.uniforms.minSize.value=this.material.uniforms.minSize.value;n.uniforms.maxSize.value=this.material.uniforms.maxSize.value;n.classification=this.material.classification;e.pickClipped?(n.clipBoxes=this.material.clipBoxes,
n.clipTask=this.material.clipTask===Potree.ClipTask.HIGHLIGHT?Potree.ClipTask.NONE:this.material.clipTask):n.clipBoxes=[];this.updateMaterial(n,c,b,d);m.renderTarget.setSize(k,h);g=new THREE.Vector2(e.x,e.y);l=d.getContext();l.enable(l.SCISSOR_TEST);l.scissor(parseInt(g.x-(a-1)/2),parseInt(g.y-(a-1)/2),parseInt(a),parseInt(a));d.state.buffers.depth.setTest(n.depthTest);d.state.buffers.depth.setMask(n.depthWrite);d.state.setBlending(THREE.NoBlending);{d.setRenderTarget(m.renderTarget);l.clearColor(0,
0,0,0);d.clearTarget(m.renderTarget,!0,!0,!0);let a=this.material;this.material=n;f.renderOctree(this,c,b,m.renderTarget);this.material=a}b=parseInt(Math.min(Math.max(0,g.x-(a-1)/2),k));f=parseInt(Math.min(Math.max(0,g.y-(a-1)/2),h));k=parseInt(Math.min(b+a,k)-b);h=parseInt(Math.min(f+a,h)-f);k=new Uint8Array(4*k*h);l.readPixels(b,f,a,a,l.RGBA,l.UNSIGNED_BYTE,k);d.setRenderTarget(null);d.resetGLState();d.setScissorTest(!1);l.disable(l.SCISSOR_TEST);h=new Uint32Array(k.buffer);d=[];for(b=0;b<a;b++)for(f=
0;f<a;f++)m=b+f*a,l=Math.pow(b-(a-1)/2,2)+Math.pow(f-(a-1)/2,2),g=k[4*m+3],k[4*m+3]=0,m=h[m],0===g&&0===m||void 0===g||void 0===m||(g={pIndex:m,pcIndex:g,distanceToCenter:l},e.all?d.push(g):0<d.length?l<d[0].distanceToCenter&&(d[0]=g):d.push(g));for(let e of d){a={};if(!c[e.pcIndex])return null;h=c[e.pcIndex];k=h.sceneNode;h=h.geometryNode.geometry;for(let c in h.attributes)b=h.attributes[c],'position'===c&&(b=new THREE.Vector3(b.array[3*e.pIndex],b.array[3*e.pIndex+1],b.array[3*e.pIndex+2]),b.applyMatrix4(k.matrixWorld),
a[c]=b);e.point=a}performance.mark('pick-end');performance.measure('pick','pick-start','pick-end');return e.all?d.map((a)=>a.point):0===d.length?null:d[0].point}*getFittedBoxGen(a){var b=performance.now();let c=new THREE.Box3;var e=(new THREE.Matrix4).getInverse(a.matrixWorld);for(var d of this.visibleNodes){if(!d.sceneNode)continue;let a=d.geometryNode.buffer,b=a.offset('position'),h=a.stride,k=new DataView(a.data),l=(new THREE.Matrix4).multiplyMatrices(e,d.sceneNode.matrixWorld),m=new THREE.Vector4;
for(let d=0;d<a.numElements;d++){let a=k.getFloat32(d*h+b+0,!0),e=k.getFloat32(d*h+b+4,!0),f=k.getFloat32(d*h+b+8,!0);m.set(a,e,f,1);m.applyMatrix4(l);-.5<m.x&&.5>m.x&&-.5<m.y&&.5>m.y&&-.5<m.z&&.5>m.z&&c.expandByPoint(m)}yield}d=c.getCenter().applyMatrix4(a.matrixWorld);e=new THREE.Object3D;e.position.copy(d);e.scale.copy(a.scale);e.rotation.copy(a.rotation);a=(new THREE.Vector3).subVectors(c.max,c.min);e.scale.multiply(a);b=performance.now()-b;console.log('duration: ',b);yield e}getFittedBox(a,b=
Infinity){b=Infinity;var c=performance.now();let e=new THREE.Box3;var d=(new THREE.Matrix4).getInverse(a.matrixWorld);for(let a of this.visibleNodes){if(!a.sceneNode||a.getLevel()>b)continue;let c=a.geometryNode.buffer,f=c.offset('position'),k=c.stride,l=new DataView(c.data),m=(new THREE.Matrix4).multiplyMatrices(d,a.sceneNode.matrixWorld),n=new THREE.Vector4;for(let a=0;a<c.numElements;a++){let b=l.getFloat32(a*k+f+0,!0),c=l.getFloat32(a*k+f+4,!0),d=l.getFloat32(a*k+f+8,!0);n.set(b,c,d,1);n.applyMatrix4(m);
-.5<n.x&&.5>n.x&&-.5<n.y&&.5>n.y&&-.5<n.z&&.5>n.z&&e.expandByPoint(n)}}d=e.getCenter().applyMatrix4(a.matrixWorld);b=new THREE.Object3D;b.position.copy(d);b.scale.copy(a.scale);b.rotation.copy(a.rotation);a=(new THREE.Vector3).subVectors(e.max,e.min);b.scale.multiply(a);c=performance.now()-c;console.log('duration: ',c);return b}get progress(){return this.visibleNodes.length/this.visibleGeometry.length}find(a){let b=null;for(let c of a)b='r'===c?this.root:b.children[c];return b}};
Potree.PointCloudOctreeGeometry=class{constructor(){this.octreeDir=this.url=null;this.spacing=0;this.pointAttributes=this.nodes=this.root=this.boundingBox=null;this.hierarchyStepSize=-1;this.loader=null}};
Potree.PointCloudOctreeGeometryNode=class extends Potree.PointCloudTreeNode{constructor(a,b,c){super();this.id=Potree.PointCloudOctreeGeometryNode.IDCount++;this.name=a;this.index=parseInt(a.charAt(a.length-1));this.pcoGeometry=b;this.geometry=null;this.boundingBox=c;this.boundingSphere=c.getBoundingSphere(new THREE.Sphere);this.children={};this.numPoints=0;this.level=null;this.loaded=!1;this.oneTimeDisposeHandlers=[]}isGeometryNode(){return!0}getLevel(){return this.level}isTreeNode(){return!1}isLoaded(){return this.loaded}getBoundingSphere(){return this.boundingSphere}getBoundingBox(){return this.boundingBox}getChildren(){let a=
[];for(let b=0;8>b;b++)this.children[b]&&a.push(this.children[b]);return a}getURL(){let a='',b=this.pcoGeometry.loader.version;b.equalOrHigher('1.5')?a=this.pcoGeometry.octreeDir+'/'+this.getHierarchyPath()+'/'+this.name:b.equalOrHigher('1.4')?a=this.pcoGeometry.octreeDir+'/'+this.name:b.upTo('1.3')&&(a=this.pcoGeometry.octreeDir+'/'+this.name);return a}getHierarchyPath(){let a='r/',b=this.pcoGeometry.hierarchyStepSize,c=this.name.substr(1),e=Math.floor(c.length/b);for(let d=0;d<e;d++)a+=c.substr(d*
b,b)+'/';return a=a.slice(0,-1)}addChild(a){this.children[a.index]=a;a.parent=this}load(){!0===this.loading||!0===this.loaded||Potree.numNodesLoading>=Potree.maxNodesLoading||(this.loading=!0,Potree.numNodesLoading++,this.pcoGeometry.loader.version.equalOrHigher('1.5')?0===this.level%this.pcoGeometry.hierarchyStepSize&&this.hasChildren?this.loadHierachyThenPoints():this.loadPoints():this.loadPoints())}loadPoints(){this.pcoGeometry.loader.load(this)}loadHierachyThenPoints(){let a=this;if(0===a.level%
a.pcoGeometry.hierarchyStepSize){let b=a.pcoGeometry.octreeDir+'/'+a.getHierarchyPath()+'/'+a.name+'.hrc',c=Potree.XHRFactory.createXMLHttpRequest();c.open('GET',b,!0);c.responseType='arraybuffer';c.overrideMimeType('text/plain; charset=x-user-defined');c.onreadystatechange=()=>{if(4===c.readyState)if(200===c.status||0===c.status){var e=c.response,d=new DataView(e),f=[],g=d.getUint8(0),h=d.getUint32(1,!0);a.numPoints=h;f.push({children:g,numPoints:h,name:a.name});g=[];for(h=5;0<f.length;){var k=f.shift(),
l=1;for(var m=0;8>m;m++){if(0!==(k.children&l)){var n=k.name+m;let a=d.getUint8(h),b=d.getUint32(h+1,!0);f.push({children:a,numPoints:b,name:n});g.push({children:a,numPoints:b,name:n});h+=5}l*=2}if(h===e.byteLength)break}e={};e[a.name]=a;d=a.pcoGeometry;for(f=0;f<g.length;f++)h=g[f].name,k=g[f].numPoints,n=parseInt(h.charAt(h.length-1)),l=h.substring(0,h.length-1),l=e[l],m=h.length-1,n=Potree.POCLoader.createChildAABB(l.boundingBox,n),n=new Potree.PointCloudOctreeGeometryNode(h,d,n),n.level=m,n.numPoints=
k,n.hasChildren=0<g[f].children,n.spacing=d.spacing/Math.pow(2,m),l.addChild(n),e[h]=n;a.loadPoints()}else console.log('Failed to load file! HTTP status: '+c.status+', file: '+b),Potree.numNodesLoading--};try{c.send(null)}catch(e){console.log('fehler beim laden der punktwolke: '+e)}}}getNumPoints(){return this.numPoints}dispose(){if(this.geometry&&null!=this.parent){this.geometry.dispose();this.geometry=null;this.loaded=!1;for(let a=0;a<this.oneTimeDisposeHandlers.length;a++)(0,this.oneTimeDisposeHandlers[a])();
this.oneTimeDisposeHandlers=[]}}};Potree.PointCloudOctreeGeometryNode.IDCount=0;Object.assign(Potree.PointCloudOctreeGeometryNode.prototype,THREE.EventDispatcher.prototype);Potree.PointCloudGreyhoundGeometry=function(){this.spacing=0;this.nodes=this.root=this.boundingBox=null;this.pointAttributes={};this.hierarchyStepSize=-1;this.serverURL=this.boundingSphere=this.projection=this.offset=this.baseDepth=this.schema=this.loader=null;this.normalize={color:!1,intensity:!1}};
Potree.PointCloudGreyhoundGeometryNode=function(a,b,c,e,d){this.id=Potree.PointCloudGreyhoundGeometryNode.IDCount++;this.name=a;this.index=parseInt(a.charAt(a.length-1));this.pcoGeometry=b;this.geometry=null;this.boundingBox=c;this.boundingSphere=c.getBoundingSphere(new THREE.Sphere);this.scale=e;this.offset=d;this.children={};this.numPoints=0;this.level=null;this.loaded=!1;this.oneTimeDisposeHandlers=[];this.baseLoaded=!1;a=this.boundingBox.clone();a.min.sub(this.pcoGeometry.boundingBox.getCenter());
a.max.sub(this.pcoGeometry.boundingBox.getCenter());this.scale&&(a.min.multiplyScalar(1/this.scale),a.max.multiplyScalar(1/this.scale));this.greyhoundBounds=a;this.greyhoundOffset=this.pcoGeometry.offset.clone().add(this.pcoGeometry.boundingBox.getSize(new THREE.Vector3).multiplyScalar(.5))};Potree.PointCloudGreyhoundGeometryNode.IDCount=0;Potree.PointCloudGreyhoundGeometryNode.prototype=Object.create(Potree.PointCloudTreeNode.prototype);
Potree.PointCloudGreyhoundGeometryNode.prototype.isGeometryNode=function(){return!0};Potree.PointCloudGreyhoundGeometryNode.prototype.isTreeNode=function(){return!1};Potree.PointCloudGreyhoundGeometryNode.prototype.isLoaded=function(){return this.loaded};Potree.PointCloudGreyhoundGeometryNode.prototype.getBoundingSphere=function(){return this.boundingSphere};Potree.PointCloudGreyhoundGeometryNode.prototype.getBoundingBox=function(){return this.boundingBox};
Potree.PointCloudGreyhoundGeometryNode.prototype.getLevel=function(){return this.level};Potree.PointCloudGreyhoundGeometryNode.prototype.getChildren=function(){let a=[];for(let b=0;8>b;++b)this.children[b]&&a.push(this.children[b]);return a};
Potree.PointCloudGreyhoundGeometryNode.prototype.getURL=function(){var a=this.greyhoundBounds;a=''+this.pcoGeometry.serverURL+'read?depthBegin='+(this.baseLoaded?this.level+this.pcoGeometry.baseDepth:0)+'&depthEnd='+(this.level+this.pcoGeometry.baseDepth+1)+'&bounds=['+(a.min.x+','+a.min.y+','+a.min.z+','+a.max.x+','+a.max.y+','+a.max.z)+']&schema='+JSON.stringify(this.pcoGeometry.schema)+'&compress=true';this.scale&&(a+='&scale='+this.scale);if(this.greyhoundOffset){let b=this.greyhoundOffset;a+=
'&offset=['+b.x+','+b.y+','+b.z+']'}this.baseLoaded||(this.baseLoaded=!0);return a};Potree.PointCloudGreyhoundGeometryNode.prototype.addChild=function(a){this.children[a.index]=a;a.parent=this};Potree.PointCloudGreyhoundGeometryNode.prototype.load=function(){!0===this.loading||!0===this.loaded||Potree.numNodesLoading>=Potree.maxNodesLoading||(this.loading=!0,Potree.numNodesLoading++,0===this.level%this.pcoGeometry.hierarchyStepSize&&this.hasChildren?this.loadHierarchyThenPoints():this.loadPoints())};
Potree.PointCloudGreyhoundGeometryNode.prototype.loadPoints=function(){this.pcoGeometry.loader.load(this)};
Potree.PointCloudGreyhoundGeometryNode.prototype.loadHierarchyThenPoints=function(){let a=[0,2,1,3,4,6,5,7],b=function(b){let c=0;Object.keys(b).forEach(function(b){'swd'===b?c+=1<<a[0]:'nwd'===b?c+=1<<a[1]:'swu'===b?c+=1<<a[2]:'nwu'===b?c+=1<<a[3]:'sed'===b?c+=1<<a[4]:'ned'===b?c+=1<<a[5]:'seu'===b?c+=1<<a[6]:'neu'===b&&(c+=1<<a[7])});return c},c=function(d,e,g){let f,k;Object.keys(d).forEach(function(h){if('n'!==h){switch(h){case 'swd':f=d.swd;k=e+a[0];break;case 'nwd':f=d.nwd;k=e+a[1];break;case 'swu':f=
d.swu;k=e+a[2];break;case 'nwu':f=d.nwu;k=e+a[3];break;case 'sed':f=d.sed;k=e+a[4];break;case 'ned':f=d.ned;k=e+a[5];break;case 'seu':f=d.seu;k=e+a[6];break;case 'neu':f=d.neu,k=e+a[7]}g.push({children:b(f),numPoints:f.n,name:k});c(f,k,g)}})};if(0===this.level%this.pcoGeometry.hierarchyStepSize){var e=this.level+this.pcoGeometry.baseDepth;let a=this.greyhoundBounds,b=''+this.pcoGeometry.serverURL+'hierarchy?bounds=['+(a.min.x+','+a.min.y+','+a.min.z+','+a.max.x+','+a.max.y+','+a.max.z)+']&depthBegin='+
e+'&depthEnd='+(e+this.pcoGeometry.hierarchyStepSize+2);this.scale&&(b+='&scale='+this.scale);this.greyhoundOffset&&(e=this.greyhoundOffset,b+='&offset=['+e.x+','+e.y+','+e.z+']');let g=Potree.XHRFactory.createXMLHttpRequest();g.open('GET',b,!0);let h=this;g.onreadystatechange=function(){if(4===g.readyState)if(200===g.status||0===g.status){{var a=JSON.parse(g.responseText)||{};let b=[];h.numPoints=a.n;c(a,h.name,b);a={};a[h.name]=h;let f=h.pcoGeometry;for(let c=0;c<b.length;c++){let g=b[c].name,k=
b[c].numPoints;var d=parseInt(g.charAt(g.length-1)),e=g.substring(0,g.length-1);e=a[e];let l=g.length-1;d=Potree.GreyhoundLoader.createChildAABB(e.boundingBox,d);d=new Potree.PointCloudGreyhoundGeometryNode(g,f,d,h.scale,h.offset);d.level=l;d.numPoints=k;d.hasChildren=0<b[c].children;d.spacing=f.spacing/Math.pow(2,l);e.addChild(d);a[g]=d}h.loadPoints()}}else console.log('Failed to load file! HTTP status:',g.status,'file:',b)};try{g.send(null)}catch(k){console.log('fehler beim laden der punktwolke: '+
k)}}};Potree.PointCloudGreyhoundGeometryNode.prototype.getNumPoints=function(){return this.numPoints};Potree.PointCloudGreyhoundGeometryNode.prototype.dispose=function(){if(this.geometry&&null!=this.parent){this.geometry.dispose();this.geometry=null;this.loaded=!1;for(let a=0;a<this.oneTimeDisposeHandlers.length;a++)(0,this.oneTimeDisposeHandlers[a])();this.oneTimeDisposeHandlers=[]}};Object.assign(Potree.PointCloudGreyhoundGeometryNode.prototype,THREE.EventDispatcher.prototype);
Potree.utils=class{static loadShapefileFeatures(a,b){let c=[];shapefile.open(a).then((a)=>{a.read().then(function g(e){if(e.done)b(c);else return e.value&&'Feature'===e.value.type&&void 0!==e.value.geometry&&c.push(e.value),a.read().then(g)})})}static toString(a){return a instanceof THREE.Vector3?a.x.toFixed(2)+', '+a.y.toFixed(2)+', '+a.z.toFixed(2):''+a}static normalizeURL(a){a=new URL(a);return a.protocol+'//'+a.hostname+a.pathname.replace(/\/+/g,'/')}static pathExists(a){let b=Potree.XHRFactory.createXMLHttpRequest();
b.open('GET',a,!1);b.send(null);return 200!==b.status?!1:!0}static debugSphere(a,b,c,e){var d=new THREE.SphereGeometry(1,8,8);e=void 0!==e?new THREE.MeshBasicMaterial({color:e}):new THREE.MeshNormalMaterial;d=new THREE.Mesh(d,e);d.position.copy(b);d.scale.set(c,c,c);a.add(d)}static debugLine(a,b,c,e){e=new THREE.LineBasicMaterial({color:e});let d=new THREE.Geometry;d.vertices.push(b,c);b=new THREE.Line(d,e);a.add(b)}static computeTransformedBoundingBox(a,b){a=[(new THREE.Vector3(a.min.x,a.min.y,a.min.z)).applyMatrix4(b),
(new THREE.Vector3(a.min.x,a.min.y,a.min.z)).applyMatrix4(b),(new THREE.Vector3(a.max.x,a.min.y,a.min.z)).applyMatrix4(b),(new THREE.Vector3(a.min.x,a.max.y,a.min.z)).applyMatrix4(b),(new THREE.Vector3(a.min.x,a.min.y,a.max.z)).applyMatrix4(b),(new THREE.Vector3(a.min.x,a.max.y,a.max.z)).applyMatrix4(b),(new THREE.Vector3(a.max.x,a.max.y,a.min.z)).applyMatrix4(b),(new THREE.Vector3(a.max.x,a.min.y,a.max.z)).applyMatrix4(b),(new THREE.Vector3(a.max.x,a.max.y,a.max.z)).applyMatrix4(b)];b=new THREE.Box3;
b.setFromPoints(a);return b}static addCommas(a){var b=(a+'').split('.');a=b[0];b=1<b.length?'.'+b[1]:'';let c=/(\d+)(\d{3})/;for(;c.test(a);)a=a.replace(c,'$1,$2');return a+b}static removeCommas(a){return a.replace(/,/g,'')}static createWorker(a){a=new Blob([a],{type:'application/javascript'});return new Worker(URL.createObjectURL(a))}static moveTo(a,b,c){let e=a.view,d=a.getActiveCamera();a=TWEEN.Easing.Quartic.Out;b=(new TWEEN.Tween(e.position)).to(b,500);b.easing(a);b.start();{b=d.position.distanceTo(c);
let f=(new THREE.Vector3).addVectors(d.position,d.getWorldDirection(Potree.tempVector3).clone().multiplyScalar(b));c=(new TWEEN.Tween(f)).to(c,500);c.easing(a);c.onUpdate(()=>{e.lookAt(f)});c.onComplete(()=>{e.lookAt(f)});c.start()}}static loadSkybox(a){let b=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1E5);b.up.set(0,0,1);let c=new THREE.Scene;var e=[a+'px.jpg',a+'nx.jpg',a+'py.jpg',a+'ny.jpg',a+'pz.jpg',a+'nz.jpg'];a=[];for(let b=0;6>b;b++){let c=new THREE.MeshBasicMaterial({map:null,
side:THREE.BackSide,depthTest:!1,depthWrite:!1,color:4343126});a.push(c);(new THREE.TextureLoader).load(e[b],function(a){c.map=a;c.needsUpdate=!0;c.color.setHex(16777215)},function(a){},function(a){console.log('An error happened',a)})}e=new THREE.CubeGeometry(5E3,5E3,5E3);a=new THREE.Mesh(e,a);c.add(a);c.rotation.x=Math.PI/2;return{camera:b,scene:c}}static createGrid(a,b,c,e){e=new THREE.LineBasicMaterial({color:e||8947848});let d=new THREE.Geometry;for(var f=0;f<=b;f++)d.vertices.push(new THREE.Vector3(-(c*
a)/2,f*c-c*b/2,0)),d.vertices.push(new THREE.Vector3(+(c*a)/2,f*c-c*b/2,0));for(f=0;f<=a;f++)d.vertices.push(new THREE.Vector3(f*c-c*a/2,-(c*b)/2,0)),d.vertices.push(new THREE.Vector3(f*c-c*a/2,+(c*b)/2,0));a=new THREE.LineSegments(d,e,THREE.LinePieces);a.receiveShadow=!0;return a}static createBackgroundTexture(a,b){function c(a,b){return 1/(2*Math.PI)*Math.exp(-(a*a+b*b)/2)}let e=new Uint8Array(3*a*b),d=[1,1.5,1.7],f=c(0,0);for(let g=0;g<a;g++)for(let h=0;h<b;h++){let k=g+a*h,l=c(2*(g/a*2-1),2*(h/
b*2-1))/f,m=(Math.random()+Math.random()+Math.random())/3;m=(.5*l+.5)*m*.03;m*=.4;e[3*k]=255*(l/15+.05+m)*d[0];e[3*k+1]=255*(l/15+.05+m)*d[1];e[3*k+2]=255*(l/15+.05+m)*d[2]}a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}static getMousePointCloudIntersection(a,b,c,e,d={}){var f=c.renderer,g={x:a.x/f.domElement.clientWidth*2-1,y:2*-(a.y/f.domElement.clientHeight)+1};let h={};d.pickClipped&&(h.pickClipped=d.pickClipped);h.x=a.x;h.y=f.domElement.clientHeight-a.y;a=new THREE.Raycaster;
a.setFromCamera(g,b);g=a.ray;a=null;d=Infinity;let k=f=null;for(let l of e){e=l.pick(c,b,g,h);if(!e)continue;let m=b.position.distanceTo(e.position);m<d&&(d=m,a=l,f=e.position,k=e)}return a?{location:f,distance:d,pointcloud:a,point:k}:null}static pixelsArrayToImage(a,b,c){let e=document.createElement('canvas');e.width=b;e.height=c;let d=e.getContext('2d');a=new a.constructor(a);for(let b=0;b<a.length;b++)a[4*b+3]=255;b=d.createImageData(b,c);b.data.set(a);d.putImageData(b,0,0);a=new Image;a.src=e.toDataURL();
return a}static pixelsArrayToDataUrl(a,b,c){let e=document.createElement('canvas');e.width=b;e.height=c;let d=e.getContext('2d');a=new a.constructor(a);for(let b=0;b<a.length;b++)a[4*b+3]=255;b=d.createImageData(b,c);b.data.set(a);d.putImageData(b,0,0);return e.toDataURL()}static pixelsArrayToCanvas(a,b,c){let e=document.createElement('canvas');e.width=b;e.height=c;let d=e.getContext('2d');a=new a.constructor(a);let f=4*b;for(let b=0;b<parseInt(c/2);b++){let d=c-b-1,e=a.slice(b*f,b*f+f),g=a.slice(d*
f,d*f+f);a.set(g,b*f);a.set(e,d*f)}b=d.createImageData(b,c);b.data.set(a);d.putImageData(b,0,0);return e}static removeListeners(a,b){void 0!==a._listeners&&a._listeners[b]&&delete a._listeners[b]}static mouseToRay(a,b,c,e){c=a.x/c*2-1;e=2*-(a.y/e)+1;a=new THREE.Vector3(c,e,.5);c=new THREE.Vector3(c,e,0);a.unproject(b);c.unproject(b);b=(new THREE.Vector3).subVectors(a,c).normalize();return new THREE.Ray(c,b)}static projectedRadius(a,b,c,e,d){if(b instanceof THREE.OrthographicCamera)return Potree.utils.projectedRadiusOrtho(a,
b.projectionMatrix,e,d);if(b instanceof THREE.PerspectiveCamera)return Potree.utils.projectedRadiusPerspective(a,b.fov*Math.PI/180,c,d);throw Error('invalid parameters');}static projectedRadiusPerspective(a,b,c,e){return 1/Math.tan(b/2)/c*e/2*a}static projectedRadiusOrtho(a,b,c,e){let d=new THREE.Vector4(0);a=new THREE.Vector4(a);d.applyMatrix4(b);a.applyMatrix4(b);d=new THREE.Vector3(d.x,d.y,d.z);a=new THREE.Vector3(a.x,a.y,a.z);d.x=.5*(d.x+1)*c;d.y=.5*(d.y+1)*e;a.x=.5*(a.x+1)*c;a.y=.5*(a.y+1)*e;
return d.distanceTo(a)}static topView(a,b){a.position.set(0,1,0);a.rotation.set(-Math.PI/2,0,0);a.zoomTo(b,1)}static frontView(a,b){a.position.set(0,0,1);a.rotation.set(0,0,0);a.zoomTo(b,1)}static leftView(a,b){a.position.set(-1,0,0);a.rotation.set(0,-Math.PI/2,0);a.zoomTo(b,1)}static rightView(a,b){a.position.set(1,0,0);a.rotation.set(0,Math.PI/2,0);a.zoomTo(b,1)}static frustumSphereIntersection(a,b){a=a.planes;let c=b.center,e=-b.radius,d=Number.MAX_VALUE;for(let b=0;6>b;b++){let f=a[b].distanceToPoint(c);
if(f<e)return 0;d=Math.min(d,f)}return d>=b.radius?2:1}static generateDataTexture(a,b,c){let e=a*b,d=new Uint8Array(4*a*b),f=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(let a=0;a<e;a++)d[3*a]=f,d[3*a+1]=g,d[3*a+2]=c;a=new THREE.DataTexture(d,a,b,THREE.RGBAFormat);a.needsUpdate=!0;a.magFilter=THREE.NearestFilter;return a}static getParameterByName(a){a=a.replace(/[[]/,'\\[').replace(/[\]]/,'\\]');a=(new RegExp('[\\?&]'+a+'=([^&#]*)')).exec(document.location.search);return null===
a?null:decodeURIComponent(a[1].replace(/\+/g,' '))}static setParameter(a,b){a=a.replace(/[[]/,'\\[').replace(/[\]]/,'\\]');let c=(new RegExp('([\\?&])('+a+'=([^&#]*))')).exec(document.location.search),e=window.location.href;null===c?(e=0===window.location.search.length?e+'?':e+'&',e=e+a+'='+b):e=e.replace(c[2],a+'='+b);window.history.replaceState({},'',e)}static clipboardCopy(a){let b=document.createElement('textarea');b.style.position='fixed';b.style.top=0;b.style.left=0;b.style.width='2em';b.style.height=
'2em';b.style.padding=0;b.style.border='none';b.style.outline='none';b.style.boxShadow='none';b.style.background='transparent';b.value=a;document.body.appendChild(b);b.select();try{document.execCommand('copy')?console.log('copied text to clipboard'):console.log('copy to clipboard failed')}catch(c){console.log('error while trying to copy to clipboard')}document.body.removeChild(b)}};
Potree.utils.screenPass=new function(){this.screenScene=new THREE.Scene;this.screenQuad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,0));this.screenQuad.material.depthTest=!0;this.screenQuad.material.depthWrite=!0;this.screenQuad.material.transparent=!0;this.screenScene.add(this.screenQuad);this.camera=new THREE.Camera;this.render=function(a,b,c){this.screenQuad.material=b;'undefined'===typeof c?a.render(this.screenScene,this.camera):a.render(this.screenScene,this.camera,c)}};
Potree.Features=function(){var a=document.createElement('canvas');let b=a.getContext('webgl')||a.getContext('experimental-webgl');if(null===b)return null;a=b.getShaderPrecisionFormat(b.VERTEX_SHADER,b.HIGH_FLOAT);var c=b.getShaderPrecisionFormat(b.VERTEX_SHADER,b.MEDIUM_FLOAT);let e=b.getShaderPrecisionFormat(b.FRAGMENT_SHADER,b.HIGH_FLOAT),d=b.getShaderPrecisionFormat(b.FRAGMENT_SHADER,b.MEDIUM_FLOAT);c=0<c.precision&&0<d.precision;return{SHADER_INTERPOLATION:{isSupported:function(){let a;return a=
(a=b.getExtension('EXT_frag_depth'))&&8<=b.getParameter(b.MAX_VARYING_VECTORS)}},SHADER_SPLATS:{isSupported:function(){let a;return a=(a=(a=b.getExtension('EXT_frag_depth'))&&b.getExtension('OES_texture_float'))&&8<=b.getParameter(b.MAX_VARYING_VECTORS)}},SHADER_EDL:{isSupported:function(){let a;return a=(a=b.getExtension('OES_texture_float'))&&8<=b.getParameter(b.MAX_VARYING_VECTORS)}},precision:0<a.precision&&0<e.precision?'highp':c?'mediump':'lowp'}}();
Potree.TextSprite=class extends THREE.Object3D{constructor(a){super();var b=new THREE.Texture;b.minFilter=THREE.LinearFilter;b.magFilter=THREE.LinearFilter;this.material=b=new THREE.SpriteMaterial({map:b,depthTest:!1,depthWrite:!1});this.sprite=new THREE.Sprite(b);this.add(this.sprite);this.borderThickness=4;this.fontface='Arial';this.fontsize=28;this.borderColor={r:0,g:0,b:0,a:1};this.backgroundColor={r:255,g:255,b:255,a:1};this.textColor={r:255,g:255,b:255,a:1};this.text='';this.setText(a)}setText(a){this.text!==
a&&(this.text=a,this.update())}setTextColor(a){this.textColor=a;this.update()}setBorderColor(a){this.borderColor=a;this.update()}setBackgroundColor(a){this.backgroundColor=a;this.update()}update(){var a=document.createElement('canvas');let b=a.getContext('2d');b.font='Bold '+this.fontsize+'px '+this.fontface;let c=b.measureText(this.text).width,e=10+c+2*this.borderThickness,d=1.4*this.fontsize+2*this.borderThickness;b.canvas.width=e;b.canvas.height=d;b.font='Bold '+this.fontsize+'px '+this.fontface;
b.fillStyle='rgba('+this.backgroundColor.r+','+this.backgroundColor.g+','+this.backgroundColor.b+','+this.backgroundColor.a+')';b.strokeStyle='rgba('+this.borderColor.r+','+this.borderColor.g+','+this.borderColor.b+','+this.borderColor.a+')';b.lineWidth=this.borderThickness;this.roundRect(b,this.borderThickness/2,this.borderThickness/2,c+this.borderThickness+10,1.4*this.fontsize+this.borderThickness,6);b.strokeStyle='rgba(0, 0, 0, 1.0)';b.strokeText(this.text,this.borderThickness+5,this.fontsize+
this.borderThickness);b.fillStyle='rgba('+this.textColor.r+','+this.textColor.g+','+this.textColor.b+','+this.textColor.a+')';b.fillText(this.text,this.borderThickness+5,this.fontsize+this.borderThickness);a=new THREE.Texture(a);a.minFilter=THREE.LinearFilter;a.magFilter=THREE.LinearFilter;a.needsUpdate=!0;this.sprite.material.map=a;this.sprite.scale.set(.01*e,.01*d,1)}roundRect(a,b,c,e,d,f){a.beginPath();a.moveTo(b+f,c);a.lineTo(b+e-f,c);a.quadraticCurveTo(b+e,c,b+e,c+f);a.lineTo(b+e,c+d-f);a.quadraticCurveTo(b+
e,c+d,b+e-f,c+d);a.lineTo(b+f,c+d);a.quadraticCurveTo(b,c+d,b,c+d-f);a.lineTo(b,c+f);a.quadraticCurveTo(b,c,b+f,c);a.closePath();a.fill();a.stroke()}};Potree.Version=function(a){this.version=a;let b=-1===a.indexOf('.')?a.length:a.indexOf('.');this.versionMajor=parseInt(a.substr(0,b));this.versionMinor=parseInt(a.substr(b+1));0===this.versionMinor.length&&(this.versionMinor=0)};
Potree.Version.prototype.newerThan=function(a){a=new Potree.Version(a);return this.versionMajor>a.versionMajor?!0:this.versionMajor===a.versionMajor&&this.versionMinor>a.versionMinor?!0:!1};Potree.Version.prototype.equalOrHigher=function(a){a=new Potree.Version(a);return this.versionMajor>a.versionMajor?!0:this.versionMajor===a.versionMajor&&this.versionMinor>=a.versionMinor?!0:!1};Potree.Version.prototype.upTo=function(a){return!this.newerThan(a)};
Potree.Measure=class extends THREE.Object3D{constructor(){super();this.constructor.counter=void 0===this.constructor.counter?0:this.constructor.counter+1;this.name='Measure_'+this.constructor.counter;this.points=[];this._showDistances=!0;this._showArea=this._showCoordinates=!1;this._closed=!0;this._showHeight=this._showAngles=!1;this.maxMarkers=Number.MAX_SAFE_INTEGER;this.sphereGeometry=new THREE.SphereGeometry(.4,10,10);this.color=new THREE.Color(16711680);this.lengthUnit={code:'m'};this.spheres=
[];this.edges=[];this.sphereLabels=[];this.edgeLabels=[];this.angleLabels=[];this.coordinateLabels=[];{let a=new THREE.Geometry;a.vertices.push(new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3);a.colors.push(this.color,this.color,this.color);let b=new THREE.LineDashedMaterial({color:16711680,dashSize:5,gapSize:2});b.depthTest=!1;this.heightEdge=new THREE.Line(a,b);this.heightEdge.visible=!1;this.add(this.heightEdge)}this.heightLabel=new Potree.TextSprite('');this.heightLabel.setBorderColor({r:0,
g:0,b:0,a:.8});this.heightLabel.setBackgroundColor({r:0,g:0,b:0,a:.3});this.heightLabel.setTextColor({r:180,g:220,b:180,a:1});this.heightLabel.material.depthTest=!1;this.heightLabel.material.opacity=1;this.heightLabel.visible=!1;this.add(this.heightLabel);this.areaLabel=new Potree.TextSprite('');this.areaLabel.setBorderColor({r:0,g:0,b:0,a:.8});this.areaLabel.setBackgroundColor({r:0,g:0,b:0,a:.3});this.areaLabel.setTextColor({r:180,g:220,b:180,a:1});this.areaLabel.material.depthTest=!1;this.areaLabel.material.opacity=
1;this.areaLabel.visible=!1;this.add(this.areaLabel)}createSphereMaterial(){return new THREE.MeshLambertMaterial({shading:THREE.SmoothShading,color:this.color,depthTest:!1,depthWrite:!1})}addMarker(a){a instanceof THREE.Vector3?a={position:a}:a instanceof Array&&(a={position:new THREE.Vector3(...a)});this.points.push(a);let b=new THREE.Mesh(this.sphereGeometry,this.createSphereMaterial());this.add(b);this.spheres.push(b);{var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3);
c.colors.push(this.color,this.color,this.color);let a=new THREE.LineBasicMaterial({linewidth:1});a.depthTest=!1;c=new THREE.Line(c,a);c.visible=!0;this.add(c);this.edges.push(c)}c=new Potree.TextSprite;c.setBorderColor({r:0,g:0,b:0,a:.8});c.setBackgroundColor({r:0,g:0,b:0,a:.3});c.material.depthTest=!1;c.visible=!1;this.edgeLabels.push(c);this.add(c);c=new Potree.TextSprite;c.setBorderColor({r:0,g:0,b:0,a:.8});c.setBackgroundColor({r:0,g:0,b:0,a:.3});c.material.depthTest=!1;c.material.opacity=1;c.visible=
!1;this.angleLabels.push(c);this.add(c);c=new Potree.TextSprite;c.setBorderColor({r:0,g:0,b:0,a:.8});c.setBackgroundColor({r:0,g:0,b:0,a:.3});c.material.depthTest=!1;c.material.opacity=1;c.visible=!1;this.coordinateLabels.push(c);this.add(c);b.addEventListener('drag',(a)=>{let b=Potree.utils.getMousePointCloudIntersection(a.drag.end,a.viewer.scene.getActiveCamera(),a.viewer,a.viewer.scene.pointclouds,{pickClipped:!0});if(b&&(a=this.spheres.indexOf(a.drag.object),-1!==a)){let c=this.points[a];for(let a of Object.keys(b.point).filter((a)=>
'position'!==a))c[a]=b.point[a];this.setPosition(a,b.location)}});b.addEventListener('drop',(a)=>{a=this.spheres.indexOf(a.drag.object);-1!==a&&this.dispatchEvent({type:'marker_dropped',measurement:this,index:a})});b.addEventListener('mouseover',(a)=>a.object.material.emissive.setHex(8947848));b.addEventListener('mouseleave',(a)=>a.object.material.emissive.setHex(0));this.dispatchEvent({type:'marker_added',measurement:this,sphere:b});this.setMarker(this.points.length-1,a)}removeMarker(a){this.points.splice(a,
1);this.remove(this.spheres[a]);let b=0===a?0:a-1;this.remove(this.edges[b]);this.edges.splice(b,1);this.remove(this.edgeLabels[b]);this.edgeLabels.splice(b,1);this.coordinateLabels.splice(a,1);this.spheres.splice(a,1);this.update();this.dispatchEvent({type:'marker_removed',measurement:this})}setMarker(a,b){this.points[a]=b;a={type:'marker_moved',measure:this,index:a,position:b.position.clone()};this.dispatchEvent(a);this.update()}setPosition(a,b){this.points[a].position.copy(b);a={type:'marker_moved',
measure:this,index:a,position:b.clone()};this.dispatchEvent(a);this.update()}getArea(){let a=0;var b=this.points.length-1;for(let c=0;c<this.points.length;c++){let e=this.points[c].position;b=this.points[b].position;a+=(b.x+e.x)*(e.y-b.y);b=c}return Math.abs(a/2)}getTotalDistance(){if(0===this.points.length)return 0;let a=0;for(var b=1;b<this.points.length;b++){let c=this.points[b-1].position.distanceTo(this.points[b].position);a+=c}this.closed&&1<this.points.length&&(b=this.points[this.points.length-
1].position.distanceTo(this.points[0].position),a+=b);return a}getAngleBetweenLines(a,b,c){b=(new THREE.Vector3).subVectors(b.position,a.position);a=(new THREE.Vector3).subVectors(c.position,a.position);return b.angleTo(a)}getAngle(a){return 3>this.points.length||a>=this.points.length?0:this.getAngleBetweenLines(this.points[a],0===a?this.points[this.points.length-1]:this.points[a-1],this.points[(a+1)%this.points.length])}update(){if(0!==this.points.length)if(1===this.points.length){var a=this.points[0].position;
this.spheres[0].position.copy(a);var b=this.coordinateLabels[0];a=a.toArray().map((a)=>Potree.utils.addCommas(a.toFixed(2))).join(', ');b.setText(a);b.visible=this.showCoordinates}else{a=this.points.length-1;b=new THREE.Vector3;for(var c=0;c<=a;c++)b.add(this.points[c].position);b.divideScalar(this.points.length);for(c=0;c<=a;c++){var e=c,d=this.points[e],f=this.points[c+1>a?0:c+1],g=this.points[0===c?a:c-1],h=this.spheres[e];h.position.copy(d.position);h.material.color=this.color;h=this.edges[e];
h.material.color=this.color;h.position.copy(d.position);h.geometry.vertices[0].set(0,0,0);h.geometry.vertices[1].copy(f.position).sub(d.position);h.geometry.verticesNeedUpdate=!0;h.geometry.computeBoundingSphere();h.visible=e<a||this.closed;h=this.edgeLabels[c];var k=(new THREE.Vector3).add(d.position);k.add(f.position);k=k.multiplyScalar(.5);var l=d.position.distanceTo(f.position);h.position.copy(k);h.setText(Potree.utils.addCommas(l.toFixed(2))+' '+this.lengthUnit.code);h.visible=this.showDistances&&
(e<a||this.closed)&&2<=this.points.length&&0<l;h=this.angleLabels[c];k=this.getAngleBetweenLines(d,g,f);l=f.position.clone().sub(g.position);l.multiplyScalar(.5);l=g.position.clone().add(l).sub(d.position).normalize();f=Math.min(d.position.distanceTo(g.position),d.position.distanceTo(f.position));f/=9;d=d.position.clone().add(l.multiplyScalar(f));h.position.copy(d);d=Potree.utils.addCommas((180/Math.PI*k).toFixed(1))+'\u00b0';h.setText(d);h.visible=this.showAngles&&(e<a||this.closed)&&3<=this.points.length&&
0<k}a=this.heightEdge;a.visible=this.showHeight;if(this.heightLabel.visible=this.showHeight)e=this.points.slice().sort((a,b)=>a.position.z-b.position.z),c=e[0].position.clone(),d=e[e.length-1].position.clone(),g=c.z,f=d.z,e=f-g,g=new THREE.Vector3(d.x,d.y,g),d=new THREE.Vector3(d.x,d.y,f),a.position.copy(c),a.geometry.vertices[0].set(0,0,0),a.geometry.vertices[1].copy(g).sub(c),a.geometry.vertices[2].copy(g).sub(c),a.geometry.vertices[3].copy(d).sub(c),a.geometry.verticesNeedUpdate=!0,a.geometry.computeBoundingSphere(),
a=g.clone().add(d).multiplyScalar(.5),this.heightLabel.position.copy(a),a=Potree.utils.addCommas(e.toFixed(2))+' '+this.lengthUnit.code,this.heightLabel.setText(a);this.areaLabel.position.copy(b);this.areaLabel.visible=this.showArea&&3<=this.points.length;b=Potree.utils.addCommas(this.getArea().toFixed(1))+' '+this.lengthUnit.code+'\u00b2';this.areaLabel.setText(b)}}raycast(a,b){for(var c=0;c<this.points.length;c++)this.spheres[c].raycast(a,b);for(c=0;c<b.length;c++){let e=b[c];e.distance=a.ray.origin.distanceTo(e.point)}b.sort(function(a,
b){return a.distance-b.distance})}get showCoordinates(){return this._showCoordinates}set showCoordinates(a){this._showCoordinates=a;this.update()}get showAngles(){return this._showAngles}set showAngles(a){this._showAngles=a;this.update()}get showHeight(){return this._showHeight}set showHeight(a){this._showHeight=a;this.update()}get showArea(){return this._showArea}set showArea(a){this._showArea=a;this.update()}get closed(){return this._closed}set closed(a){this._closed=a;this.update()}get showDistances(){return this._showDistances}set showDistances(a){this._showDistances=
a;this.update()}};
Potree.Profile=class extends THREE.Object3D{constructor(){super();this.constructor.counter=void 0===this.constructor.counter?0:this.constructor.counter+1;this.name='Profile_'+this.constructor.counter;this.points=[];this.spheres=[];this.edges=[];this.boxes=[];this.width=1;this.height=20;this._modifiable=!0;this.sphereGeometry=new THREE.SphereGeometry(.4,10,10);this.color=new THREE.Color(16711680);this.lineColor=new THREE.Color(16711680)}createSphereMaterial(){return new THREE.MeshLambertMaterial({shading:THREE.SmoothShading,color:16711680,
depthTest:!1,depthWrite:!1})}getSegments(){let a=[];for(let b=0;b<this.points.length-1;b++){let c=this.points[b].clone(),e=this.points[b+1].clone();a.push({start:c,end:e})}return a}getSegmentMatrices(){var a=this.getSegments();let b=[];for(let d of a){let {start:f,end:g}=d;a=new THREE.Object3D;var c=f.clone().setZ(0).distanceTo(g.clone().setZ(0));a.scale.set(c,1E4,this.width);a.up.set(0,0,1);c=(new THREE.Vector3).addVectors(f,g).multiplyScalar(.5);var e=(new THREE.Vector3).subVectors(g,f);e=new THREE.Vector3(e.y,
-e.x,0);a.position.set(0,0,0);a.lookAt(e);a.position.copy(c);a.updateMatrixWorld();b.push(a.matrixWorld)}return b}addMarker(a){this.points.push(a);let b=new THREE.Mesh(this.sphereGeometry,this.createSphereMaterial());this.add(b);this.spheres.push(b);if(1<this.points.length){var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3);c.colors.push(this.lineColor,this.lineColor,this.lineColor);var e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,linewidth:2,transparent:!0,
opacity:.4});e.depthTest=!1;c=new THREE.Line(c,e);c.visible=!1;this.add(c);this.edges.push(c);c=new THREE.BoxGeometry(1,1,1);e=new THREE.MeshBasicMaterial({color:16711680,transparent:!0,opacity:.2});c=new THREE.Mesh(c,e);c.visible=!1;this.add(c);this.boxes.push(c)}b.addEventListener('drag',(a)=>{let b=Potree.utils.getMousePointCloudIntersection(a.drag.end,a.viewer.scene.getActiveCamera(),a.viewer,a.viewer.scene.pointclouds);b&&(a=this.spheres.indexOf(a.drag.object),-1!==a&&this.setPosition(a,b.location))});
b.addEventListener('drop',(a)=>{a=this.spheres.indexOf(a.drag.object);-1!==a&&this.dispatchEvent({type:'marker_dropped',profile:this,index:a})});b.addEventListener('mouseover',(a)=>a.object.material.emissive.setHex(8947848));b.addEventListener('mouseleave',(a)=>a.object.material.emissive.setHex(0));this.dispatchEvent({type:'marker_added',profile:this,sphere:b});this.setPosition(this.points.length-1,a)}removeMarker(a){this.points.splice(a,1);this.remove(this.spheres[a]);let b=0===a?0:a-1;this.remove(this.edges[b]);
this.edges.splice(b,1);this.remove(this.boxes[b]);this.boxes.splice(b,1);this.spheres.splice(a,1);this.update();this.dispatchEvent({type:'marker_removed',profile:this})}setPosition(a,b){let c=this.points[a];c.copy(b);a={type:'marker_moved',profile:this,index:a,position:c.clone()};this.dispatchEvent(a);this.update()}setWidth(a){this.width=a;this.dispatchEvent({type:'width_changed',profile:this,width:a});this.update()}getWidth(){return this.width}update(){if(0!==this.points.length)if(1===this.points.length)this.spheres[0].position.copy(this.points[0]);
else{var a=this.points[0].clone(),b=this.points[0].clone(),c=new THREE.Vector3,e=this.points.length-1;for(let k=0;k<=e;k++){let l=this.points[k];var d=this.spheres[k],f=0===k?e:k-1,g=this.points[f],h=this.edges[f];let m=this.edges[k];f=this.boxes[f];d.position.copy(l);d.visible=this._modifiable?!0:!1;h&&(h.geometry.vertices[1].copy(l),h.geometry.verticesNeedUpdate=!0,h.geometry.computeBoundingSphere());m&&(m.geometry.vertices[0].copy(l),m.geometry.verticesNeedUpdate=!0,m.geometry.computeBoundingSphere());
f&&(h=l,d=g.clone().setZ(0).distanceTo(h.clone().setZ(0)),f.scale.set(d,1E6,this.width),f.up.set(0,0,1),d=(new THREE.Vector3).addVectors(g,h).multiplyScalar(.5),g=(new THREE.Vector3).subVectors(h,g),g=new THREE.Vector3(g.y,-g.x,0),f.position.set(0,0,0),f.lookAt(g),f.position.copy(d));c.add(l);a.min(l);b.max(l)}c.multiplyScalar(1/this.points.length);for(c=0;c<this.boxes.length;c++)this.boxes[c].position.z=a.z+(b.z-a.z)/2}}raycast(a,b){for(var c=0;c<this.points.length;c++)this.spheres[c].raycast(a,
b);for(c=0;c<b.length;c++){let e=b[c];e.distance=a.ray.origin.distanceTo(e.point)}b.sort(function(a,b){return a.distance-b.distance})}get modifiable(){return this._modifiable}set modifiable(a){this._modifiable=a;this.update()}};
Potree.Volume=class extends THREE.Object3D{constructor(a={}){super();this._clip=a.clip||!1;this.showVolumeLabel=this._visible=!0;this._modifiable=a.modifiable||!0;this.label=new Potree.TextSprite('0');this.label.setBorderColor({r:0,g:255,b:0,a:0});this.label.setBackgroundColor({r:0,g:255,b:0,a:0});this.label.material.depthTest=!1;this.label.material.depthWrite=!1;this.label.material.transparent=!0;this.label.position.y-=.5;this.add(this.label);this.label.updateMatrixWorld=()=>{let a=new THREE.Vector3;
a.setFromMatrixPosition(this.matrixWorld);this.label.position.copy(a);this.label.updateMatrix();this.label.matrixWorld.copy(this.label.matrix);this.label.matrixWorldNeedsUpdate=!1;for(let a=0,b=this.label.children.length;a<b;a++)this.label.children[a].updateMatrixWorld(!0)};this.addEventListener('select',(a)=>{});this.addEventListener('deselect',(a)=>{})}get visible(){return this._visible}set visible(a){this._visible!==a&&(this._visible=a,this.dispatchEvent({type:'visibility_changed',object:this}))}getVolume(){console.warn('override this in subclass')}update(){}raycast(a,
b){}get clip(){return this._clip}set clip(a){this._clip!==a&&(this._clip=a,this.update(),this.dispatchEvent({type:'clip_changed',object:this}))}get modifieable(){return this._modifiable}set modifieable(a){this._modifiable=a;this.update()}};
Potree.BoxVolume=class extends Potree.Volume{constructor(a={}){super(a);this.constructor.counter=void 0===this.constructor.counter?0:this.constructor.counter+1;this.name='box_'+this.constructor.counter;a=new THREE.BoxGeometry(1,1,1);a.computeBoundingBox();let b=new THREE.Geometry;b.vertices.push(new THREE.Vector3(-.5,-.5,.5));b.vertices.push(new THREE.Vector3(.5,-.5,.5));b.vertices.push(new THREE.Vector3(.5,-.5,.5));b.vertices.push(new THREE.Vector3(.5,-.5,-.5));b.vertices.push(new THREE.Vector3(.5,
-.5,-.5));b.vertices.push(new THREE.Vector3(-.5,-.5,-.5));b.vertices.push(new THREE.Vector3(-.5,-.5,-.5));b.vertices.push(new THREE.Vector3(-.5,-.5,.5));b.vertices.push(new THREE.Vector3(-.5,.5,.5));b.vertices.push(new THREE.Vector3(.5,.5,.5));b.vertices.push(new THREE.Vector3(.5,.5,.5));b.vertices.push(new THREE.Vector3(.5,.5,-.5));b.vertices.push(new THREE.Vector3(.5,.5,-.5));b.vertices.push(new THREE.Vector3(-.5,.5,-.5));b.vertices.push(new THREE.Vector3(-.5,.5,-.5));b.vertices.push(new THREE.Vector3(-.5,
.5,.5));b.vertices.push(new THREE.Vector3(-.5,-.5,.5));b.vertices.push(new THREE.Vector3(-.5,.5,.5));b.vertices.push(new THREE.Vector3(.5,-.5,.5));b.vertices.push(new THREE.Vector3(.5,.5,.5));b.vertices.push(new THREE.Vector3(.5,-.5,-.5));b.vertices.push(new THREE.Vector3(.5,.5,-.5));b.vertices.push(new THREE.Vector3(-.5,-.5,-.5));b.vertices.push(new THREE.Vector3(-.5,.5,-.5));this.material=new THREE.MeshBasicMaterial({color:65280,transparent:!0,opacity:.3,depthTest:!0,depthWrite:!1});this.box=new THREE.Mesh(a,
this.material);this.box.geometry.computeBoundingBox();this.boundingBox=this.box.geometry.boundingBox;this.add(this.box);this.frame=new THREE.LineSegments(b,new THREE.LineBasicMaterial({color:0}));this.add(this.frame);this.update()}update(){this.boundingBox=this.box.geometry.boundingBox;this.boundingSphere=this.boundingBox.getBoundingSphere(new THREE.Sphere);this._clip?(this.box.visible=!1,this.label.visible=!1):(this.box.visible=!0,this.label.visible=this.showVolumeLabel)}raycast(a,b){let c=[];this.box.raycast(a,
c);0<c.length&&(a=c[0],b.push({distance:a.distance,object:this,point:a.point.clone()}))}getVolume(){return Math.abs(this.scale.x*this.scale.y*this.scale.z)}};
Potree.SphereVolume=class extends Potree.Volume{constructor(a={}){super(a);this.constructor.counter=void 0===this.constructor.counter?0:this.constructor.counter+1;this.name='sphere_'+this.constructor.counter;a=new THREE.SphereGeometry(1,32,32);a.computeBoundingBox();this.material=new THREE.MeshBasicMaterial({color:65280,transparent:!0,opacity:.3,depthTest:!0,depthWrite:!1});this.sphere=new THREE.Mesh(a,this.material);this.sphere.visible=!1;this.sphere.geometry.computeBoundingBox();this.boundingBox=
this.sphere.geometry.boundingBox;this.add(this.sphere);this.label.visible=!1;var b=new THREE.Geometry;for(var c=0;8>c;c++){var e=c/8*Math.PI*2,d=Math.cos(e);e=Math.sin(e);for(var f=0;64>=f;f++){var g=f/64*Math.PI*2,h=g+2*Math.PI/64,k=Math.cos(g),l=Math.sin(h);h=Math.cos(h);g=new THREE.Vector3(d*k,e*k,Math.sin(g));b.vertices.push(g);l=new THREE.Vector3(d*h,e*h,l);b.vertices.push(l)}}for(c=0;6>=c;c++)for(e=c/6,e=-Math.PI/2*(1-e)+Math.PI/2*e,d=Math.sin(e),console.log(e,d),e=0;64>=e;e++)l=e/64*Math.PI*
2,g=l+2*Math.PI/64,f=Math.cos(g),g=Math.sin(g),k=Math.sqrt(1-d*d),l=new THREE.Vector3(Math.cos(l)*k,Math.sin(l)*k,d),b.vertices.push(l),f=new THREE.Vector3(f*k,g*k,d),b.vertices.push(f);this.frame=new THREE.LineSegments(b,new THREE.LineBasicMaterial({color:0}));this.add(this.frame);b=new THREE.MeshBasicMaterial({wireframe:!0,color:0});this.frame=new THREE.Mesh(a,b);this.update()}update(){this.boundingBox=this.sphere.geometry.boundingBox;this.boundingSphere=this.boundingBox.getBoundingSphere(new THREE.Sphere)}raycast(a,
b){let c=[];this.sphere.raycast(a,c);0<c.length&&(a=c[0],b.push({distance:a.distance,object:this,point:a.point.clone()}))}getVolume(){return 4/3*Math.PI*this.scale.x*this.scale.y*this.scale.z}};
Potree.PolygonClipVolume=class extends THREE.Object3D{constructor(a){super();this.constructor.counter=void 0===this.constructor.counter?0:this.constructor.counter+1;this.name='polygon_clip_volume_'+this.constructor.counter;this.camera=a.clone();this.camera.rotation.set(...a.rotation.toArray());this.camera.updateMatrixWorld();this.camera.updateProjectionMatrix();this.camera.matrixWorldInverse.getInverse(this.camera.matrixWorld);this.viewMatrix=this.camera.matrixWorldInverse.clone();this.projMatrix=
this.camera.projectionMatrix.clone();this.markers=[];this.initialized=!1}addMarker(){let a=new THREE.Mesh,b,c=(b)=>{let c=b.viewer.renderer.getSize(new THREE.Vector3);b=new THREE.Vector3(b.drag.end.x/c.width*2-1,b.drag.end.y/c.height*-2+1,0);a.position.copy(b)},e=(a)=>{b()};b=(b)=>{a.removeEventListener('drag',c);a.removeEventListener('drop',e)};a.addEventListener('drag',c);a.addEventListener('drop',e);this.markers.push(a)}removeLastMarker(){0<this.markers.length&&this.markers.splice(this.markers.length-
1,1)}};
Potree.Box3Helper=class extends THREE.LineSegments{constructor(a,b){void 0===b&&(b=16776960);let c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),e=new Float32Array([a.min.x,a.min.y,a.min.z,a.max.x,a.min.y,a.min.z,a.max.x,a.min.y,a.max.z,a.min.x,a.min.y,a.max.z,a.min.x,a.max.y,a.min.z,a.max.x,a.max.y,a.min.z,a.max.x,a.max.y,a.max.z,a.min.x,a.max.y,a.max.z]);a=new THREE.BufferGeometry;a.setIndex(new THREE.BufferAttribute(c,1));a.addAttribute('position',new THREE.BufferAttribute(e,3));
b=new THREE.LineBasicMaterial({color:b});super(a,b)}};
Potree.PointCloudSM=class{constructor(a){this.potreeRenderer=a;this.threeRenderer=this.potreeRenderer.threeRenderer;this.target=new THREE.WebGLRenderTarget(2048,2048,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,type:THREE.FloatType});this.target.depthTexture=new THREE.DepthTexture;this.target.depthTexture.type=THREE.UnsignedIntType;this.threeRenderer.setClearColor(0,1);this.threeRenderer.clearTarget(this.target,!0,!0,!0)}setLight(a){this.light=a;this.camera=new THREE.PerspectiveCamera(180*
a.angle/Math.PI,a.shadow.mapSize.width/a.shadow.mapSize.height,.1,0===a.distance?1E4:a.distance);this.camera.up.set(0,0,1);this.camera.position.copy(a.position);a=(new THREE.Vector3).addVectors(a.position,a.getWorldDirection(Potree.tempVector3));this.camera.lookAt(a);this.camera.updateProjectionMatrix();this.camera.updateMatrix();this.camera.updateMatrixWorld();this.camera.matrixWorldInverse.getInverse(this.camera.matrixWorld)}setSize(a,b){this.target.width===a&&this.target.height===b||this.target.dispose();
this.target.setSize(a,b)}render(a,b){this.threeRenderer.clearTarget(this.target,!0,!0,!0);this.potreeRenderer.render(a,this.camera,this.target,{})}};
Potree.GeoJSONExporter=class{static measurementToFeatures(a){var b=a.points.map((a)=>a.position.toArray());let c=[];1===b.length?c.push({type:'Feature',geometry:{type:'Point',coordinates:b[0]},properties:{name:a.name}}):1<b.length&&!a.closed?c.push({type:'Feature',geometry:{type:'LineString',coordinates:b},properties:{name:a.name}}):1<b.length&&a.closed&&(b={type:'Feature',geometry:{type:'Polygon',coordinates:[[...b,b[0]]]},properties:{name:a.name}},c.push(b));a.showDistances&&a.edgeLabels.forEach((a)=>
{a={type:'Feature',geometry:{type:'Point',coordinates:a.position.toArray()},properties:{distance:a.text}};c.push(a)});a.showArea&&(a={type:'Feature',geometry:{type:'Point',coordinates:a.areaLabel.position.toArray()},properties:{area:a.areaLabel.text}},c.push(a));return c}static toString(a){a instanceof Array||(a=[a]);a=a.filter((a)=>a instanceof Potree.Measure);let b=[];for(let c of a)a=Potree.GeoJSONExporter.measurementToFeatures(c),b=b.concat(a);return JSON.stringify({type:'FeatureCollection',features:b},
null,'\t')}};
Potree.DXFExporter=class{static measurementPointSection(a){return(a=a.points[0].position)?`0\nCIRCLE\n8\nlayer_point\n10\n${a.x}\n20\n${a.y}\n30\n${a.z}\n40\n1.0\n`:''}static measurementPolylineSection(a){var b=8;a.closed&&(b+=1);b=`0\nPOLYLINE\n8\nlayer_polyline\n62\n1\n66\n1\n10\n0.0\n20\n0.0\n30\n0.0\n70\n${b}\n`;for(let c of a.points)c=c.position,b+=`0\nVERTEX\n8\n0\n10\n${c.x}\n20\n${c.y}\n30\n${c.z}\n70\n32\n`;return b+'0\nSEQEND\n'}static measurementSection(a){if(0===a.points.length)return'';if(1===
a.points.length)return Potree.DXFExporter.measurementPointSection(a);if(2<=a.points.length)return Potree.DXFExporter.measurementPolylineSection(a)}static toString(a){a instanceof Array||(a=[a]);a=a.filter((a)=>a instanceof Potree.Measure);var b=a.filter((a)=>a instanceof Potree.Measure).map((a)=>a.points).reduce((a,b)=>a.concat(b)).map((a)=>a.position),c=new THREE.Vector3(Infinity,Infinity,Infinity);let e=new THREE.Vector3(-Infinity,-Infinity,-Infinity);for(let a of b)c.min(a),e.max(a);b=`999\nDXF created from potree\n0\nSECTION\n2\nHEADER\n9\n$ACADVER\n1\nAC1006\n9\n$INSBASE\n10\n0.0\n20\n0.0\n30\n0.0\n9\n$EXTMIN\n10\n${c.x}\n20\n${c.y}\n30\n${c.z}\n9\n$EXTMAX\n10\n${e.x}\n20\n${e.y}\n30\n${e.z}\n0\nENDSEC\n`;
c='0\nSECTION\n2\nENTITIES\n';for(let b of a)c+=Potree.DXFExporter.measurementSection(b);return b+(c+'0\nENDSEC\n')+'0\nEOF'}};
Potree.CSVExporter=class{static toString(a){var b='';let c=Object.keys(a.data).filter((a)=>'normal'!==a).sort((a,b)=>{if('position'===a)return-1;if('position'===b)return 1;if('color'===a)return-1;if('color'===b)return 1});b=[];for(var e of c){var d=a.data[e].length/a.numPoints;if('position'===e)b=b.concat(['x','y','z']);else if('color'===e)b=b.concat(['r','g','b','a']);else if(1<d)for(var f=0;f<d;f++)b.push(`${e}_${f}`);else b.push(e)}b=b.join(', ')+'\n';for(e=0;e<a.numPoints;e++){d=[];for(let b of c)f=
a.data[b].length/a.numPoints,f=a.data[b].subarray(f*e,f*e+f).join(', '),d.push(f);b+=d.join(', ')+'\n'}return b}};
Potree.LASExporter=class{static toLAS(a){var b=a.boundingBox;let c=b.min.clone();var e=b.min.distanceTo(b.max);let d=new THREE.Vector3(.001,.001,.001);d=1E6<e?new THREE.Vector3(.01,.01,.01):new THREE.Vector3(.001,.001,.001);var f=function(a,b,c){c=new Uint8Array(c);for(let d=0;d<a.length;d++){let e=a.charCodeAt(d);c[b+d]=e}};e=new ArrayBuffer(227+28*a.numPoints);let g=new DataView(e);var h=new Uint8Array(e);f('LASF',0,e);h[24]=1;h[25]=2;f('Potree 1.5',58,e);g.setUint16(94,227,!0);g.setUint32(96,227,
!0);h[104]=2;g.setUint16(105,28,!0);g.setUint32(107,a.numPoints,!0);g.setFloat64(131,d.x,!0);g.setFloat64(139,d.y,!0);g.setFloat64(147,d.z,!0);g.setFloat64(155,c.x,!0);g.setFloat64(163,c.y,!0);g.setFloat64(171,c.z,!0);g.setFloat64(179,b.max.x,!0);g.setFloat64(187,b.min.x,!0);g.setFloat64(195,b.max.y,!0);g.setFloat64(203,b.min.y,!0);g.setFloat64(211,b.max.z,!0);g.setFloat64(219,b.min.z,!0);b=227;for(f=0;f<a.numPoints;f++){var k=a.data.position[3*f+1],l=a.data.position[3*f+2];h=parseInt((a.data.position[3*
f]-c.x)/d.x);k=parseInt((k-c.y)/d.y);l=parseInt((l-c.z)/d.z);g.setUint32(b+0,h,!0);g.setUint32(b+4,k,!0);g.setUint32(b+8,l,!0);a.data.intensity&&g.setUint16(b+12,a.data.intensity[f],!0);h=0;a.data.returnNumber&&(h+=a.data.returnNumber[f]);a.data.numberOfReturns&&(h+=a.data.numberOfReturns[f]<<3);g.setUint8(b+14,h);a.data.classification&&g.setUint8(b+15,a.data.classification[f]);a.data.pointSourceID&&g.setUint16(b+18,a.data.pointSourceID[f]);a.data.color&&(g.setUint16(b+20,255*a.data.color[4*f],!0),
g.setUint16(b+22,255*a.data.color[4*f+1],!0),g.setUint16(b+24,255*a.data.color[4*f+2],!0));b+=28}return e}};
Potree.PointCloudArena4DNode=class extends Potree.PointCloudTreeNode{constructor(){super();this.kdtree=this.sceneNode=this.right=this.left=null}getNumPoints(){return this.geometryNode.numPoints}isLoaded(){return!0}isTreeNode(){return!0}isGeometryNode(){return!1}getLevel(){return this.geometryNode.level}getBoundingSphere(){return this.geometryNode.boundingSphere}getBoundingBox(){return this.geometryNode.boundingBox}toTreeNode(a){let b=null;this.left===a?b=this.left:this.right===a&&(b=this.right);if(b.loaded){a=
new Potree.PointCloudArena4DNode;var c=THREE.PointCloud(b.geometry,this.kdtree.material);c.visible=!1;a.kdtree=this.kdtree;a.geometryNode=b;a.sceneNode=c;a.parent=this;a.left=this.geometryNode.left;a.right=this.geometryNode.right}}getChildren(){let a=[];this.left&&a.push(this.left);this.right&&a.push(this.right);return a}};
Potree.PointCloudArena4D=class extends Potree.PointCloudTree{constructor(a){super();this.root=null;a.root?this.root=a.root:a.addEventListener('hierarchy_loaded',()=>{this.root=a.root});this.visiblePointsTarget=2E6;this.minimumNodePixelSize=150;this.position.sub(a.offset);this.updateMatrix();this.numVisiblePoints=this.numVisibleNodes=0;this.boundingBoxNodes=[];this.loadQueue=[];this.visibleNodes=[];this.pcoGeometry=a;this.boundingBox=this.pcoGeometry.boundingBox;this.boundingSphere=this.pcoGeometry.boundingSphere;
this.material=new Potree.PointCloudMaterial({vertexColors:THREE.VertexColors,size:.05,treeType:Potree.TreeType.KDTREE});this.material.sizeType=Potree.PointSizeType.ATTENUATED;this.material.size=.05;this.profileRequests=[];this.name=''}getBoundingBoxWorld(){this.updateMatrixWorld(!0);return Potree.utils.computeTransformedBoundingBox(this.boundingBox,this.matrixWorld)}setName(a){this.name!==a&&(this.name=a,this.dispatchEvent({type:'name_changed',name:a,pointcloud:this}))}getName(){return this.name}getLevel(){return this.level}toTreeNode(a,
b){let c=new Potree.PointCloudArena4DNode,e=new THREE.Points(a.geometry,this.material);e.frustumCulled=!1;e.onBeforeRender=(b,e,g,h,k,l)=>{k.program&&(b.getContext().useProgram(k.program.program),k.program.getUniforms().map.level&&(e=a.getLevel(),k.uniforms.level.value=e,k.program.getUniforms().map.level.setValue(b.getContext(),e)),this.visibleNodeTextureOffsets&&k.program.getUniforms().map.vnStart&&(e=this.visibleNodeTextureOffsets.get(c),k.uniforms.vnStart.value=e,k.program.getUniforms().map.vnStart.setValue(b.getContext(),
e)),k.program.getUniforms().map.pcIndex&&(e=c.pcIndex?c.pcIndex:this.visibleNodes.indexOf(c),k.uniforms.pcIndex.value=e,k.program.getUniforms().map.pcIndex.setValue(b.getContext(),e)))};c.geometryNode=a;c.sceneNode=e;c.pointcloud=this;c.left=a.left;c.right=a.right;b?(b.sceneNode.add(e),b.left===a?b.left=c:b.right===a&&(b.right=c)):(this.root=c,this.add(e));a.oneTimeDisposeHandlers.push(function(){b.sceneNode.remove(c.sceneNode);b.left===c?b.left=a:b.right===c&&(b.right=a)});return c}updateMaterial(a,
b,c,e){a.fov=Math.PI/180*c.fov;a.screenWidth=e.domElement.clientWidth;a.screenHeight=e.domElement.clientHeight;a.spacing=this.pcoGeometry.spacing;a.near=c.near;a.far=c.far;this.maxLevel>a.levels&&(a.levels=this.maxLevel+2);b=this.boundingBox.getSize(new THREE.Vector3);a.bbSize=[b.x,b.y,b.z]}updateVisibleBounds(){}hideDescendants(a){let b=[];for(var c=0;c<a.children.length;c++){var e=a.children[c];e.visible&&b.push(e)}for(;0<b.length;)for(a=b.shift(),a.visible=!1,a.boundingBoxNode&&(a.boundingBoxNode.visible=
!1),c=0;c<a.children.length;c++)e=a.children[c],e.visible&&b.push(e)}updateMatrixWorld(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1}nodesOnRay(a,b){let c=[];b=b.clone();for(let e=0;e<a.length;e++){let d=a[e],f=d.getBoundingSphere(new THREE.Sphere).clone().applyMatrix4(d.sceneNode.matrixWorld);
b.intersectsSphere(f)&&c.push(d)}return c}pick(a,b,c,e={}){var d=a.renderer,f=a.pRenderer;performance.mark('pick-start');var g=(a,b)=>void 0!==a?a:b;a=g(e.pickWindowSize,17);g(e.pickOutsideClipRegion,!1);var h=d.getSize(new THREE.Vector3),k=Math.ceil(g(e.width,h.width));h=Math.ceil(g(e.height,h.height));var l=g(e.pointSizeType,this.material.pointSizeType);g=g(e.pointSize,this.material.size);c=this.nodesOnRay(this.visibleNodes,c);if(0===c.length)return null;if(!this.pickState){var m=new THREE.Scene,
n=new Potree.PointCloudMaterial;n.pointColorType=Potree.PointColorType.POINT_INDEX;this.pickState={renderTarget:new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),material:n,scene:m}}m=this.pickState;n=m.material;n.pointSizeType=l;n.shape=this.material.shape;n.size=g;n.uniforms.minSize.value=this.material.uniforms.minSize.value;n.uniforms.maxSize.value=this.material.uniforms.maxSize.value;n.classification=this.material.classification;
e.pickClipped?(n.clipBoxes=this.material.clipBoxes,n.clipTask=this.material.clipTask===Potree.ClipTask.HIGHLIGHT?Potree.ClipTask.NONE:this.material.clipTask):n.clipBoxes=[];this.updateMaterial(n,c,b,d);m.renderTarget.setSize(k,h);g=new THREE.Vector2(e.x,e.y);l=d.getContext();l.enable(l.SCISSOR_TEST);l.scissor(parseInt(g.x-(a-1)/2),parseInt(g.y-(a-1)/2),parseInt(a),parseInt(a));d.state.buffers.depth.setTest(n.depthTest);d.state.buffers.depth.setMask(n.depthWrite);d.state.setBlending(THREE.NoBlending);
d.clearTarget(m.renderTarget,!0,!0,!0);{d.setRenderTarget(m.renderTarget);l.clearColor(0,0,0,0);d.clearTarget(m.renderTarget,!0,!0,!0);let a=this.material;this.material=n;f.renderOctree(this,c,b,m.renderTarget);this.material=a}b=parseInt(Math.min(Math.max(0,g.x-(a-1)/2),k));f=parseInt(Math.min(Math.max(0,g.y-(a-1)/2),h));k=parseInt(Math.min(b+a,k)-b);h=parseInt(Math.min(f+a,h)-f);k=new Uint8Array(4*k*h);l.readPixels(b,f,a,a,l.RGBA,l.UNSIGNED_BYTE,k);d.setRenderTarget(null);d.resetGLState();d.setScissorTest(!1);
l.disable(l.SCISSOR_TEST);h=new Uint32Array(k.buffer);d=[];for(b=0;b<a;b++)for(f=0;f<a;f++)m=b+f*a,l=Math.pow(b-(a-1)/2,2)+Math.pow(f-(a-1)/2,2),g=k[4*m+3],k[4*m+3]=0,m=h[m],0===g&&0===m||void 0===g||void 0===m||(g={pIndex:m,pcIndex:g,distanceToCenter:l},e.all?d.push(g):0<d.length?l<d[0].distanceToCenter&&(d[0]=g):d.push(g));for(let e of d){a={};if(!c[e.pcIndex])return null;h=c[e.pcIndex];k=h.sceneNode;h=h.geometryNode.geometry;for(let c in h.attributes)b=h.attributes[c],'position'===c&&(b=new THREE.Vector3(b.array[3*
e.pIndex],b.array[3*e.pIndex+1],b.array[3*e.pIndex+2]),b.applyMatrix4(k.matrixWorld),a[c]=b);e.point=a}performance.mark('pick-end');performance.measure('pick','pick-start','pick-end');return e.all?d.map((a)=>a.point):0===d.length?null:d[0].point}computeVisibilityTextureData(a){Potree.measureTimings&&performance.mark('computeVisibilityTextureData-start');let b=new Uint8Array(3*a.length),c=new Map;a=a.slice();a.sort(function(a,b){let c=a.geometryNode.level,d=b.geometryNode.level;a=a.geometryNode.number;
b=b.geometryNode.number;return c!==d?c-d:a<b?-1:a>b?1:0});let e=[];for(var d=0;d<a.length;d++)e.push(a[d].geometryNode.number);for(d=0;d<a.length;d++){let f=a[d];c.set(f,d);let g=0,h=0,k=0;f.geometryNode.left&&0<e.indexOf(f.geometryNode.left.number)&&(g+=1,h=e.indexOf(f.geometryNode.left.number)-d);f.geometryNode.right&&0<e.indexOf(f.geometryNode.right.number)&&(g+=2,h=0===h?e.indexOf(f.geometryNode.right.number)-d:h);'X'===f.geometryNode.split?k=1:'Y'===f.geometryNode.split?k=2:'Z'===f.geometryNode.split&&
(k=4);b[3*d]=g;b[3*d+1]=h;b[3*d+2]=k}Potree.measureTimings&&(performance.mark('computeVisibilityTextureData-end'),performance.measure('render.computeVisibilityTextureData','computeVisibilityTextureData-start','computeVisibilityTextureData-end'));return{data:b,offsets:c}}get progress(){return this.pcoGeometry.root?0<Potree.numNodesLoading?0:1:0}};
Potree.PointCloudArena4DGeometryNode=class{constructor(){this.pcoGeometry=this.number=this.boundingBox=this.right=this.left=null;this.loaded=!1;this.level=this.numPoints=0;this.children=[];this.oneTimeDisposeHandlers=[]}isGeometryNode(){return!0}isTreeNode(){return!1}isLoaded(){return this.loaded}getBoundingSphere(){return this.boundingSphere}getBoundingBox(){return this.boundingBox}getChildren(){let a=[];this.left&&a.push(this.left);this.right&&a.push(this.right);return a}getLevel(){return this.level}load(){if(!(this.loaded||
this.loading||Potree.numNodesLoading>=Potree.maxNodesLoading)){this.loading=!0;Potree.numNodesLoading++;var a=this.pcoGeometry.url+'?node='+this.number,b=Potree.XHRFactory.createXMLHttpRequest();b.open('GET',a,!0);b.responseType='arraybuffer';var c=this;b.onreadystatechange=function(){if(4===b.readyState&&200===b.status){var a=b.response,d=new DataView(a);a=a.byteLength/17;var f=new ArrayBuffer(28*a);new DataView(f);f=new Float32Array(3*a);var g=new Uint8Array(4*a),h=new Float32Array(a),k=new Uint8Array(a),
l=new ArrayBuffer(4*a),m=new Uint32Array(l),n=new THREE.Box3;for(let b=0;b<a;b++){let a=d.getFloat32(17*b,!0)+c.boundingBox.min.x,e=d.getFloat32(17*b+4,!0)+c.boundingBox.min.y,l=d.getFloat32(17*b+8,!0)+c.boundingBox.min.z,p=d.getUint8(17*b+12,!0),A=d.getUint8(17*b+13,!0),v=d.getUint8(17*b+14,!0),w=d.getUint8(17*b+15,!0),x=d.getUint8(17*b+16,!0);n.expandByPoint(new THREE.Vector3(a,e,l));f[3*b]=a;f[3*b+1]=e;f[3*b+2]=l;g[4*b]=p;g[4*b+1]=A;g[4*b+2]=v;g[4*b+3]=255;h[b]=w;k[b]=x;m[b]=b}d=new THREE.BufferGeometry;
d.addAttribute('position',new THREE.BufferAttribute(f,3));d.addAttribute('color',new THREE.BufferAttribute(g,4,!0));d.addAttribute('intensity',new THREE.BufferAttribute(h,1));d.addAttribute('classification',new THREE.BufferAttribute(k,1));f=new THREE.BufferAttribute(new Uint8Array(l),4,!0);d.addAttribute('indices',f);c.geometry=d;c.numPoints=a;c.loaded=!0;c.loading=!1;Potree.numNodesLoading--}};b.send(null)}}dispose(){if(this.geometry&&null!=this.parent){this.geometry.dispose();this.geometry=null;
this.loaded=!1;for(let a=0;a<this.oneTimeDisposeHandlers.length;a++)(0,this.oneTimeDisposeHandlers[a])();this.oneTimeDisposeHandlers=[]}}getNumPoints(){return this.numPoints}};
Potree.PointCloudArena4DGeometry=class extends THREE.EventDispatcher{constructor(){super();this.version=this.numPoints=0;this.boundingBox=null;this.numNodes=0;this.root=this.url=this.provider=this.name=null;this.levels=0;this._spacing=null;this.pointAttributes=new Potree.PointAttributes(['POSITION_CARTESIAN','COLOR_PACKED'])}static load(a,b){let c=Potree.XHRFactory.createXMLHttpRequest();c.open('GET',a+'?info',!0);c.onreadystatechange=function(){try{if(4===c.readyState&&200===c.status){let e=JSON.parse(c.responseText),
d=new Potree.PointCloudArena4DGeometry;d.url=a;d.name=e.Name;d.provider=e.Provider;d.numNodes=e.Nodes;d.numPoints=e.Points;d.version=e.Version;d.boundingBox=new THREE.Box3((new THREE.Vector3).fromArray(e.BoundingBox.slice(0,3)),(new THREE.Vector3).fromArray(e.BoundingBox.slice(3,6)));e.Spacing&&(d.spacing=e.Spacing);let f=d.boundingBox.min.clone().multiplyScalar(-1);d.boundingBox.min.add(f);d.boundingBox.max.add(f);d.offset=f;let g=d.boundingBox.getCenter(),h=d.boundingBox.getSize(new THREE.Vector3).length()/
2;d.boundingSphere=new THREE.Sphere(g,h);d.loadHierarchy();b(d)}else 4===c.readyState&&b(null)}catch(e){console.error(e.message),b(null)}};c.send(null)}loadHierarchy(){let a=this.url+'?tree',b=Potree.XHRFactory.createXMLHttpRequest();b.open('GET',a,!0);b.responseType='arraybuffer';b.onreadystatechange=()=>{if(4===b.readyState&&200===b.status){var a=b.response,e=a.byteLength/3;a=new DataView(a);var d=[],f=null,g=0;for(let b=0;b<e;b++){var h=a.getUint8(3*b,!0),k=0<(h&1),l=0<(h&2);let c=0<(h&8),e=0<
(h&16),m=null;0<(h&4)?m='X':c&&(m='Y');e&&(m='Z');h=new Potree.PointCloudArena4DGeometryNode;h.hasLeft=k;h.hasRight=l;h.split=m;h.isLeaf=!k&&!l;h.number=b;h.left=null;h.right=null;h.pcoGeometry=this;h.level=d.length;g=Math.max(g,h.level);0<d.length?(k=d[d.length-1],h.boundingBox=k.boundingBox.clone(),l=k.boundingBox.getSize(new THREE.Vector3),k.hasLeft&&!k.left?(k.left=h,k.children.push(h),'X'===k.split?h.boundingBox.max.x=h.boundingBox.min.x+l.x/2:'Y'===k.split?h.boundingBox.max.y=h.boundingBox.min.y+
l.y/2:'Z'===k.split&&(h.boundingBox.max.z=h.boundingBox.min.z+l.z/2),k=h.boundingBox.getCenter(),l=h.boundingBox.getSize(new THREE.Vector3).length()/2,h.boundingSphere=new THREE.Sphere(k,l)):(k.right=h,k.children.push(h),'X'===k.split?h.boundingBox.min.x+=l.x/2:'Y'===k.split?h.boundingBox.min.y+=l.y/2:'Z'===k.split&&(h.boundingBox.min.z+=l.z/2),k=h.boundingBox.getCenter(),l=h.boundingBox.getSize(new THREE.Vector3).length()/2,h.boundingSphere=new THREE.Sphere(k,l))):(f=h,f.boundingBox=this.boundingBox.clone(),
k=f.boundingBox.getCenter(),l=f.boundingBox.getSize(new THREE.Vector3).length()/2,f.boundingSphere=new THREE.Sphere(k,l));k=h.boundingBox.getSize(new THREE.Vector3);h.spacing=(k.x+k.y+k.z)/3/75;h.estimatedSpacing=h.spacing;d.push(h);if(h.isLeaf)for(h=!1;!h&&0<d.length;)d.pop(),h=d[d.length-1],h=0<d.length&&h.hasRight&&null==h.right}this.root=f;this.levels=g;this.dispatchEvent({type:'hierarchy_loaded'})}};b.send(null)}get spacing(){if(this._spacing)return this._spacing;if(this.root)return this.root.spacing}set spacing(a){this._spacing=
a}};
Potree.GLProgram=class{constructor(a,b){this.gl=a;this.material=b;this.program=a.createProgram();this.recompile()}compileShader(a,b){var c=this.gl;a=c.createShader(a);c.shaderSource(a,b);c.compileShader(a);return c.getShaderParameter(a,c.COMPILE_STATUS)?a:(console.error('could not compile shader:'),c=c.getShaderInfoLog(a),console.error(c,b),null)}recompile(){let a=this.gl;var b=this.compileShader(a.VERTEX_SHADER,this.material.vertexShader),c=this.compileShader(a.FRAGMENT_SHADER,this.material.fragmentShader);if(null!==
b&&null!==c){var e=this.program;a.attachShader(e,b);a.attachShader(e,c);a.linkProgram(e);if(a.getProgramParameter(e,a.LINK_STATUS)){a.detachShader(e,b);a.detachShader(e,c);a.deleteShader(b);a.deleteShader(c);a.useProgram(e);b={};c=a.getProgramParameter(e,a.ACTIVE_UNIFORMS);for(let d=0;d<c;d++){let c=a.getActiveUniform(e,d).name,g=a.getUniformLocation(e,c);b[c]=g}this.uniforms=b}else console.error('could not compile/link program:'),console.error(this.material.vertexShader),console.error(this.material.fragmentShader)}}};
Potree.InterleavedBufferAttribute=class{constructor(a,b,c,e,d){this.name=a;this.bytes=b;this.numElements=c;this.normalized=d;this.type=e}};Potree.InterleavedBuffer=class{constructor(a,b,c){this.data=a;this.attributes=b;this.stride=b.reduce((a,b)=>a+b.bytes,0);this.stride=4*Math.ceil(this.stride/4);this.numElements=c}offset(a){let b=0;for(let c of this.attributes){if(c.name===a)return b;b+=c.bytes}return null}};
Potree.toInterleavedBufferAttribute=function(a){let b=null;a.name===Potree.PointAttribute.POSITION_CARTESIAN.name?b=new Potree.InterleavedBufferAttribute('position',12,3,'FLOAT',!1):a.name===Potree.PointAttribute.COLOR_PACKED.name?b=new Potree.InterleavedBufferAttribute('color',4,4,'UNSIGNED_BYTE',!0):a.name===Potree.PointAttribute.INTENSITY.name?b=new Potree.InterleavedBufferAttribute('intensity',4,1,'FLOAT',!1):a.name===Potree.PointAttribute.CLASSIFICATION.name?b=new Potree.InterleavedBufferAttribute('classification',
4,1,'FLOAT',!1):a.name===Potree.PointAttribute.RETURN_NUMBER.name?b=new Potree.InterleavedBufferAttribute('returnNumber',4,1,'FLOAT',!1):a.name===Potree.PointAttribute.NUMBER_OF_RETURNS.name?b=new Potree.InterleavedBufferAttribute('numberOfReturns',4,1,'FLOAT',!1):a.name===Potree.PointAttribute.SOURCE_ID.name?b=new Potree.InterleavedBufferAttribute('pointSourceID',4,1,'FLOAT',!1):a.name===Potree.PointAttribute.NORMAL_SPHEREMAPPED.name?b=new Potree.InterleavedBufferAttribute('normal',12,3,'FLOAT',
!1):a.name===Potree.PointAttribute.NORMAL_OCT16.name?b=new Potree.InterleavedBufferAttribute('normal',12,3,'FLOAT',!1):a.name===Potree.PointAttribute.NORMAL.name&&(b=new Potree.InterleavedBufferAttribute('normal',12,3,'FLOAT',!1));return b};
var GeoTIFF=function(a){class b{constructor(a){for(let b of Object.keys(a))this[b]=a[b]}inspect(){return`Enum(${this.name}: ${this.value})`}}class c{constructor(a){this.object=a;for(let c of Object.keys(a)){let d=a[c];'object'===typeof d?d.name=c:d={name:c,value:d};this[c]=new b(d)}}fromValue(a){for(let b of Object.keys(this.object))if(this[b].value===a)return this[b];throw Error(`No enum for value: ${a}`);}}const e=new c({LITTLE:'II',BIG:'MM'}),d=new c({BYTE:{value:1,bytes:1},ASCII:{value:2,bytes:1},
SHORT:{value:3,bytes:2},LONG:{value:4,bytes:4},RATIONAL:{value:5,bytes:8},SBYTE:{value:6,bytes:1},UNDEFINED:{value:7,bytes:1},SSHORT:{value:8,bytes:2},SLONG:{value:9,bytes:4},SRATIONAL:{value:10,bytes:8},FLOAT:{value:11,bytes:4},DOUBLE:{value:12,bytes:8}}),f=new c({IMAGE_WIDTH:256,IMAGE_HEIGHT:257,BITS_PER_SAMPLE:258,COMPRESSION:259,PHOTOMETRIC_INTERPRETATION:262,STRIP_OFFSETS:273,ORIENTATION:274,SAMPLES_PER_PIXEL:277,ROWS_PER_STRIP:278,STRIP_BYTE_COUNTS:279,X_RESOLUTION:282,Y_RESOLUTION:283,PLANAR_CONFIGURATION:284,
RESOLUTION_UNIT:296,SOFTWARE:305,COLOR_MAP:320,SAMPLE_FORMAT:339,MODEL_PIXEL_SCALE:33550,MODEL_TIEPOINT:33922,GEO_KEY_DIRECTORY:34735,GEO_DOUBLE_PARAMS:34736,GEO_ASCII_PARAMS:34737}),g=new Map([[d.BYTE,Uint8Array],[d.ASCII,Uint8Array],[d.SHORT,Uint16Array],[d.LONG,Uint32Array],[d.RATIONAL,Uint32Array],[d.SBYTE,Int8Array],[d.UNDEFINED,Uint8Array],[d.SSHORT,Int16Array],[d.SLONG,Int32Array],[d.SRATIONAL,Int32Array],[d.FLOAT,Float32Array],[d.DOUBLE,Float64Array]]);class h{constructor(a,b,c,d,e){this.tag=
a;this.type=b;this.count=c;this.offset=d;this.value=e}}class k{constructor(){this.height=this.width=0;this.buffer=null;this.metadata=[]}}class l{constructor(){}static read(a){var b=String.fromCharCode(...Array.from(a.slice(0,2)));e.fromValue(b);if(42!==a.readUInt8(2))throw Error('not a valid tiff file');b=a.readUInt32LE(4);console.log('offsetToFirstIFD',b);let c=[];var l=b;for(b=0;100>b;){console.log('currentIFDOffset',l);var m=a.readUInt16LE(l),n=a.readUInt32LE(l+2+12*m);console.log('next offset: ',
l+2+12*m);l=a.slice(l+2,l+2+12*m);for(var A=0;A<m;A++){var v=f.fromValue(l.readUInt16LE(12*A)),w=d.fromValue(l.readUInt16LE(12*A+2)),x=l.readUInt32LE(12*A+4),y=l.readUInt32LE(12*A+8),z=w.bytes*x;if(4>=z)z=y;else{var B=new Uint8Array(z);B.set(a.slice(y,y+z));z=new (g.get(w))(B.buffer);w===d.ASCII&&(z=String.fromCharCode(...z))}v=new h(v,w,x,y,z);c.push(v)}console.log('nextIFDOffset',n);if(0===n)break;l=n;b++}l=(a)=>{for(let b of c)if(b.tag===a)return b;return null};b=l(f.IMAGE_WIDTH,c).value;m=l(f.IMAGE_HEIGHT,
c).value;l(f.COMPRESSION,c);n=l(f.ROWS_PER_STRIP,c).value;v=l(f.STRIP_OFFSETS,c);w=l(f.STRIP_BYTE_COUNTS,c);l=Math.ceil(m/n);A=[];for(x=0;x<w.count;x++){y=w.type;z=w.offset+x*y.bytes;var t;y===d.SHORT?t=a.readUInt16LE(z):y===d.LONG&&(t=a.readUInt32LE(z));A.push(t)}t=[];for(w=0;w<v.count;w++){x=v.type;y=v.offset+w*x.bytes;var D;x===d.SHORT?D=a.readUInt16LE(y):x===d.LONG&&(D=a.readUInt32LE(y));t.push(D)}D=new Uint8Array(b*m*3);v=0;for(w=0;w<l;w++)for(x=t[w],x=a.slice(x,x+A[w]),y=3*b,z=0;z<n;z++)if(B=
x.slice(z*y,z*y+y),D.set(B,v*y),B.length===y)v++;else break;console.log(`width: ${b}`);console.log(`height: ${m}`);console.log(`numStrips: ${l}`);console.log('stripByteCounts',A.join(', '));console.log('stripOffsets',t.join(', '));a=new k;a.width=b;a.height=m;a.buffer=D;a.metadata=c;return a}}class m{constructor(){}static toTiffBuffer(a,b={}){let c=new Uint8Array([73,73,42,0,8,0,0,0]),[e,g]=[a.width,a.height];var k=[new h(f.IMAGE_WIDTH,d.SHORT,1,null,e),new h(f.IMAGE_HEIGHT,d.SHORT,1,null,g),new h(f.BITS_PER_SAMPLE,
d.SHORT,4,null,new Uint16Array([8,8,8,8])),new h(f.COMPRESSION,d.SHORT,1,null,1),new h(f.PHOTOMETRIC_INTERPRETATION,d.SHORT,1,null,2),new h(f.ORIENTATION,d.SHORT,1,null,1),new h(f.SAMPLES_PER_PIXEL,d.SHORT,1,null,4),new h(f.ROWS_PER_STRIP,d.LONG,1,null,g),new h(f.STRIP_BYTE_COUNTS,d.LONG,1,null,e*g*3),new h(f.PLANAR_CONFIGURATION,d.SHORT,1,null,1),new h(f.RESOLUTION_UNIT,d.SHORT,1,null,1),new h(f.SOFTWARE,d.ASCII,6,null,'......'),new h(f.STRIP_OFFSETS,d.LONG,1,null,null),new h(f.X_RESOLUTION,d.RATIONAL,
1,null,new Uint32Array([1,1])),new h(f.Y_RESOLUTION,d.RATIONAL,1,null,new Uint32Array([1,1]))];b.ifdEntries&&k.push(...b.ifdEntries);let l=12*k.length+14,m=new Map;b=new Map;for(var n of k){let a=new ArrayBuffer(12);var p=new DataView(a);p.setUint16(0,n.tag.value,!0);p.setUint16(2,n.type.value,!0);p.setUint32(4,n.count,!0);1===n.count&&4>=n.type.bytes?p.setUint32(8,n.value,!0):(p.setUint32(8,l,!0),p=new Uint8Array(n.count*n.type.bytes),n.type===d.ASCII?p.set(new Uint8Array(n.value.split('').map((a)=>
a.charCodeAt(0)))):p.set(new Uint8Array(n.value.buffer)),b.set(n.tag,p),l+=p.byteLength);m.set(n.tag,a)}n=l;(new DataView(m.get(f.STRIP_OFFSETS))).setUint32(8,n,!0);n=(a)=>{var b=a.reduce((a,b)=>a+b.byteLength,0);b=new Uint8Array(b);let c=0;for(let d of a)b.set(new Uint8Array(d),c),c+=d.byteLength;return b};k=n([new Uint16Array([k.length]),...m.values(),new Uint32Array([0])]);b=n([...b.values()]);a=n([c,k,b,a.buffer]);return{width:e,height:g,buffer:a}}}a.Tag=f;a.Type=d;a.IFDEntry=h;a.Image=k;a.Reader=
l;a.Exporter=m;return a}({});Potree.Shaders={};Potree.Shaders['pointcloud.vs']='\nprecision highp float;\nprecision highp int;\n\n#define max_clip_polygons 8\n#define PI 3.141592653589793\n\nattribute vec3 position;\nattribute vec3 color;\nattribute float intensity;\nattribute float classification;\nattribute float returnNumber;\nattribute float numberOfReturns;\nattribute float pointSourceID;\nattribute vec4 indices;\nattribute float spacing;\n\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 uViewInv;\n\nuniform float uScreenWidth;\nuniform float uScreenHeight;\nuniform float fov;\nuniform float near;\nuniform float far;\n\nuniform bool uDebug;\n\nuniform bool uUseOrthographicCamera;\nuniform float uOrthoWidth;\nuniform float uOrthoHeight;\n\n#define CLIPTASK_NONE 0\n#define CLIPTASK_HIGHLIGHT 1\n#define CLIPTASK_SHOW_INSIDE 2\n#define CLIPTASK_SHOW_OUTSIDE 3\n\n#define CLIPMETHOD_INSIDE_ANY 0\n#define CLIPMETHOD_INSIDE_ALL 1\n\nuniform int clipTask;\nuniform int clipMethod;\n#if defined(num_clipboxes) && num_clipboxes > 0\n\tuniform mat4 clipBoxes[num_clipboxes];\n#endif\n\n#if defined(num_clipspheres) && num_clipspheres > 0\n\tuniform mat4 uClipSpheres[num_clipspheres];\n#endif\n\n#if defined(num_clippolygons) && num_clippolygons > 0\n\tuniform int uClipPolygonVCount[num_clippolygons];\n\tuniform vec3 uClipPolygonVertices[num_clippolygons * 8];\n\tuniform mat4 uClipPolygonWVP[num_clippolygons];\n#endif\n\nuniform float size;\nuniform float minSize;\nuniform float maxSize;\n\nuniform float uPCIndex;\nuniform float uOctreeSpacing;\nuniform float uNodeSpacing;\nuniform float uOctreeSize;\nuniform vec3 uBBSize;\nuniform float uLevel;\nuniform float uVNStart;\nuniform bool uIsLeafNode;\n\nuniform vec3 uColor;\nuniform float uOpacity;\n\nuniform vec2 elevationRange;\nuniform vec2 intensityRange;\nuniform float intensityGamma;\nuniform float intensityContrast;\nuniform float intensityBrightness;\nuniform float rgbGamma;\nuniform float rgbContrast;\nuniform float rgbBrightness;\nuniform float uTransition;\nuniform float wRGB;\nuniform float wIntensity;\nuniform float wElevation;\nuniform float wClassification;\nuniform float wReturnNumber;\nuniform float wSourceID;\n\nuniform vec3 uShadowColor;\n\nuniform sampler2D visibleNodes;\nuniform sampler2D gradient;\nuniform sampler2D classificationLUT;\n\n#if defined(num_shadowmaps) && num_shadowmaps > 0\nuniform sampler2D uShadowMap[num_shadowmaps];\nuniform mat4 uShadowWorldView[num_shadowmaps];\nuniform mat4 uShadowProj[num_shadowmaps];\n#endif\n\nvarying vec3\tvColor;\nvarying float\tvLogDepth;\nvarying vec3\tvViewPosition;\nvarying float \tvRadius;\nvarying float \tvPointSize;\n\n\nfloat round(float number)\n{\n\treturn floor(number + 0.5);\n}\n\n// \n//    ###    ########     ###    ########  ######## #### ##     ## ########     ######  #### ######## ########  ######  \n//   ## ##   ##     ##   ## ##   ##     ##    ##     ##  ##     ## ##          ##    ##  ##       ##  ##       ##    ## \n//  ##   ##  ##     ##  ##   ##  ##     ##    ##     ##  ##     ## ##          ##        ##      ##   ##       ##       \n// ##     ## ##     ## ##     ## ########     ##     ##  ##     ## ######       ######   ##     ##    ######    ######  \n// ######### ##     ## ######### ##           ##     ##   ##   ##  ##                ##  ##    ##     ##             ## \n// ##     ## ##     ## ##     ## ##           ##     ##    ## ##   ##          ##    ##  ##   ##      ##       ##    ## \n// ##     ## ########  ##     ## ##           ##    ####    ###    ########     ######  #### ######## ########  ######  \n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n\n// ---------------------\n// OCTREE\n// ---------------------\n\n#if (defined(adaptive_point_size) || defined(color_type_lod)) && defined(tree_type_octree)\n/**\n * number of 1-bits up to inclusive index position\n * number is treated as if it were an integer in the range 0-255\n *\n */\nint numberOfOnes(int number, int index)\n{\n\tint numOnes = 0;\n\tint tmp = 128;\n\tfor(int i = 7; i >= 0; i--)\n\t{\n\t\tif(number >= tmp)\n\t\t{\n\t\t\tnumber = number - tmp;\n\n\t\t\tif(i <= index)\n\t\t\t{\n\t\t\t\tnumOnes++;\n\t\t\t}\n\t\t}\n\t\t\n\t\ttmp = tmp / 2;\n\t}\n\n\treturn numOnes;\n}\n\n\n/**\n * checks whether the bit at index is 1\n * number is treated as if it were an integer in the range 0-255\n *\n */\nbool isBitSet(int number, int index){\n\n\t// weird multi else if due to lack of proper array, int and bitwise support in WebGL 1.0\n\tint powi = 1;\n\n\tif(index == 0){\n\t\tpowi = 1;\n\t}else if(index == 1){\n\t\tpowi = 2;\n\t}else if(index == 2){\n\t\tpowi = 4;\n\t}else if(index == 3){\n\t\tpowi = 8;\n\t}else if(index == 4){\n\t\tpowi = 16;\n\t}else if(index == 5){\n\t\tpowi = 32;\n\t}else if(index == 6){\n\t\tpowi = 64;\n\t}else if(index == 7){\n\t\tpowi = 128;\n\t}else{\n\t\treturn false;\n\t}\n\n\tint ndp = number / powi;\n\n\treturn mod(float(ndp), 2.0) != 0.0;\n}\n\n\n/**\n * find the LOD at the point position\n */\nfloat getLOD(){\n\t\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tint iOffset = int(uVNStart);\n\tfloat depth = uLevel;\n\n\tfor(float i = 0.0; i <= 30.0; i++)\n\t{\n\t\tfloat nodeSizeAtLevel = uOctreeSize  / pow(2.0, i + uLevel + 0.0);\n\t\t\n\t\tvec3 index3d = (position-offset) / nodeSizeAtLevel;\n\t\tindex3d = floor(index3d + 0.5);\n\t\tint index = int(round(4.0 * index3d.x + 2.0 * index3d.y + index3d.z));\n\t\t\n\t\tvec4 value = texture2D(visibleNodes, vec2(float(iOffset) / 2048.0, 0.0));\n\t\tint mask = int(round(value.r * 255.0));\n\n\t\tif(isBitSet(mask, index))\n\t\t{\n\t\t\t// there are more visible child nodes at this position\n\t\t\tint advanceG = int(round(value.g * 255.0)) * 256;\n\t\t\tint advanceB = int(round(value.b * 255.0));\n\t\t\tint advanceChild = numberOfOnes(mask, index - 1);\n\t\t\tint advance = advanceG + advanceB + advanceChild;\n\n\t\t\tiOffset = iOffset + advance;\n\t\t\t\n\t\t\tdepth++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// no more visible child nodes at this position\n\t\t\treturn value.a * 255.0;\n\t\t\t//return depth;\n\t\t}\n\t\t\n\t\toffset = offset + (vec3(1.0, 1.0, 1.0) * nodeSizeAtLevel * 0.5) * index3d;\n\t}\n\t\t\n\treturn depth;\n}\n\nfloat getSpacing()\n{\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tint iOffset = int(uVNStart);\n\tfloat depth = uLevel;\n\tfloat spacing = uNodeSpacing;\n\n\tfor(float i = 0.0; i <= 30.0; i++)\n\t{\n\t\tfloat nodeSizeAtLevel = uOctreeSize / pow(2.0, i + uLevel + 0.0);\n\t\t\n\t\tvec3 index3d = (position-offset) / nodeSizeAtLevel;\n\t\tindex3d = floor(index3d + 0.5);\n\t\tint index = int(round(4.0 * index3d.x + 2.0 * index3d.y + index3d.z));\n\t\t\n\t\tvec4 value = texture2D(visibleNodes, vec2(float(iOffset) / 2048.0, 0.0));\n\t\tint mask = int(round(value.r * 255.0));\n\t\tfloat spacingFactor = value.a;\n\n\t\tif(i > 0.0)\n\t\t{\n\t\t\tspacing = spacing / (255.0 * spacingFactor);\n\t\t}\n\t\t\n\n\t\tif(isBitSet(mask, index))\n\t\t{\n\t\t\t// there are more visible child nodes at this position\n\t\t\tint advanceG = int(round(value.g * 255.0)) * 256;\n\t\t\tint advanceB = int(round(value.b * 255.0));\n\t\t\tint advanceChild = numberOfOnes(mask, index - 1);\n\t\t\tint advance = advanceG + advanceB + advanceChild;\n\n\t\t\tiOffset = iOffset + advance;\n\n\t\t\tdepth++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// no more visible child nodes at this position\n\t\t\treturn spacing;\n\t\t}\n\t\t\n\t\toffset = offset + (vec3(1.0, 1.0, 1.0) * nodeSizeAtLevel * 0.5) * index3d;\n\t}\n\t\t\n\treturn spacing;\n}\n\nfloat getPointSizeAttenuation()\n{\n\treturn pow(2.0, getLOD());\n}\n\n#endif\n\n// ---------------------\n// KD-TREE\n// ---------------------\n\n#if (defined(adaptive_point_size) || defined(color_type_lod)) && defined(tree_type_kdtree)\n\nfloat getLOD()\n{\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tfloat iOffset = 0.0;\n\tfloat depth = 0.0;\n\t\t\n\tvec3 size = uBBSize;\t\n\tvec3 pos = position;\n\t\t\n\tfor(float i = 0.0; i <= 1000.0; i++)\n\t{\n\t\tvec4 value = texture2D(visibleNodes, vec2(iOffset / 2048.0, 0.0));\n\t\t\n\t\tint children = int(value.r * 255.0);\n\t\tfloat next = value.g * 255.0;\n\t\tint split = int(value.b * 255.0);\n\t\t\n\t\tif(next == 0.0)\n\t\t{\n\t\t \treturn depth;\n\t\t}\n\t\t\n\t\tvec3 splitv = vec3(0.0, 0.0, 0.0);\n\t\tif(split == 1)\n\t\t{\n\t\t\tsplitv.x = 1.0;\n\t\t}\n\t\telse if(split == 2)\n\t\t{\n\t\t \tsplitv.y = 1.0;\n\t\t}\n\t\telse if(split == 4)\n\t\t{\n\t\t \tsplitv.z = 1.0;\n\t\t}\n\t\t\n\t\tiOffset = iOffset + next;\n\t\t\n\t\tfloat factor = length(pos * splitv / size);\n\t\tif(factor < 0.5)\n\t\t{\n\t\t\t// left\n\t\t\tif(children == 0 || children == 2)\n\t\t\t{\n\t\t\t\treturn depth;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// right\n\t\t\tpos = pos - size * splitv * 0.5;\n\t\t\tif(children == 0 || children == 1)\n\t\t\t{\n\t\t\t\treturn depth;\n\t\t\t}\n\t\t\tif(children == 3)\n\t\t\t{\n\t\t\t\tiOffset = iOffset + 1.0;\n\t\t\t}\n\t\t}\n\t\tsize = size * ((1.0 - (splitv + 1.0) / 2.0) + 0.5);\n\t\t\n\t\tdepth++;\n\t}\n\t\t\n\treturn depth;\t\n}\n\nfloat getPointSizeAttenuation()\n{\n\treturn 0.5 * pow(1.3, getLOD());\n}\n\n#endif\n\n// \n//    ###    ######## ######## ########  #### ########  ##     ## ######## ########  ######  \n//   ## ##      ##       ##    ##     ##  ##  ##     ## ##     ##    ##    ##       ##    ## \n//  ##   ##     ##       ##    ##     ##  ##  ##     ## ##     ##    ##    ##       ##       \n// ##     ##    ##       ##    ########   ##  ########  ##     ##    ##    ######    ######  \n// #########    ##       ##    ##   ##    ##  ##     ## ##     ##    ##    ##             ## \n// ##     ##    ##       ##    ##    ##   ##  ##     ## ##     ##    ##    ##       ##    ## \n// ##     ##    ##       ##    ##     ## #### ########   #######     ##    ########  ######                                                                               \n// \n// formula adapted from: http://www.dfstudios.co.uk/articles/programming/image-programming-algorithms/image-processing-algorithms-part-5-contrast-adjustment/\nfloat getContrastFactor(float contrast)\n{\n\treturn (1.0158730158730156 * (contrast + 1.0)) / (1.0158730158730156 - contrast);\n}\n\nvec3 getRGB()\n{\n\tvec3 rgb = color;\n\t\n\trgb = pow(rgb, vec3(rgbGamma));\n\trgb = rgb + rgbBrightness;\n\trgb = clamp(rgb, 0.0, 1.0);\n\t\n\treturn rgb;\n}\n\nfloat getIntensity()\n{\n\tfloat w = (intensity - intensityRange.x) / (intensityRange.y - intensityRange.x);\n\tw = pow(w, intensityGamma);\n\tw = w + intensityBrightness;\n\tw = (w - 0.5) * getContrastFactor(intensityContrast) + 0.5;\n\tw = clamp(w, 0.0, 1.0);\n\n\treturn w;\n}\n\nvec3 getElevation()\n{\n\tvec4 world = modelMatrix * vec4( position, 1.0 );\n\tfloat w = (world.z - elevationRange.x) / (elevationRange.y - elevationRange.x);\n\tvec3 cElevation = texture2D(gradient, vec2(w,1.0-w)).rgb;\n\t\n\treturn cElevation;\n}\n\nvec4 getClassification()\n{\n\tvec2 uv = vec2(classification / 255.0, 0.5);\n\tvec4 classColor = texture2D(classificationLUT, uv);\n\t\n\treturn classColor;\n}\n\nvec3 getReturnNumber()\n{\n\tif(numberOfReturns == 1.0)\n\t{\n\t\treturn vec3(1.0, 1.0, 0.0);\n\t}\n\telse\n\t{\n\t\tif(returnNumber == 1.0)\n\t\t{\n\t\t\treturn vec3(1.0, 0.0, 0.0);\n\t\t}\n\t\telse if(returnNumber == numberOfReturns)\n\t\t{\n\t\t\treturn vec3(0.0, 0.0, 1.0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn vec3(0.0, 1.0, 0.0);\n\t\t}\n\t}\n}\n\nvec3 getSourceID()\n{\n\tfloat w = mod(pointSourceID, 10.0) / 10.0;\n\treturn texture2D(gradient, vec2(w,1.0 - w)).rgb;\n}\n\nvec3 getCompositeColor()\n{\n\tvec3 c;\n\tfloat w;\n\n\tc += wRGB * getRGB();\n\tw += wRGB;\n\t\n\tc += wIntensity * getIntensity() * vec3(1.0, 1.0, 1.0);\n\tw += wIntensity;\n\t\n\tc += wElevation * getElevation();\n\tw += wElevation;\n\t\n\tc += wReturnNumber * getReturnNumber();\n\tw += wReturnNumber;\n\t\n\tc += wSourceID * getSourceID();\n\tw += wSourceID;\n\t\n\tvec4 cl = wClassification * getClassification();\n    c += cl.a * cl.rgb;\n\tw += wClassification * cl.a;\n\n\tc = c / w;\n\t\n\tif(w == 0.0)\n\t{\n\t\tgl_Position = vec4(100.0, 100.0, 100.0, 0.0);\n\t}\n\t\n\treturn c;\n}\n\n\n// \n//  ######  ##       #### ########  ########  #### ##    ##  ######   \n// ##    ## ##        ##  ##     ## ##     ##  ##  ###   ## ##    ##  \n// ##       ##        ##  ##     ## ##     ##  ##  ####  ## ##        \n// ##       ##        ##  ########  ########   ##  ## ## ## ##   #### \n// ##       ##        ##  ##        ##         ##  ##  #### ##    ##  \n// ##    ## ##        ##  ##        ##         ##  ##   ### ##    ##  \n//  ######  ######## #### ##        ##        #### ##    ##  ######                                                          \n// \nvec3 getColor()\n{\n\tvec3 color;\n\t\n\t#ifdef color_type_rgb\n\t\tcolor = getRGB();\n\t#elif defined color_type_height\n\t\tcolor = getElevation();\n\t#elif defined color_type_rgb_height\n\t\tvec3 cHeight = getElevation();\n\t\tcolor = (1.0 - uTransition) * getRGB() + uTransition * cHeight;\n\t#elif defined color_type_depth\n\t\tfloat linearDepth = gl_Position.w;\n\t\tfloat expDepth = (gl_Position.z / gl_Position.w) * 0.5 + 0.5;\n\t\tcolor = vec3(linearDepth, expDepth, 0.0);\n\t#elif defined color_type_intensity\n\t\tfloat w = getIntensity();\n\t\tcolor = vec3(w, w, w);\n\t#elif defined color_type_intensity_gradient\n\t\tfloat w = getIntensity();\n\t\tcolor = texture2D(gradient, vec2(w,1.0-w)).rgb;\n\t#elif defined color_type_color\n\t\tcolor = uColor;\n\t#elif defined color_type_lod\n\t\tfloat depth = getLOD();\n\t\tfloat w = depth / 10.0;\n\t\tcolor = texture2D(gradient, vec2(w,1.0-w)).rgb;\n\t#elif defined color_type_point_index\n\t\tcolor = indices.rgb;\n\t#elif defined color_type_classification\n\t\tvec4 cl = getClassification(); \n\t\tcolor = cl.rgb;\n\t#elif defined color_type_return_number\n\t\tcolor = getReturnNumber();\n\t#elif defined color_type_source\n\t\tcolor = getSourceID();\n\t#elif defined color_type_normal\n\t\tcolor = (modelMatrix * vec4(normal, 0.0)).xyz;\n\t#elif defined color_type_phong\n\t\tcolor = color;\n\t#elif defined color_type_composite\n\t\tcolor = getCompositeColor();\n\t#endif\n\t\n\treturn color;\n}\n\nfloat getPointSize()\n{\n\tfloat pointSize = 1.0;\n\t\n\tfloat slope = tan(fov / 2.0);\n\tfloat projFactor = -0.5 * uScreenHeight / (slope * vViewPosition.z);\n\t\n\tfloat r = uOctreeSpacing * 1.7;\n\tvRadius = r;\n\n\t#if defined fixed_point_size\n\t\tpointSize = size;\n\t#elif defined attenuated_point_size\n\t\tif(uUseOrthographicCamera)\n\t\t{\n\t\t\tpointSize = size;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpointSize = size * spacing * projFactor;\n\t\t}\n\t#elif defined adaptive_point_size\n\t\tif(uUseOrthographicCamera)\n\t\t{\n\t\t\tfloat worldSpaceSize = 1.0 * size * r / getPointSizeAttenuation();\n\t\t\tpointSize = (worldSpaceSize / uOrthoWidth) * uScreenWidth;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(uIsLeafNode && false)\n\t\t\t{\n\t\t\t\tpointSize = size * spacing * projFactor;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfloat worldSpaceSize = 1.0 * size * r / getPointSizeAttenuation();\n\t\t\t\tpointSize = worldSpaceSize * projFactor;\n\t\t\t}\n\t\t}\n\t#endif\n\n\tpointSize = max(minSize, pointSize);\n\tpointSize = min(maxSize, pointSize);\n\t\n\tvRadius = pointSize / projFactor;\n\n\treturn pointSize;\n}\n\n#if defined(num_clippolygons) && num_clippolygons > 0\nbool pointInClipPolygon(vec3 point, int polyIdx)\n{\n\tmat4 wvp = uClipPolygonWVP[polyIdx];\n\n\tvec4 pointNDC = wvp * vec4(point, 1.0);\n\tpointNDC.xy = pointNDC.xy / pointNDC.w;\n\n\tint j = uClipPolygonVCount[polyIdx] - 1;\n\tbool c = false;\n\tfor(int i = 0; i < 8; i++)\n\t{\n\t\tif(i == uClipPolygonVCount[polyIdx])\n\t\t{\n\t\t\tbreak;\n\t\t}\n\n\t\tvec3 verti = uClipPolygonVertices[polyIdx * 8 + i];\n\t\tvec3 vertj = uClipPolygonVertices[polyIdx * 8 + j];\n\n\t\tif(((verti.y > pointNDC.y) != (vertj.y > pointNDC.y)) && (pointNDC.x < (vertj.x-verti.x) * (pointNDC.y-verti.y) / (vertj.y-verti.y) + verti.x))\n\t\t{\n\t\t\tc = !c;\n\t\t}\n\n\t\tj = i;\n\t}\n\n\treturn c;\n}\n#endif\n\nvoid doClipping()\n{\n\t#if !defined color_type_composite\n\t\tvec4 cl = getClassification(); \n\t\tif(cl.a == 0.0)\n\t\t{\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 0.0);\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t#endif\n\n\tint clipVolumesCount = 0;\n\tint insideCount = 0;\n\n\t#if defined(num_clipboxes) && num_clipboxes > 0\n\t\tfor(int i = 0; i < num_clipboxes; i++)\n\t\t{\n\t\t\tvec4 clipPosition = clipBoxes[i] * modelMatrix * vec4( position, 1.0 );\n\t\t\tbool inside = -0.5 <= clipPosition.x && clipPosition.x <= 0.5;\n\t\t\tinside = inside && -0.5 <= clipPosition.y && clipPosition.y <= 0.5;\n\t\t\tinside = inside && -0.5 <= clipPosition.z && clipPosition.z <= 0.5;\n\n\t\t\tinsideCount = insideCount + (inside ? 1 : 0);\n\t\t\tclipVolumesCount++;\n\t\t}\t\n\t#endif\n\n\t#if defined(num_clippolygons) && num_clippolygons > 0\n\t\tfor(int i = 0; i < num_clippolygons; i++)\n\t\t{\n\t\t\tbool inside = pointInClipPolygon(position, i);\n\n\t\t\tinsideCount = insideCount + (inside ? 1 : 0);\n\t\t\tclipVolumesCount++;\n\t\t}\n\t#endif\n\n\tbool insideAny = insideCount > 0;\n\tbool insideAll = (clipVolumesCount > 0) && (clipVolumesCount == insideCount);\n\n\tif(clipMethod == CLIPMETHOD_INSIDE_ANY)\n\t{\n\t\tif(insideAny && clipTask == CLIPTASK_HIGHLIGHT)\n\t\t{\n\t\t\tvColor.r += 0.5;\n\t\t}\n\t\telse if(!insideAny && clipTask == CLIPTASK_SHOW_INSIDE)\n\t\t{\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 1.0);\n\t\t}\n\t\telse if(insideAny && clipTask == CLIPTASK_SHOW_OUTSIDE)\n\t\t{\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 1.0);\n\t\t}\n\t}\n\telse if(clipMethod == CLIPMETHOD_INSIDE_ALL)\n\t{\n\t\tif(insideAll && clipTask == CLIPTASK_HIGHLIGHT)\n\t\t{\n\t\t\tvColor.r += 0.5;\n\t\t}\n\t\telse if(!insideAll && clipTask == CLIPTASK_SHOW_INSIDE)\n\t\t{\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 1.0);\n\t\t}\n\t\telse if(insideAll && clipTask == CLIPTASK_SHOW_OUTSIDE)\n\t\t{\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 1.0);\n\t\t}\n\t}\n}\n\n// \n// ##     ##    ###    #### ##    ## \n// ###   ###   ## ##    ##  ###   ## \n// #### ####  ##   ##   ##  ####  ## \n// ## ### ## ##     ##  ##  ## ## ## \n// ##     ## #########  ##  ##  #### \n// ##     ## ##     ##  ##  ##   ### \n// ##     ## ##     ## #### ##    ## \n//\nvoid main()\n{\n\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\tvViewPosition = mvPosition.xyz;\n\tgl_Position = projectionMatrix * mvPosition;\n\n\tvLogDepth = log2(-mvPosition.z);\n\n\t// POINT SIZE\n\tfloat pointSize = getPointSize();\n\tgl_PointSize = pointSize;\n\tvPointSize = pointSize;\n\n\t// COLOR\n\tvColor = getColor();\n\n\t#if defined hq_depth_pass\n\t\tfloat originalDepth = gl_Position.w;\n\t\tfloat adjustedDepth = originalDepth + 2.0 * vRadius;\n\t\tfloat adjust = adjustedDepth / originalDepth;\n\n\t\tmvPosition.xyz = mvPosition.xyz * adjust;\n\t\tgl_Position = projectionMatrix * mvPosition;\n\t#endif\n\n\t// CLIPPING\n\tdoClipping();\n\n\t#if defined(num_clipspheres) && num_clipspheres > 0\n\t\tfor(int i = 0; i < num_clipspheres; i++)\n\t\t{\n\t\t\tvec4 sphereLocal = uClipSpheres[i] * mvPosition;\n\n\t\t\tfloat distance = length(sphereLocal.xyz);\n\n\t\t\tif(distance < 1.0)\n\t\t\t{\n\t\t\t\tfloat w = distance;\n\t\t\t\tvec3 cGradient = texture2D(gradient, vec2(w, 1.0 - w)).rgb;\n\t\t\t\t\n\t\t\t\tvColor = cGradient;\n\t\t\t\t//vColor = cGradient * 0.7 + vColor * 0.3;\n\t\t\t}\n\t\t}\n\t#endif\n\n\t#if defined(num_shadowmaps) && num_shadowmaps > 0\n\n\t\tconst float sm_near = 0.1;\n\t\tconst float sm_far = 10000.0;\n\n\t\tfor(int i = 0; i < num_shadowmaps; i++)\n\t\t{\n\t\t\tvec3 viewPos = (uShadowWorldView[i] * vec4(position, 1.0)).xyz;\n\t\t\tfloat distanceToLight = abs(viewPos.z);\n\t\t\t\n\t\t\tvec4 projPos = uShadowProj[i] * uShadowWorldView[i] * vec4(position, 1);\n\t\t\tvec3 nc = projPos.xyz / projPos.w;\n\t\t\t\n\t\t\tfloat u = nc.x * 0.5 + 0.5;\n\t\t\tfloat v = nc.y * 0.5 + 0.5;\n\n\t\t\tvec2 sampleStep = vec2(1.0 / (2.0*1024.0), 1.0 / (2.0*1024.0)) * 1.5;\n\t\t\tvec2 sampleLocations[9];\n\n\t\t\tsampleLocations[0] = vec2(0.0, 0.0);\n\t\t\tsampleLocations[1] = sampleStep;\n\t\t\tsampleLocations[2] = -sampleStep;\n\t\t\tsampleLocations[3] = vec2(sampleStep.x, -sampleStep.y);\n\t\t\tsampleLocations[4] = vec2(-sampleStep.x, sampleStep.y);\n\t\t\tsampleLocations[5] = vec2(0.0, sampleStep.y);\n\t\t\tsampleLocations[6] = vec2(0.0, -sampleStep.y);\n\t\t\tsampleLocations[7] = vec2(sampleStep.x, 0.0);\n\t\t\tsampleLocations[8] = vec2(-sampleStep.x, 0.0);\n\n\t\t\tfloat visibleSamples = 0.0;\n\t\t\tfloat numSamples = 0.0;\n\n\t\t\tfloat bias = vRadius * 2.0;\n\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t{\n\t\t\t\tvec4 depthMapValue = texture2D(uShadowMap[i], vec2(u, v) + sampleLocations[j]);\n\n\t\t\t\tfloat linearDepthFromSM = depthMapValue.x + bias;\n\t\t\t\tfloat linearDepthFromViewer = distanceToLight;\n\n\t\t\t\tif(linearDepthFromSM > linearDepthFromViewer)\n\t\t\t\t{\n\t\t\t\t\tvisibleSamples += 1.0;\n\t\t\t\t}\n\n\t\t\t\tnumSamples += 1.0;\n\t\t\t}\n\n\t\t\tfloat visibility = visibleSamples / numSamples;\n\n\t\t\tif(u < 0.0 || u > 1.0 || v < 0.0 || v > 1.0 || nc.x < -1.0 || nc.x > 1.0 || nc.y < -1.0 || nc.y > 1.0 || nc.z < -1.0 || nc.z > 1.0)\n\t\t\t{\n\t\t\t\t//vColor = vec3(0.0, 0.0, 0.2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvColor = vColor * visibility + vColor * uShadowColor * (1.0 - visibility);\n\t\t\t}\n\t\t}\n\n\t#endif\n}';
Potree.Shaders['pointcloud.fs']='\n#if defined paraboloid_point_shape\n\t#extension GL_EXT_frag_depth : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n\nuniform mat4 viewMatrix;\nuniform mat4 uViewInv;\nuniform mat4 uProjInv;\nuniform vec3 cameraPosition;\n\n\nuniform mat4 projectionMatrix;\nuniform float uOpacity;\n\nuniform float blendHardness;\nuniform float blendDepthSupplement;\nuniform float fov;\nuniform float uSpacing;\nuniform float near;\nuniform float far;\nuniform float uPCIndex;\nuniform float uScreenWidth;\nuniform float uScreenHeight;\n\nvarying vec3\tvColor;\nvarying float\tvLogDepth;\nvarying vec3\tvViewPosition;\nvarying float\tvRadius;\nvarying float \tvPointSize;\nvarying vec3 \tvPosition;\n\nfloat specularStrength = 1.0;\n\nvoid main()\n{\n\tvec3 color = vColor;\n\tfloat depth = gl_FragCoord.z;\n\n\t#if defined(circle_point_shape) || defined(paraboloid_point_shape) \n\t\tfloat u = 2.0 * gl_PointCoord.x - 1.0;\n\t\tfloat v = 2.0 * gl_PointCoord.y - 1.0;\n\t#endif\n\t\n\t#if defined(circle_point_shape)\n\t\tfloat cc = u*u + v*v;\n\t\tif(cc > 1.0)\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n\n\t#if defined color_type_point_index\n\t\tgl_FragColor = vec4(color, uPCIndex / 255.0);\n\t#else\n\t\tgl_FragColor = vec4(color, uOpacity);\n\t#endif\n\n\t#if defined paraboloid_point_shape\n\t\tfloat wi = 0.0 - ( u*u + v*v);\n\t\tvec4 pos = vec4(vViewPosition, 1.0);\n\t\tpos.z += wi * vRadius;\n\t\tfloat linearDepth = -pos.z;\n\t\tpos = projectionMatrix * pos;\n\t\tpos = pos / pos.w;\n\t\tfloat expDepth = pos.z;\n\t\tdepth = (pos.z + 1.0) / 2.0;\n\t\tgl_FragDepthEXT = depth;\n\t\t\n\t\t#if defined(color_type_depth)\n\t\t\tcolor.r = linearDepth;\n\t\t\tcolor.g = expDepth;\n\t\t#endif\n\t\t\n\t\t#if defined(use_edl)\n\t\t\tgl_FragColor.a = log2(linearDepth);\n\t\t#endif\n\t#else\n\t\t#if defined(use_edl)\n\t\t\tgl_FragColor.a = vLogDepth;\n\t\t#endif\n\t#endif\n\n\t#if defined(weighted_splats)\n\t\tfloat distance = 2.0 * length(gl_PointCoord.xy - 0.5);\n\t\tfloat weight = max(0.0, 1.0 - distance);\n\t\tweight = pow(weight, 1.5);\n\n\t\tgl_FragColor.a = weight;\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * weight;\n\t#endif\n}';Potree.PointCloudMaterial=class extends THREE.RawShaderMaterial{constructor(a={}){super();this.visibleNodesTexture=Potree.utils.generateDataTexture(2048,1,new THREE.Color(16777215));this.visibleNodesTexture.minFilter=THREE.NearestFilter;this.visibleNodesTexture.magFilter=THREE.NearestFilter;let b=function(a,b){return void 0!==a?a:b},c=b(a.size,1),e=b(a.minSize,2),d=b(a.maxSize,50);a=b(a.treeType,Potree.TreeType.OCTREE);this._pointSizeType=Potree.PointSizeType.FIXED;this._shape=Potree.PointShape.SQUARE;
this._pointColorType=Potree.PointColorType.RGB;this._useClipBox=!1;this.clipBoxes=[];this.clipPolygons=[];this._weighted=!1;this._gradient=Potree.Gradients.SPECTRAL;this.gradientTexture=Potree.PointCloudMaterial.generateGradientTexture(this._gradient);this.fog=this.lights=!1;this._treeType=a;this._snapEnabled=this._useEDL=!1;this._numSnapshots=0;this.defines=new Map;this._defaultElevationRangeChanged=this._defaultIntensityRangeChanged=!1;this.attributes={position:{type:'fv',value:[]},color:{type:'fv',
value:[]},normal:{type:'fv',value:[]},intensity:{type:'f',value:[]},classification:{type:'f',value:[]},returnNumber:{type:'f',value:[]},numberOfReturns:{type:'f',value:[]},pointSourceID:{type:'f',value:[]},indices:{type:'fv',value:[]}};this.uniforms={level:{type:'f',value:0},vnStart:{type:'f',value:0},spacing:{type:'f',value:1},blendHardness:{type:'f',value:2},blendDepthSupplement:{type:'f',value:0},fov:{type:'f',value:1},screenWidth:{type:'f',value:1},screenHeight:{type:'f',value:1},near:{type:'f',
value:.1},far:{type:'f',value:1},uColor:{type:'c',value:new THREE.Color(16777215)},uOpacity:{type:'f',value:1},size:{type:'f',value:c},minSize:{type:'f',value:e},maxSize:{type:'f',value:d},octreeSize:{type:'f',value:0},bbSize:{type:'fv',value:[0,0,0]},elevationRange:{type:'2fv',value:[0,0]},clipBoxCount:{type:'f',value:0},clipPolygonCount:{type:'i',value:0},clipBoxes:{type:'Matrix4fv',value:[]},clipPolygons:{type:'3fv',value:[]},clipPolygonVCount:{type:'iv',value:[]},clipPolygonVP:{type:'Matrix4fv',
value:[]},visibleNodes:{type:'t',value:this.visibleNodesTexture},pcIndex:{type:'f',value:0},gradient:{type:'t',value:this.gradientTexture},classificationLUT:{type:'t',value:this.classificationTexture},uHQDepthMap:{type:'t',value:null},toModel:{type:'Matrix4f',value:[]},diffuse:{type:'fv',value:[1,1,1]},transition:{type:'f',value:.5},intensityRange:{type:'fv',value:[0,65E3]},intensityGamma:{type:'f',value:1},intensityContrast:{type:'f',value:0},intensityBrightness:{type:'f',value:0},rgbGamma:{type:'f',
value:1},rgbContrast:{type:'f',value:0},rgbBrightness:{type:'f',value:0},wRGB:{type:'f',value:1},wIntensity:{type:'f',value:0},wElevation:{type:'f',value:0},wClassification:{type:'f',value:0},wReturnNumber:{type:'f',value:0},wSourceID:{type:'f',value:0},useOrthographicCamera:{type:'b',value:!1},clipTask:{type:'i',value:1},clipMethod:{type:'i',value:1},uSnapshot:{type:'tv',value:[]},uSnapshotDepth:{type:'tv',value:[]},uSnapView:{type:'Matrix4fv',value:[]},uSnapProj:{type:'Matrix4fv',value:[]},uSnapProjInv:{type:'Matrix4fv',
value:[]},uSnapViewInv:{type:'Matrix4fv',value:[]},uShadowColor:{type:'3fv',value:[0,0,0]}};this.classification=Potree.Classification.DEFAULT;this.defaultAttributeValues.normal=[0,0,0];this.defaultAttributeValues.classification=[0,0,0];this.defaultAttributeValues.indices=[0,0,0,0];this.vertexShader=this.getDefines()+Potree.Shaders['pointcloud.vs'];this.fragmentShader=this.getDefines()+Potree.Shaders['pointcloud.fs'];this.vertexColors=THREE.VertexColors}setDefine(a,b){void 0!==b&&null!==b?this.defines.get(a)!==
b&&(this.defines.set(a,b),this.updateShaderSource()):this.removeDefine(a)}removeDefine(a){this.defines.delete(a)}updateShaderSource(){this.vertexShader=this.getDefines()+Potree.Shaders['pointcloud.vs'];this.fragmentShader=this.getDefines()+Potree.Shaders['pointcloud.fs'];this.depthFunc=THREE.LessEqualDepth;this.needsUpdate=this.depthWrite=this.depthTest=!0}getDefines(){let a=[];this.pointSizeType===Potree.PointSizeType.FIXED?a.push('#define fixed_point_size'):this.pointSizeType===Potree.PointSizeType.ATTENUATED?
a.push('#define attenuated_point_size'):this.pointSizeType===Potree.PointSizeType.ADAPTIVE&&a.push('#define adaptive_point_size');this.shape===Potree.PointShape.SQUARE?a.push('#define square_point_shape'):this.shape===Potree.PointShape.CIRCLE?a.push('#define circle_point_shape'):this.shape===Potree.PointShape.PARABOLOID&&a.push('#define paraboloid_point_shape');this._useEDL&&a.push('#define use_edl');this._snapEnabled&&a.push('#define snap_enabled');this._pointColorType===Potree.PointColorType.RGB?
a.push('#define color_type_rgb'):this._pointColorType===Potree.PointColorType.COLOR?a.push('#define color_type_color'):this._pointColorType===Potree.PointColorType.DEPTH?a.push('#define color_type_depth'):this._pointColorType===Potree.PointColorType.HEIGHT?a.push('#define color_type_height'):this._pointColorType===Potree.PointColorType.INTENSITY?a.push('#define color_type_intensity'):this._pointColorType===Potree.PointColorType.INTENSITY_GRADIENT?a.push('#define color_type_intensity_gradient'):this._pointColorType===
Potree.PointColorType.LOD?a.push('#define color_type_lod'):this._pointColorType===Potree.PointColorType.POINT_INDEX?a.push('#define color_type_point_index'):this._pointColorType===Potree.PointColorType.CLASSIFICATION?a.push('#define color_type_classification'):this._pointColorType===Potree.PointColorType.RETURN_NUMBER?a.push('#define color_type_return_number'):this._pointColorType===Potree.PointColorType.SOURCE?a.push('#define color_type_source'):this._pointColorType===Potree.PointColorType.NORMAL?
a.push('#define color_type_normal'):this._pointColorType===Potree.PointColorType.PHONG?a.push('#define color_type_phong'):this._pointColorType===Potree.PointColorType.RGB_HEIGHT?a.push('#define color_type_rgb_height'):this._pointColorType===Potree.PointColorType.COMPOSITE&&a.push('#define color_type_composite');this._treeType===Potree.TreeType.OCTREE?a.push('#define tree_type_octree'):this._treeType===Potree.TreeType.KDTREE&&a.push('#define tree_type_kdtree');this.weighted&&a.push('#define weighted_splats');
for(let [,b]of this.defines)a.push(b);return a.join('\n')}setClipBoxes(a){if(a){var b=this.clipBoxes.length!==a.length&&(0===a.length||0===this.clipBoxes.length);this.uniforms.clipBoxCount.value=this.clipBoxes.length;this.clipBoxes=a;b&&this.updateShaderSource();this.uniforms.clipBoxes.value=new Float32Array(16*this.clipBoxes.length);for(b=0;b<this.clipBoxes.length;b++)this.uniforms.clipBoxes.value.set(a[b].inverse.elements,16*b);for(a=0;a<this.uniforms.clipBoxes.value.length;a++)Number.isNaN(this.uniforms.clipBoxes.value[a])&&
(this.uniforms.clipBoxes.value[a]=Infinity)}}setClipPolygons(a,b){a&&(this.clipPolygons=a,this.clipPolygons.length!==a.length&&this.updateShaderSource())}get gradient(){return this._gradient}set gradient(a){this._gradient!==a&&(this._gradient=a,this.gradientTexture=Potree.PointCloudMaterial.generateGradientTexture(this._gradient),this.uniforms.gradient.value=this.gradientTexture)}get useOrthographicCamera(){return this.uniforms.useOrthographicCamera.value}set useOrthographicCamera(a){this.uniforms.useOrthographicCamera.value!==
a&&(this.uniforms.useOrthographicCamera.value=a)}get classification(){return this._classification}set classification(a){let b={};for(let c of Object.keys(a))b[c]=a[c].clone();if(void 0===this._classification)a=!1;else{a=Object.keys(b).length===Object.keys(this._classification).length;for(let c of Object.keys(b))a=(a=a&&void 0!==this._classification[c])&&b[c].equals(this._classification[c])}a||(this._classification=b,this.recomputeClassification())}recomputeClassification(){this.classificationTexture=
Potree.PointCloudMaterial.generateClassificationTexture(this._classification);this.uniforms.classificationLUT.value=this.classificationTexture;this.dispatchEvent({type:'material_property_changed',target:this})}get numSnapshots(){return this._numSnapshots}set numSnapshots(a){this._numSnapshots=a}get snapEnabled(){return this._snapEnabled}set snapEnabled(a){this._snapEnabled!==a&&(this._snapEnabled=a,this.updateShaderSource())}get spacing(){return this.uniforms.spacing.value}set spacing(a){this.uniforms.spacing.value!==
a&&(this.uniforms.spacing.value=a)}get useClipBox(){return this._useClipBox}set useClipBox(a){this._useClipBox!==a&&(this._useClipBox=a,this.updateShaderSource())}get clipTask(){return this.uniforms.clipTask.value}set clipTask(a){this.uniforms.clipTask.value=a}get clipMethod(){return this.uniforms.clipMethod.value}set clipMethod(a){this.uniforms.clipMethod.value=a}get weighted(){return this._weighted}set weighted(a){this._weighted!==a&&(this._weighted=a,this.updateShaderSource())}get fov(){return this.uniforms.fov.value}set fov(a){this.uniforms.fov.value!==
a&&(this.uniforms.fov.value=a)}get screenWidth(){return this.uniforms.screenWidth.value}set screenWidth(a){this.uniforms.screenWidth.value!==a&&(this.uniforms.screenWidth.value=a)}get screenHeight(){return this.uniforms.screenHeight.value}set screenHeight(a){this.uniforms.screenHeight.value!==a&&(this.uniforms.screenHeight.value=a)}get near(){return this.uniforms.near.value}set near(a){this.uniforms.near.value!==a&&(this.uniforms.near.value=a)}get far(){return this.uniforms.far.value}set far(a){this.uniforms.far.value!==
a&&(this.uniforms.far.value=a)}get opacity(){return this.uniforms.uOpacity.value}set opacity(a){this.uniforms&&this.uniforms.uOpacity&&this.uniforms.uOpacity.value!==a&&(this.uniforms.uOpacity.value=a,this.updateShaderSource(),this.dispatchEvent({type:'opacity_changed',target:this}),this.dispatchEvent({type:'material_property_changed',target:this}))}get pointColorType(){return this._pointColorType}set pointColorType(a){this._pointColorType!==a&&(this._pointColorType=a,this.updateShaderSource(),this.dispatchEvent({type:'point_color_type_changed',
target:this}),this.dispatchEvent({type:'material_property_changed',target:this}))}get pointSizeType(){return this._pointSizeType}set pointSizeType(a){this._pointSizeType!==a&&(this._pointSizeType=a,this.updateShaderSource(),this.dispatchEvent({type:'point_size_type_changed',target:this}),this.dispatchEvent({type:'material_property_changed',target:this}))}get useEDL(){return this._useEDL}set useEDL(a){this._useEDL!==a&&(this._useEDL=a,this.updateShaderSource())}get color(){return this.uniforms.uColor.value}set color(a){this.uniforms.uColor.value.equals(a)||
(this.uniforms.uColor.value.copy(a),this.dispatchEvent({type:'color_changed',target:this}),this.dispatchEvent({type:'material_property_changed',target:this}))}get shape(){return this._shape}set shape(a){this._shape!==a&&(this._shape=a,this.updateShaderSource(),this.dispatchEvent({type:'point_shape_changed',target:this}),this.dispatchEvent({type:'material_property_changed',target:this}))}get treeType(){return this._treeType}set treeType(a){this._treeType!==a&&(this._treeType=a,this.updateShaderSource())}get bbSize(){return this.uniforms.bbSize.value}set bbSize(a){this.uniforms.bbSize.value=
a}get size(){return this.uniforms.size.value}set size(a){this.uniforms.size.value!==a&&(this.uniforms.size.value=a,this.dispatchEvent({type:'point_size_changed',target:this}),this.dispatchEvent({type:'material_property_changed',target:this}))}get elevationRange(){return this.uniforms.elevationRange.value}set elevationRange(a){if(this.uniforms.elevationRange.value[0]!==a[0]||this.uniforms.elevationRange.value[1]!==a[1])this.uniforms.elevationRange.value=a,this._defaultElevationRangeChanged=!0,this.dispatchEvent({type:'material_property_changed',
target:this})}get heightMin(){return this.uniforms.elevationRange.value[0]}set heightMin(a){this.elevationRange=[a,this.elevationRange[1]]}get heightMax(){return this.uniforms.elevationRange.value[1]}set heightMax(a){this.elevationRange=[this.elevationRange[0],a]}get transition(){return this.uniforms.transition.value}set transition(a){this.uniforms.transition.value=a}get intensityRange(){return this.uniforms.intensityRange.value}set intensityRange(a){a instanceof Array&&2===a.length&&(a[0]!==this.uniforms.intensityRange.value[0]||
a[1]!==this.uniforms.intensityRange.value[1])&&(this.uniforms.intensityRange.value=a,this._defaultIntensityRangeChanged=!0,this.dispatchEvent({type:'material_property_changed',target:this}))}get intensityGamma(){return this.uniforms.intensityGamma.value}set intensityGamma(a){this.uniforms.intensityGamma.value!==a&&(this.uniforms.intensityGamma.value=a,this.dispatchEvent({type:'material_property_changed',target:this}))}get intensityContrast(){return this.uniforms.intensityContrast.value}set intensityContrast(a){this.uniforms.intensityContrast.value!==
a&&(this.uniforms.intensityContrast.value=a,this.dispatchEvent({type:'material_property_changed',target:this}))}get intensityBrightness(){return this.uniforms.intensityBrightness.value}set intensityBrightness(a){this.uniforms.intensityBrightness.value!==a&&(this.uniforms.intensityBrightness.value=a,this.dispatchEvent({type:'material_property_changed',target:this}))}get rgbGamma(){return this.uniforms.rgbGamma.value}set rgbGamma(a){this.uniforms.rgbGamma.value!==a&&(this.uniforms.rgbGamma.value=a,
this.dispatchEvent({type:'material_property_changed',target:this}))}get rgbContrast(){return this.uniforms.rgbContrast.value}set rgbContrast(a){this.uniforms.rgbContrast.value!==a&&(this.uniforms.rgbContrast.value=a,this.dispatchEvent({type:'material_property_changed',target:this}))}get rgbBrightness(){return this.uniforms.rgbBrightness.value}set rgbBrightness(a){this.uniforms.rgbBrightness.value!==a&&(this.uniforms.rgbBrightness.value=a,this.dispatchEvent({type:'material_property_changed',target:this}))}get weightRGB(){return this.uniforms.wRGB.value}set weightRGB(a){this.uniforms.wRGB.value!==
a&&(this.uniforms.wRGB.value=a,this.dispatchEvent({type:'material_property_changed',target:this}))}get weightIntensity(){return this.uniforms.wIntensity.value}set weightIntensity(a){this.uniforms.wIntensity.value!==a&&(this.uniforms.wIntensity.value=a,this.dispatchEvent({type:'material_property_changed',target:this}))}get weightElevation(){return this.uniforms.wElevation.value}set weightElevation(a){this.uniforms.wElevation.value!==a&&(this.uniforms.wElevation.value=a,this.dispatchEvent({type:'material_property_changed',
target:this}))}get weightClassification(){return this.uniforms.wClassification.value}set weightClassification(a){this.uniforms.wClassification.value!==a&&(this.uniforms.wClassification.value=a,this.dispatchEvent({type:'material_property_changed',target:this}))}get weightReturnNumber(){return this.uniforms.wReturnNumber.value}set weightReturnNumber(a){this.uniforms.wReturnNumber.value!==a&&(this.uniforms.wReturnNumber.value=a,this.dispatchEvent({type:'material_property_changed',target:this}))}get weightSourceID(){return this.uniforms.wSourceID.value}set weightSourceID(a){this.uniforms.wSourceID.value!==
a&&(this.uniforms.wSourceID.value=a,this.dispatchEvent({type:'material_property_changed',target:this}))}static generateGradientTexture(a){let b=document.createElement('canvas');b.width=64;b.height=64;let c=b.getContext('2d');c.rect(0,0,64,64);let e=c.createLinearGradient(0,0,64,64);for(let b=0;b<a.length;b++){let c=a[b];e.addColorStop(c[0],'#'+c[1].getHexString())}c.fillStyle=e;c.fill();a=new THREE.CanvasTexture(b);a.needsUpdate=!0;a.minFilter=THREE.LinearFilter;return a}static generateClassificationTexture(a){let b=
new Uint8Array(262144);for(let c=0;256>c;c++)for(let e=0;256>e;e++){let d=c+256*e,f;f=a[c]?a[c]:a[c%32]?a[c%32]:a.DEFAULT;b[4*d]=255*f.x;b[4*d+1]=255*f.y;b[4*d+2]=255*f.z;b[4*d+3]=255*f.w}a=new THREE.DataTexture(b,256,256,THREE.RGBAFormat);a.magFilter=THREE.NearestFilter;a.needsUpdate=!0;return a}disableEvents(){void 0===this._hiddenListeners&&(this._hiddenListeners=this._listeners,this._listeners={})}enableEvents(){this._listeners=this._hiddenListeners;this._hiddenListeners=void 0}copyFrom(a){for(let b of this.uniforms)this.uniforms[b].value=
a.uniforms[b].value}};Potree.XHRFactory={config:{withCredentials:!1,customHeaders:[{header:null,value:null}]},createXMLHttpRequest:function(){let a=new XMLHttpRequest;a.overrideMimeType('text/plain');if(this.config.customHeaders&&Array.isArray(this.config.customHeaders)&&0<this.config.customHeaders.length){let b=a.open,c=this.config.customHeaders;a.open=function(){b.apply(this,[].slice.call(arguments));c.forEach(function(b){b.header&&b.value&&a.setRequestHeader(b.header,b.value)})}}return a}};Potree.BasicGroup=class extends THREE.Mesh{constructor(){super(new THREE.Geometry,new THREE.MeshBasicMaterial({opacity:0,wireframe:!1,transparent:!0}));this.rotation.set(-Math.PI/2,0,0);this.frustumCulled=!0;this.pointclouds=[];this.pointBudget=1E4;this.nodeSize=30;this.nodeLoadRate=2}raycast(a,b){}setPointBudget(a){this.pointBudget=a}onBeforeRender(a,b,c,e,d,f){for(b=0;b<this.pointclouds.length;b++)e=this.pointclouds[b],e.minimumNodePixelSize=this.nodeSize,e.showBoundingBox=!1,e.generateDEM=!1;Potree.pointBudget=
this.pointBudget;Potree.pointLoadLimit=this.pointBudget*this.nodeLoadRate;Potree.updatePointClouds(this.pointclouds,c,a)}recalculateBoxGeometry(){var a=this.getBoundingBox(),b=a.getSize(new THREE.Vector3),c=a.getCenter(new THREE.Vector3);a=new THREE.Matrix4;a.makeTranslation(c.x,-c.z,c.y);b=new THREE.BoxBufferGeometry(b.x,b.z,b.y);b.applyMatrix(a);this.geometry=b}add(a){THREE.Object3D.prototype.add.call(this,a);a instanceof Potree.PointCloudTree&&(this.pointclouds.push(a),this.recalculateBoxGeometry());
console.log(this)}test(){var a=new THREE.PointsMaterial({size:.05,sizeAttenuation:!0,vertexColors:!0});this.traverse(function(b){'Points'===b.type&&(b.material=a)})}remove(a){THREE.Object3D.prototype.remove.call(this,a);a instanceof Potree.PointCloudTree&&(a=this.pointclouds.indexOf(a),-1!==a&&(this.pointclouds.splice(a,1),this.recalculateBoxGeometry()))}getBoundingBox(){var a=new THREE.Box3;this.updateMatrixWorld(!0);for(var b=0;b<this.pointclouds.length;b++){var c=this.pointclouds[b];c.updateMatrixWorld(!0);
c=Potree.utils.computeTransformedBoundingBox(c.pcoGeometry.tightBoundingBox?c.pcoGeometry.tightBoundingBox:c.boundingBox,c.matrixWorld);a.union(c)}return a}estimateHeightAt(a){var b=null,c=Infinity,e;for(e of this.pointclouds)if(void 0!==e.root.geometryNode){var d=null,f=Infinity,g=a.clone().sub(e.position);g.z=0;g=new THREE.Ray(g,new THREE.Vector3(0,0,1));for(var h=[e.root];0<h.length;){var k=h.pop(),l=k.getBoundingBox();if(g.intersectBox(l)){l=k.geometryNode.mean.z+e.position.z+k.geometryNode.boundingBox.min.z;
k.geometryNode.spacing<=f&&(d=l,f=k.geometryNode.spacing);for(var m of Object.keys(k.children))k.children[m].geometryNode&&h.push(k.children[m])}}if(null===b||f<c)b=d,c=f}return b}};Potree.Group=class extends Potree.BasicGroup{constructor(){super();this.buffers=new Map;this.shaders=new Map;this.textures=new Map;this.types=new Map}getExtensions(a){this.types.set(Float32Array,a.FLOAT);this.types.set(Uint8Array,a.UNSIGNED_BYTE);this.types.set(Uint16Array,a.UNSIGNED_SHORT);a.getExtension('EXT_frag_depth');a.getExtension('WEBGL_depth_texture');var b=a.getExtension('OES_vertex_array_object');a.createVertexArray=b.createVertexArrayOES.bind(b);a.bindVertexArray=b.bindVertexArrayOES.bind(b)}onBeforeRender(a,
b,c,e,d,f){super.onBeforeRender(a,b,c,e,d,f);b=a.context;void 0===b.bindVertexArray&&this.getExtensions(b);e=this.fetchOctrees();for(var g of e.octrees)this.renderOctree(a,g,g.visibleNodes,c);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,null);a.state.reset()}createBuffer(a,b){var c=new Potree.WebGLBuffer;c.vao=a.createVertexArray();c.numElements=b.attributes.position.count;a.bindVertexArray(c.vao);for(var e in b.attributes){var d=b.attributes[e],f=a.createBuffer();a.bindBuffer(a.ARRAY_BUFFER,
f);a.bufferData(a.ARRAY_BUFFER,d.array,a.STATIC_DRAW);var g=Potree.attributeLocations[e],h=d.normalized,k=this.types.get(d.array.constructor);a.vertexAttribPointer(g,d.itemSize,k,h,0,0);a.enableVertexAttribArray(g);c.vbos.set(e,{handle:f,name:e,count:d.count,itemSize:d.itemSize,type:b.attributes.position.array.constructor,version:0})}a.bindBuffer(a.ARRAY_BUFFER,null);a.bindVertexArray(null);return c}updateBuffer(a,b){var c=this.buffers.get(b);a.bindVertexArray(c.vao);for(var e in b.attributes){var d=
b.attributes[e],f=Potree.attributeLocations[e],g=d.normalized,h=this.types.get(d.array.constructor);if(c.vbos.has(e)){var k=c.vbos.get(e).handle;c.vbos.get(e).version=d.version}else k=a.createBuffer(),c.vbos.set(e,{handle:k,name:e,count:d.count,itemSize:d.itemSize,type:b.attributes.position.array.constructor,version:d.version});a.bindBuffer(a.ARRAY_BUFFER,k);a.bufferData(a.ARRAY_BUFFER,d.array,a.STATIC_DRAW);a.vertexAttribPointer(f,d.itemSize,h,g,0,0);a.enableVertexAttribArray(f)}a.bindBuffer(a.ARRAY_BUFFER,
null);a.bindVertexArray(null)}fetchOctrees(){for(var a=[],b=[this];0<b.length;){var c=b.pop();c instanceof Potree.PointCloudTree?a.push(c):(c=c.children.filter((a)=>a.visible),b.push(...c))}return{octrees:a}}renderNodes(a,b,c,e,d,f){a=a.context;b=b.material;d=d.matrixWorldInverse;var g=new THREE.Matrix4,h=new Float32Array(16),k;for(k of c)if(void 0===Potree.debug.allowedNodes||Potree.debug.allowedNodes.includes(k.name)){var l=k.sceneNode.matrixWorld;g.multiplyMatrices(d,l);e&&(c=e.offsets.get(k),
f.setUniform1f('uVNStart',c));c=k.getLevel();f.setUniform('uDebug',!0===k.debug);if(k instanceof Potree.PointCloudOctreeNode)var m=0===Object.keys(k.children).length;else k instanceof Potree.PointCloudArena4DNode&&(m=k.geometryNode.isLeaf);f.setUniform('uIsLeafNode',m);var n=f.uniformLocations.modelMatrix;n&&(h.set(l.elements),a.uniformMatrix4fv(n,!1,h));n=f.uniformLocations.modelViewMatrix;h.set(g.elements);a.uniformMatrix4fv(n,!1,h);if(b.clipPolygons&&0<b.clipPolygons.length){n=[];var p=[];for(r of b.clipPolygons){d=
r.viewMatrix;var u=r.projMatrix.clone().multiply(d).multiply(l);n.push(r.markers.length);p.push(u)}l=[].concat(...p.map((a)=>a.elements));u=Array(24*b.clipPolygons.length);for(p=0;p<b.clipPolygons.length;p++){var r=b.clipPolygons[p];for(var q=0;q<r.markers.length;q++)u[24*p+3*q]=r.markers[q].position.x,u[24*p+(3*q+1)]=r.markers[q].position.y,u[24*p+(3*q+2)]=r.markers[q].position.z}a.uniform1iv(f.uniformLocations['uClipPolygonVCount[0]'],n);a.uniformMatrix4fv(f.uniformLocations['uClipPolygonWVP[0]'],
!1,l);a.uniform3fv(f.uniformLocations['uClipPolygonVertices[0]'],u)}f.setUniform1f('uLevel',c);f.setUniform1f('uNodeSpacing',k.geometryNode.estimatedSpacing);f.setUniform1f('uPCIndex',p);c=k.geometryNode.geometry;l=null;if(this.buffers.has(c)){l=this.buffers.get(c);for(var C in c.attributes)c.attributes[C].version>l.vbos.get(C).version&&this.updateBuffer(a,c)}else l=this.createBuffer(a,c),this.buffers.set(c,l);a.bindVertexArray(l.vao);a.drawArrays(a.POINTS,0,l.numElements)}a.bindVertexArray(null)}renderOctree(a,
b,c,e){var d=a.context,f=b.material,g=e.matrixWorldInverse,h=e.matrixWorld,k=e.projectionMatrix,l=(new THREE.Matrix4).getInverse(k);new THREE.Matrix4;var m=null,n=0;if(0<=f.pointSizeType&&(f.pointSizeType===Potree.PointSizeType.ADAPTIVE||f.pointColorType===Potree.PointColorType.LOD)){m=b.computeVisibilityTextureData(c,e);var p=f.visibleNodesTexture;p.image.data.set(m.data);p.needsUpdate=!0}p=null;this.shaders.has(f)?(p=this.shaders.get(f),u=f.vertexShader,r=f.fragmentShader):(p=new Potree.Shader(d,
'pointcloud',f.vertexShader,f.fragmentShader),this.shaders.set(f,p));r=['#define num_shadowmaps0','#define num_snapshots'+(f.snapEnabled?f.numSnapshots:0),'#define num_clipboxes'+(f.clipBoxes&&f.clipBoxes.length?f.clipBoxes.length:0),'#define num_clipspheres0','#define num_clippolygons'+(f.clipPolygons&&f.clipPolygons.length?f.clipPolygons.length:0)].join('\n');var u=r+'\n'+f.vertexShader,r=r+'\n'+f.fragmentShader;p.update(u,r);f.needsUpdate=!1;for(var q of Object.keys(f.uniforms))if(u=f.uniforms[q],
't'==u.type&&(u=u.value))this.textures.has(u)||(r=new Potree.WebGLTexture(d,u),this.textures.set(u,r)),this.textures.get(u).update();d.useProgram(p.program);1>f.opacity?(d.enable(d.BLEND),d.blendFunc(d.SRC_ALPHA,d.ONE),d.depthMask(!1),d.disable(d.DEPTH_TEST)):(d.disable(d.BLEND),d.depthMask(!0),d.enable(d.DEPTH_TEST));p.setUniformMatrix4('projectionMatrix',k);p.setUniformMatrix4('viewMatrix',g);p.setUniformMatrix4('uViewInv',h);p.setUniformMatrix4('uProjInv',l);g=f.screenHeight;p.setUniform1f('uScreenWidth',
f.screenWidth);p.setUniform1f('uScreenHeight',g);p.setUniform1f('fov',Math.PI*e.fov/180);p.setUniform1f('near',e.near);p.setUniform1f('far',e.far);e instanceof THREE.OrthographicCamera?(p.setUniform('uUseOrthographicCamera',!0),p.setUniform('uOrthoWidth',e.right-e.left),p.setUniform('uOrthoHeight',e.top-e.bottom)):p.setUniform('uUseOrthographicCamera',!1);0===f.clipBoxes.length+f.clipPolygons.length?p.setUniform1i('clipTask',Potree.ClipTask.NONE):p.setUniform1i('clipTask',f.clipTask);p.setUniform1i('clipMethod',
f.clipMethod);f.clipBoxes&&0<f.clipBoxes.length&&d.uniformMatrix4fv(p.uniformLocations['clipBoxes[0]'],!1,f.uniforms.clipBoxes.value);p.setUniform1f('size',f.size);p.setUniform1f('maxSize',f.uniforms.maxSize.value);p.setUniform1f('minSize',f.uniforms.minSize.value);p.setUniform1f('uOctreeSpacing',f.spacing);p.setUniform('uOctreeSize',f.uniforms.octreeSize.value);p.setUniform3f('uColor',f.color.toArray());p.setUniform1f('uOpacity',f.opacity);p.setUniform2f('elevationRange',f.elevationRange);p.setUniform2f('intensityRange',
f.intensityRange);p.setUniform1f('intensityGamma',f.intensityGamma);p.setUniform1f('intensityContrast',f.intensityContrast);p.setUniform1f('intensityBrightness',f.intensityBrightness);p.setUniform1f('rgbGamma',f.rgbGamma);p.setUniform1f('rgbContrast',f.rgbContrast);p.setUniform1f('rgbBrightness',f.rgbBrightness);p.setUniform1f('uTransition',f.transition);p.setUniform1f('wRGB',f.weightRGB);p.setUniform1f('wIntensity',f.weightIntensity);p.setUniform1f('wElevation',f.weightElevation);p.setUniform1f('wClassification',
f.weightClassification);p.setUniform1f('wReturnNumber',f.weightReturnNumber);p.setUniform1f('wSourceID',f.weightSourceID);g=this.textures.get(f.visibleNodesTexture);p.setUniform1i('visibleNodesTexture',n);d.activeTexture(d.TEXTURE0+n);d.bindTexture(g.target,g.id);n++;g=this.textures.get(f.gradientTexture);p.setUniform1i('gradient',n);d.activeTexture(d.TEXTURE0+n);d.bindTexture(g.target,g.id);n++;g=this.textures.get(f.classificationTexture);p.setUniform1i('classificationLUT',n);d.activeTexture(d.TEXTURE0+
n);d.bindTexture(g.target,g.id);n++;if(!0===f.snapEnabled){k=p.uniformLocations['uSnapshot[0]'];l=p.uniformLocations['uSnapshotDepth[0]'];g=Array(5).fill(n).map((a,b)=>a+b);h=Array(5).fill(1+Math.max(...g)).map((a,b)=>a+b);n=1+Math.max(...h);d.uniform1iv(k,g);d.uniform1iv(l,h);for(n=0;5>n;n++){u=f.uniforms.uSnapshot.value[n];l=f.uniforms.uSnapshotDepth.value[n];if(!u)break;k=a.properties.get(u).__webglTexture;l=a.properties.get(l).__webglTexture;q=h[n];d.activeTexture(d[`TEXTURE${g[n]}`]);d.bindTexture(d.TEXTURE_2D,
k);d.activeTexture(d[`TEXTURE${q}`]);d.bindTexture(d.TEXTURE_2D,l)}n=[].concat(...f.uniforms.uSnapView.value.map((a)=>a.elements));d.uniformMatrix4fv(p.uniformLocations['uSnapView[0]'],!1,n);n=[].concat(...f.uniforms.uSnapProj.value.map((a)=>a.elements));d.uniformMatrix4fv(p.uniformLocations['uSnapProj[0]'],!1,n);n=[].concat(...f.uniforms.uSnapProjInv.value.map((a)=>a.elements));d.uniformMatrix4fv(p.uniformLocations['uSnapProjInv[0]'],!1,n);n=[].concat(...f.uniforms.uSnapViewInv.value.map((a)=>a.elements));
d.uniformMatrix4fv(p.uniformLocations['uSnapViewInv[0]'],!1,n)}this.renderNodes(a,b,c,m,e,p);d.activeTexture(d.TEXTURE2);d.bindTexture(d.TEXTURE_2D,null);d.activeTexture(d.TEXTURE0)}};
